openapi: 3.0.1

info:
  x-logo:
    url: "https://i.imgur.com/YI6VLQx.png"
    backgroundColor: "#f9f8f1"
    altText: "IQ Telemetry"


  title: Payway Mifare API v1
  description: |-
    
    Payway Mifare API for all administrative functions and reporting. 
    If you wish to access this api, please contact us with the desired endpoints and reason.
    
    NOTE: Access restricted, logged, rate limited API.
  
  
  contact:
    name: Ryan Pomario
    email: ryan@iqt.co.za

  version: 1.0.0

externalDocs:
  description: Click here to learn more about Payway.
  url: https://payway.iqt.co.za

tags:
  - name: Data
    description: Endpoints that interact with data via the database.
  - name: Functions
    description: Endpoints that perform functions relating to the database.

  - name: Users
    description: Endpoints that relate to mifare users.
  - name: Transactions
    description: Endpoints that relate to mifare transactions.
  - name: Sites
    description: Endpoints that relate to mifare sites.
  - name: Products
    description: Endpoints that relate to mifare products.
  - name: Cardholders
    description: Endpoints that relate to mifare cardholders.
  - name: Cardholder Sites
    description: Endpoints that relate to cardholder sites, one to many, linking tables.
  - name: Cardholder Products
    description: Endpoints that relate to cardholder products, one to many, linking tables.

x-tagGroups:
  - name: User Management
    tags:
      - Users
  - name: Platform Configurations and Administration
    tags:
      - Sites
      - Products
      - Cardholders
  - name: Reporting and Logging
    tags:
      - Transactions
  - name: Cross-Table Linking
    tags:
      - Cardholder Sites
      - Cardholder Products

servers:
  - url: '{scheme}://payway.iqt.co.za/{version}/mifare'
    variables:
      scheme:
        description: 'The API is accessible via https.'
        enum:
          - 'https'
        default: 'https'
      version:
        description: 'The API version.'
        enum:
          - 'v1'
        default: 'v1'

paths:
  '/users':
    post:
      tags:
        - Data
        - Users
      summary: Update object for users
      description: |-
        Users are the main, and only way, to "access" resources in the Mifare Backend. **NOTE:** Mifare users are SEPARATE from Payway users.
        
        Every user is linked to a site, product, cardholder and transaction. A mifare user only has the ability to access resources 
        that they are directly linked too, unless the "super_user" flag is set, in which case you
        have system wide access. 
        
        Every user that has been created will receive a "x-user-token".
        This token is a randomly generated unique string that identifies a user account.
        These tokens do not expire.
        
        Super admin users have the highest access level. These accounts get access to all resources in the Mifare API.
      

      operationId: createUser
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                username:
                  type: string
                  maxLength: 100
                  example: Test account
                active:
                  type: boolean
              required: [ "username" ]
      responses:
        '200':
          description: Returns an array of "user" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "username": "Test Account",
                        "token": "902acE77778A168a7c7d2d08Lm7359zb3",
                        "created_at": "2024-08-27T09:09:48.314Z",
                        "active": true,
                        "super_user": false
                      }
                    ],
                    "entries": 1,
                    "timestamp": 1723639902458
                  }
  '/users/{id}':
    get:
      tags:
        - Data
        - Users
      operationId: getUser
      summary: Get object for user
      responses:
        '200':
          description: Returns an array of "user" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "username": "Test Account",
                        "token": "902acE77778A168a7c7d2d08Lm7359zb3",
                        "created_at": "2024-07-17T22:00:00.000Z",
                        "super_user": true,
                        "active": true
                      }
                    ],
                    "entries": 1,
                    "timestamp": 1723639902458
                  }
    put:
      summary: Update object for users
      operationId: updateUser
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                username:
                  type: string
                  maxLength: 100
                  example: Test account
                active:
                  type: boolean
      responses:
        '200':
          description: List of user objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "username": "Test Account",
                        "token": "902acE77778A168a7c7d2d08Lm7359zb3",
                        "created_at": "2024-08-27T09:09:48.314Z",
                        "active": true,
                        "super_user": false
                      }
                    ],
                    "entries": 1,
                    "timestamp": 1723639902458
                  }
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"

  '/transactions/{id}':
    get:
      tags:
        - Data
        - Transactions
      summary: Get object for transactions
      description: |-
        This endpoint is used to return transactions made by Mifare users. These transactions are linked to a card and site.
        All successful and non successful transactions can be found in this resource.

      operationId: getTransaction
      responses:
        '200':
          description: Returns an array of "transaction" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TransactionResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "tx_id": "BPVXEIG4ZAX8WIGN02SHUG1Y7",
                        "full_name": "Testing, Account",
                        "card_no": "123",
                        "user_number": "testing",
                        "action": "debit",
                        "wallet": "997",
                        "amount": "1",
                        "balance": "996",
                        "channel": "",
                        "stock_level": 0,
                        "timestamp": 1722848535,
                        "result": "DR",
                        "agent": "abcd",
                        "agent_name": "",
                        "payment_reference_1": "testing",
                        "payment_reference_2": "JIM001",
                        "user_id": 1,
                        "cardholder_id": 1,
                        "site_id": 1,
                        "seq_key": "0",
                        "created_at": "2024-08-05T07:02:15.650Z"
                      }
                    ],
                    "entries": 1,
                    "timestamp": 1724759082131
                  }
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"

  '/sites':
    post:
      tags:
        - Data
        - Sites
      summary: Create object for site
      description: |-
        Sites are a physical location that the Mifare system is used at. 
        A site is linked to a Mifare user that then owns that site. 
        The "mifare_site_id" field, found in the [API Backend](https://docs.iqt.co.za/pages/backend.html#tag/Sites/operation/getSites), is used to match the Payway Site to it's equivalent Mifare Site.

      operationId: createSite
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                user_id:
                  type: integer
                name:
                  type: string
                  maxLength: 45
                  example: BigTech Corp
                address:
                  type: string
                  maxLength: 60
                  example: 123 Street Lane Cape Town 7700
                location:
                  type: string
                  maxLength: 45
                  description: Extra level of physical location identification can be used here.
                  example: Games Room
                active:
                  type: boolean
              required: [ "user_id", "name", "active" ]
      responses:
        '200':
          description: Obtain an array of "site" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SitesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "user_id": 1,
                        "name": "BigTech Corp",
                        "address": "123 Street Lane Cape Town 7700",
                        "location": "Games Room",
                        "active": true
                      }
                    ],
                    "entries": 1,
                    "timestamp": 1724759082131
                  }

  '/sites/{id}':
    get:
      tags:
        - Data
        - Sites
      operationId: getSite
      summary: Get object for site
      responses:
        '200':
          description: Returns an array of "site" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SitesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "user_id": 1,
                        "name": "BigTech Corp",
                        "address": "123 Street Lane Cape Town 7700",
                        "location": "Games Room",
                        "active": true
                      }
                    ],
                    "entries": 1,
                    "timestamp": 1724759082131
                  }
    put:
      tags:
        - Data
        - Sites
      summary: Update object for site
      operationId: updateSite
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                user_id:
                  type: integer
                name:
                  type: string
                  maxLength: 45
                  example: BigTech Corp
                address:
                  type: string
                  maxLength: 60
                  example: 123 Street Lane Cape Town 7700
                location:
                  type: string
                  maxLength: 45
                  description: Extra level of physical location identification can be used here.
                  example: Games Room
                active:
                  type: boolean
      responses:
        '200':
          description: Returns an array of "site" items updated by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SitesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "user_id": 1,
                        "name": "BigTech Corp",
                        "address": "123 Street Lane Cape Town 7700",
                        "location": "Games Room",
                        "active": true
                      }
                    ],
                    "entries": 1,
                    "timestamp": 1724759082131
                  }
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"

  '/products':
    post:
      tags:
        - Data
        - Products
      summary: Create object for products
      description: |-
        TODO
      operationId: createProduct
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                user_id:
                  type: integer
                description:
                  type: string
                  maxLength: 100
                  description: TODO
                  example: TODO
                product_code:
                  type: string
                  maxLength: 45
                  description: TODO
                  example: TODO
                sap_code:
                  type: string
                  maxLength: 45
                  description: TODO
                  example: TODO
                location:
                  type: string
                  maxLength: 80
                  description: TODO
                  example: TODO
                active:
                  type: boolean
              required: [ "user_id", "description", "active" ]
      responses:
        '200':
          description: Returns product object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductsResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "user_id": 1,
                        "description": "Testing new product.",
                        "product_code": "A78J-HJ3B",
                        "sap_code": "3153",
                        "location": "Games Room",
                        "active": true
                      }
                    ],
                    "entries": 1,
                    "timestamp": 1724759082131
                  }

  '/products/{id}':
    get:
      tags:
        - Data
        - Products
      operationId: getProduct
      summary: Get object for product
      responses:
        '200':
          description: Returns an array of "product" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductsResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "user_id": 1,
                        "description": "Testing new product.",
                        "product_code": "A78J-HJ3B",
                        "sap_code": "3153",
                        "location": "Games Room",
                        "active": true
                      }
                    ],
                    "entries": 1,
                    "timestamp": 1724759082131
                  }
    put:
      tags:
        - Data
        - Products
      summary: Update object for product
      operationId: updateProduct
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                user_id:
                  type: integer
                description:
                  type: string
                  maxLength: 100
                  description: TODO
                  example: TODO
                product_code:
                  type: string
                  maxLength: 45
                  description: TODO
                  example: TODO
                sap_code:
                  type: string
                  maxLength: 45
                  description: TODO
                  example: TODO
                location:
                  type: string
                  maxLength: 80
                  description: TODO
                  example: TODO
                active:
                  type: boolean
      responses:
        '200':
          description: Returns an array of "product" items updated by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductsResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "user_id": 1,
                        "description": "Testing new product.",
                        "product_code": "A78J-HJ3B",
                        "sap_code": "3153",
                        "location": "Games Room",
                        "active": true
                      }
                    ],
                    "entries": 1,
                    "timestamp": 1724759082131
                  }
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"

  '/cardholders_sites':
    post:
      tags:
        - Data
        - Cardholder Sites
      summary: Create object for cardholder site
      description: |-
        TODO
      operationId: createCardholderSite
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                site_id:
                  type: integer
                cardholder_id:
                  type: integer
                user_id:
                  type: integer
                active:
                  type: boolean
              required: [ "site_id", "cardholder_id", "user_id", "active" ]
      responses:
        '200':
          description: Returns cardholder site object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CardholdersSitesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "site_id": 3,
                        "cardholder_id": 10,
                        "user_id": 3,
                        "active": true
                      }
                    ],
                    "entries": 1,
                    "timestamp": 1724759082131
                  }

  '/cardholders_sites/{id}':
    get:
      tags:
        - Data
        - Cardholder Sites
      operationId: getCardholderSite
      summary: Get object for cardholder site
      responses:
        '200':
          description: Returns an array of "cardholder site" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CardholdersSitesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "site_id": 3,
                        "cardholder_id": 10,
                        "user_id": 3,
                        "active": true
                      }
                    ],
                    "entries": 1,
                    "timestamp": 1724759082131
                  }

    put:
      tags:
        - Data
        - Cardholder Sites
      summary: Update object for cardholder site
      operationId: updateCardholderSite
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                site_id:
                  type: integer
                cardholder_id:
                  type: integer
                user_id:
                  type: integer
                active:
                  type: boolean
      responses:
        '200':
          description: Returns an array of "cardholder site" items updated by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CardholdersSitesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "site_id": 3,
                        "cardholder_id": 10,
                        "user_id": 3,
                        "active": true
                      }
                    ],
                    "entries": 1,
                    "timestamp": 1724759082131
                  }
    delete:
      tags:
        - Data
        - Cardholder Sites
      operationId: deleteCardholderSite
      summary: Delete object for cardholders sites
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeleteResponse"
              example:
                {
                  "success": true,
                  "data": "Successfully deleted record. [1]",
                  "timestamp": 1723108298846
                }
          description: Returns result of delete
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"

  '/cardholders_products':
    post:
      tags:
        - Data
        - Cardholder Products
      summary: Create object for provider
      description: |-
        TODO
      operationId: createCardholderProduct
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                cardholder_id:
                  type: integer
                product_id:
                  type: integer
                balance:
                  type: integer
                  description: TODO
                restock_flag:
                  type: boolean
                  description: TODO
                unlimited:
                  type: boolean
                  description: TODO
                take_limit:
                  type: integer
                  description: TODO
                  example: TODO
                user_id:
                  type: integer
                active:
                  type: boolean
              required: [ "cardholder_id", "product_id", "user_id", "active" ]
      responses:
        '200':
          description: Returns cardholder product created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CardholdersProductsResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "cardholder_id": 4,
                        "product_id": 5,
                        "balance": 10,
                        "restock_flag": true,
                        "unlimited": true,
                        "active": true,
                        "user_id": 1,
                        "take_limit": 2
                      }
                    ],
                    "entries": 1,
                    "timestamp": 1724759082131
                  }

  '/cardholders_products/{id}':
    get:
      tags:
        - Data
        - Cardholder Products
      operationId: getCardholderProduct
      summary: Get object for cardholder product
      responses:
        '200':
          description: Returns an array of "cardholder product" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CardholdersProductsResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "cardholder_id": 4,
                        "product_id": 5,
                        "balance": 10,
                        "restock_flag": true,
                        "unlimited": true,
                        "active": true,
                        "user_id": 1,
                        "take_limit": 2
                      }
                    ],
                    "entries": 1,
                    "timestamp": 1724759082131
                  }
    put:
      tags:
        - Data
        - Cardholder Products
      summary: Update object for cardholder product
      operationId: updateCardholderProduct
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                cardholder_id:
                  type: integer
                product_id:
                  type: integer
                balance:
                  type: integer
                  description: TODO
                restock_flag:
                  type: boolean
                  description: TODO
                unlimited:
                  type: boolean
                  description: TODO
                take_limit:
                  type: integer
                  description: TODO
                  example: TODO
                user_id:
                  type: integer
                active:
                  type: boolean
      responses:
        '200':
          description: Returns an array of "cardholder product" items updated by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CardholdersProductsResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "cardholder_id": 4,
                        "product_id": 5,
                        "balance": 10,
                        "restock_flag": true,
                        "unlimited": true,
                        "active": true,
                        "user_id": 1,
                        "take_limit": 2
                      }
                    ],
                    "entries": 1,
                    "timestamp": 1724759082131
                  }
    delete:
      tags:
        - Data
        - Cardholder Products
      operationId: deleteCardholderProduct
      summary: Delete object for cardholders products
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeleteResponse"
              example:
                {
                  "success": true,
                  "data": "Successfully deleted record. [1]",
                  "timestamp": 1723108298846
                }
          description: Returns result of delete
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"

  '/cardholders':
    post:
      summary: Create object for cardholders
      description: |-
        TODO
      operationId: createCardholder
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                user_id:
                  type: integer
                card_no:
                  type: string
                  description: TODO
                  example: TODO
                  maxLength: 45
                first_name:
                  type: string
                  maxLength: 45
                last_name:
                  type: string
                  maxLength: 45
                user_number:
                  type: string
                  description: TODO
                  example: TODO
                  maxLength: 45
                contact_number:
                  type: string
                  maxLength: 20
                  example: '+27876545611'
                  pattern: ^(\+|\d)[0-9]{7,16}$
                negative_credit_allowed:
                  type: boolean
                  description: TODO
                throttle_multiple_requests:
                  type: boolean
                  description: TODO
                balance_accumulate:
                  type: boolean
                  description: TODO
                cost_centre:
                  type: string
                  description: TODO
                  example: TODO
                  maxLength: 45
                topup_value:
                  type: number
                  description: TODO
                  minimum: 0
                topup_reoccurrence:
                  type: boolean
                active:
                  type: boolean
              required: [ "user_id", "card_no", "active" ]
      responses:
        '200':
          description: Returns cardholder object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CardholdersResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 3,
                        "user_id": 2,
                        "card_no": "123555",
                        "first_name": "Testing",
                        "last_name": "Name",
                        "user_number": "12343",
                        "contact_number": "+27854561288",
                        "negative_credit_allowed": true,
                        "throttle_multiple_requests": true,
                        "balance_accumulate": true,
                        "cost_centre": "testing",
                        "wallet": "0.00",
                        "topup_value": "10.00",
                        "topup_reoccurance": false,
                        "topup_date": null,
                        "topup_amount": null,
                        "last_transaction_device_uid": null,
                        "last_transaction_timestamp": null,
                        "import_site_id": null,
                        "import_guid": null,
                        "active": true,
                        "created_at": "2024-08-27T10:44:03.542Z",
                        "updated_at": "2024-08-27T10:44:03.542Z",
                        "last_transaction_result": null
                      }
                    ],
                    "entries": 1,
                    "timestamp": 1724759082131
                  }

  '/cardholders/{id}':
    get:
      tags:
        - Data
        - Cardholders
      operationId: getCardholder
      summary: Get object for cardholder
      responses:
        '200':
          description: Returns an array of "cardholder" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CardholdersResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 3,
                        "user_id": 2,
                        "card_no": "123555",
                        "first_name": "Testing",
                        "last_name": "Name",
                        "user_number": "12343",
                        "contact_number": "+27854561288",
                        "negative_credit_allowed": true,
                        "throttle_multiple_requests": true,
                        "balance_accumulate": true,
                        "cost_centre": "testing",
                        "wallet": "0.00",
                        "topup_value": "10.00",
                        "topup_reoccurance": false,
                        "topup_date": null,
                        "topup_amount": null,
                        "last_transaction_device_uid": null,
                        "last_transaction_timestamp": null,
                        "import_site_id": null,
                        "import_guid": null,
                        "active": true,
                        "created_at": "2024-08-27T10:44:03.542Z",
                        "updated_at": "2024-08-27T10:44:03.542Z",
                        "last_transaction_result": null
                      }
                    ],
                    "entries": 1,
                    "timestamp": 1724759082131
                  }
    put:
      tags:
        - Data
        - Cardholders
      summary: Update object for cardholder
      operationId: updateCardholder
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                user_id:
                  type: integer
                card_no:
                  type: string
                  description: TODO
                  example: TODO
                  maxLength: 45
                first_name:
                  type: string
                  maxLength: 45
                last_name:
                  type: string
                  maxLength: 45
                user_number:
                  type: string
                  description: TODO
                  example: TODO
                  maxLength: 45
                contact_number:
                  type: string
                  maxLength: 20
                  example: '+27876545611'
                  pattern: ^(\+|\d)[0-9]{7,16}$
                negative_credit_allowed:
                  type: boolean
                  description: TODO
                throttle_multiple_requests:
                  type: boolean
                  description: TODO
                balance_accumulate:
                  type: boolean
                  description: TODO
                cost_centre:
                  type: string
                  example: TODO
                  description: TODO
                  maxLength: 45
                topup_value:
                  type: number
                  description: TODO
                  minimum: 0
                topup_reoccurrence:
                  type: boolean
                  description: TODO
      responses:
        '200':
          description: List of user objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CardholdersResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 3,
                        "user_id": 2,
                        "card_no": "123555",
                        "first_name": "Testing",
                        "last_name": "Name",
                        "user_number": "12343",
                        "contact_number": "+27854561288",
                        "negative_credit_allowed": true,
                        "throttle_multiple_requests": true,
                        "balance_accumulate": true,
                        "cost_centre": "testing",
                        "wallet": "0.00",
                        "topup_value": "10.00",
                        "topup_reoccurance": false,
                        "topup_date": null,
                        "topup_amount": null,
                        "last_transaction_device_uid": null,
                        "last_transaction_timestamp": null,
                        "import_site_id": null,
                        "import_guid": null,
                        "active": true,
                        "created_at": "2024-08-27T10:44:03.542Z",
                        "updated_at": "2024-08-27T10:44:03.542Z",
                        "last_transaction_result": null
                      }
                    ],
                    "entries": 1,
                    "timestamp": 1724759082131
                  }
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"


components:
  securitySchemes:
    XUserToken:
      type: apiKey
      in: header
      name: x-user-token
    XApiKey:
      type: apiKey
      in: header
      name: x-api-key
  schemas:
    UserResponse:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        token:
          type: string
          description: x-user-token used in all endpoints.
        created_at:
          type: string
        super_admin:
          type: boolean
        active:
          type: boolean
    TransactionResponse:
      type: object
      properties:
        id:
          type: integer
        tx_id:
          type: string
          description: TODO
        full_name:
          type: string
          description: TODO
        card_no:
          type: string
          description: TODO
        user_number:
          type: string
          description: TODO
        action:
          type: string
          description: TODO
        wallet:
          type: number
          description: TODO
        amount:
          type: number
          description: TODO
        balance:
          type: number
          description: TODO
        channel:
          type: string
          description: TODO
        stock_level:
          type: integer
          description: TODO
        timestamp:
          type: integer
          description: TODO
        result:
          type: string
          description: TODO
        agent:
          type: string
          description: TODO
        agent_name:
          type: string
          description: TODO
        payment_reference_1:
          type: integer
          description: TODO
        payment_reference_2:
          type: integer
          description: TODO
        user_id:
          type: integer
        cardholder_id:
          type: integer
        site_id:
          type: integer
        seq_key:
          type: string
          description: TODO
        created_at:
          type: integer
    SitesResponse:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        name:
          type: string
        address:
          type: string
        location:
          type: string
          description: Extra level of physical location identification can be used here.
        active:
          type: boolean
    ProductsResponse:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        description:
          type: string
          description: TODO
        product_code:
          type: string
          description: TODO
        sap_code:
          type: string
          description: TODO
        location:
          type: string
          description: TODO
        active:
          type: boolean
    CardholdersSitesResponse:
      type: object
      properties:
        id:
          type: integer
        site_id:
          type: integer
        cardholder_id:
          type: integer
        user_id:
          type: integer
        active:
          type: boolean
    CardholdersProductsResponse:
      type: object
      properties:
        id:
          type: integer
        cardholder_id:
          type: integer
        product_id:
          type: integer
        balance:
          type: integer
        restock_flag:
          type: boolean
        unlimited:
          type: boolean
        take_limit:
          type: integer
        user_id:
          type: integer
        active:
          type: boolean
    CardholdersResponse:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        card_no:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        user_number:
          type: string
        contact_number:
          type: string
        negative_credit_allowed:
          type: boolean
        throttle_multiple_requests:
          type: boolean
        balance_accumulate:
          type: boolean
        cost_centre:
          type: string
        wallet:
          type: number
        topup_value:
          type: number
        topup_reoccurrence:
          type: boolean
        topup_date:
          type: string
        topup_amount:
          type: number
        last_transaction_device_uid:
          type: string
        last_transaction_timestamp:
          type: string
        last_transaction_result:
          type: string
        import_site_id:
          type: integer
        import_guid:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        active:
          type: boolean
    DeleteResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: string
        timestamp:
          type: string

    numberIndex:
      type: string
      pattern: '[0-9]$'
    selectAll:
      type: string
      enum:
        - _all

  parameters:
    idParam:
      in: path
      name: id
      required: true
      schema:
        oneOf:
          - $ref: "#/components/schemas/numberIndex"
          - $ref: "#/components/schemas/selectAll"
      examples:
        id:
          value: 12
          summary: Search by specific primary key aka "id".
        all:
          value: '_all'
          summary: Search by all accessible objects.

    offsetParam:
      in: query
      name: offset
      required: false
      schema:
        type: integer
        minimum: 0
      example: 1

    limitParam:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: 0
      example: 3

    orderParam:
      in: query
      name: order_by
      required: false
      schema:
        anyOf:
          - type: string
            pattern: ^\w+:(asc|desc)$
          - type: array
            items:
              type: string
            pattern: ^\w+:(asc|desc)$
      examples:
        asc:
          value: "field:asc"
          summary: Filters the field specific by ascending order.
        desc:
          value: "field:desc"
          summary: Filters the field specific by descending order.

    countParam:
      in: query
      name: count_entries
      required: false
      schema:
        type: boolean
      example: true

    others:
      in: query
      name: field_name
      schema:
        additionalProperties: true
      examples:
        textContaining:
          value: "%Store%"
          summary: Searches in specific field for text containing the word "Store".
        textStart:
          value: "Store%"
          summary: Searches in specific field for text starting with the word "Store".
        textEnd:
          value: "%Store"
          summary: Searches in specific field for text ending with the word "Store".
        textFind:
          value: "Store"
          summary: Searches in specific field for text equaling to "Store".
        numberFind:
          value: 108
          summary: Searches in specific field for number equaling to "108".
        dateFind:
          value: "2024-08-01 00:00:00"
          summary: Searches in specific field for date equaling to "2024-08-01 00:00:00".

security:
  - XUserToken: [ ]
  - XApiKey: [ ]
