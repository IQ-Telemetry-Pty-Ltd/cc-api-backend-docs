openapi: 3.0.1

info:
  x-logo:
    url: "https://i.imgur.com/YI6VLQx.png"
    backgroundColor: "#f9f8f1"
    altText: "IQ Telemetry"


  title: Payway API v1
  description: |-
    
    Payway Backend API for all administrative functions and reporting. 
    If you wish to access this api, please contact us with the desired endpoints and reason.
    
    NOTE: Access restricted, logged, rate limited API.
  
  
  contact:
    name: Ryan Pomario
    email: ryan@iqt.co.za

  version: 1.1.3

externalDocs:
  description: Click here to learn more about Payway.
  url: https://payway3.iqt.co.za

tags:
  - name: Data
    description: Endpoints that interact with data via the database.
  - name: Functions
    description: Endpoints that perform functions relating to the database.

  - name: Token
    description: Endpoints that allow you to authenticate with the API.
  - name: Users
    description: Endpoints that allow you to control Payway users.
  - name: Users Access
    description: Endpoints that allow you to control Payway users access.
  - name: Roles
    description: Endpoints that allow you to control roles.
  - name: Users Roles
    description: Endpoints that allow you to control user roles.
  - name: Levels
    description: Endpoints that relate to levels in the business logic of Payway.
  - name: Other Business Logic
    description: Endpoints that relate to other business logic.
  - name: Logs
    description: Endpoints that relate to viewing logs in the Payway backend.
  - name: Resellers Organisations
    description: Endpoints that relate to reseller organisation, many to many, linking tables.
  - name: Companies Providers
    description: Endpoints that relate to companies providers, one to many, linking tables.
  - name: Connectivity History
    description: Endpoints that relate to connectivity history.
  - name: Transactions
    description: Endpoints that relate to transactions / payments.
  - name: Refunds
    description: Endpoints that relate to refunds for transactions / payments.
  - name: Device Activity Audit
    description: Endpoints that relate to auditing or logging actions.
  - name: Customers
    description: Endpoints that relate to customers.
  - name: Password Reset
    description: Endpoints that relate to resetting users password.
  - name: Access
    description: Endpoints that relate to user access.
  - name: Reseller
    description: Endpoints that relate to reseller level.
  - name: Organisations
    description: Endpoints that relate to organisation level.
  - name: Companies
    description: Endpoints that relate to company level.
  - name: Sites
    description: Endpoints that relate to site level.
  - name: Device
    description: Endpoints that relate to device level.
  - name: Asset States
    description: Endpoints that relate to asset states.
  - name: Emulations
    description: Endpoints that relate to emulation.
  - name: Host Hardware
    description: Endpoints that relate to host hardware.
  - name: Pos Types
    description: Endpoints that relate to pos types.
  - name: Providers
    description: Endpoints that relate to providers.
  - name: Status Codes
    description: Endpoints that relate to status codes.
  - name: Bookings
    description: Endpoints that relate to bookings.
  - name: Notifications
    description: Endpoints that relate to application notification centers.
  - name: Modules
    description: Endpoints that relate to modules.
  - name: Access Levels
    description: Endpoints that relate to access levels.
  - name: Biometrics
    description: Endpoints that relate human biometrics.
  - name: QR Codes
    description: Endpoints that relate payment QR codes.
  - name: Ota
    description: Endpoints that relate OTA updates for devices.


x-tagGroups:
  - name: Access Controls & User Management
    tags:
      - Access
      - Users Access
      - Roles
      - Users Roles
      - Users
      - Customers
      - Password Reset
  - name: Authentication
    tags:
      - Token
  - name: Platform Configurations and Administration
    tags:
      - Asset States
      - Emulations
      - Host Hardware
      - Pos Types
      - Providers
      - Status Codes
      - Modules
      - Access Levels
      - QR Codes
      - Ota

  - name: Hierarchical Platform Structure
    tags:
      - Resellers
      - Organisations
      - Companies
      - Sites
      - Devices

  - name: Cross-Table Linking
    tags:
      - Resellers Organisations
      - Companies Providers

  - name: Reporting and Logging
    tags:
      - Connectivity History
      - Device Activity Audit
      - Logs
      - Transactions
      - Refunds
      - Bookings
      - Notifications
  - name: Dashboards
    tags:
      - Transactions Totals By Provider In Period
      - Transactions Totals By Status Code In Period
      - Total Devices By Current Status
      - Transactions Totals Current Previous
      - Detailed Transaction Drill Down Report
  - name: Biometrics
    tags:
      - Facial Biometrics

servers:
  - url: '{scheme}://payway3.iqt.co.za/{version}/api'
    variables:
      scheme:
        description: 'The API is accessible via https.'
        enum:
          - 'https'
        default: 'https'
      version:
        description: 'The API version.'
        enum:
          - 'v1'
        default: 'v1'

paths:
  '/authentication':
    post:
      security:
        - { }
      tags:
        - Functions
        - Token
      summary: Obtain x-user-token for auth
      description: |-
        This endpoint is used to retrieve an authentication token that is used to identify a Payway user.
        We call this token the "x-user-token", a randomly generated string representing a user. 
        This token does not expire after a set time period. On every successful authentication a new token is generated, expiring the old one.
        This end-point handles both Firebase (Email and Password) and Google Login methods. 
        
        **It is important you store this session token in a secure way as tokens do not expire.**
        
        Returned with the user object, the users access and roles are accessible as well.
        Please reference the API documentation for access and role logic.
        
        You cannot authenticate with a proxy user account. You will be notified if you do so.

      operationId: authentication
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                client_email:
                  type: string
                  pattern: '^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
                  example: 'test@iqt.co.za'
                  minLength: 1
                  maxLength: 320
                  description: Email needs to be working otherwise Firebase verification will not work.
                client_secret:
                  type: string
                  example: 'AET68Eh$WE7'
                  maxLength: 100
                  description: Client secret, or password, is provided by Firebase when a user is created. Not found in our database.
                authority:
                  type: string
                  enum: [ "firebase", "google", "proxy" ]
              required: [ "client_email", "client_secret", "authority" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns authenticated users object
          content:
            application/json:
              schema:
                type: array
                items:
                  - $ref: "#/components/schemas/AuthenticationResponse"
                  - $ref: "#/components/schemas/UsersAccessResponse"
                  - $ref: "#/components/schemas/RolesResponse"
                  - $ref: "#/components/schemas/PreferencesResponse"
                example:
                  {
                    "success": true,
                    "data": {
                      "user": [
                        {
                          "id": 1,
                          "token": "7ecc242c-c40d-4fd1-ba02-62220b4t8c6b",
                          "contact_number": "+27834567123",
                          "currency": "R",
                          "delimiter": ";",
                          "displayname": "Ryan Pomario",
                          "email": "ryan@iqt.co.za",
                          "email_verified": true,
                          "firebase_id": "Reu8oIQWf898E4K1hIJdPpKIpOe93",
                          "google_id": "null",
                          "sidebar_toggled": false,
                          "password_reset": true,
                          "super_admin": true,
                          "active": true
                        }
                      ],
                      "access": [
                        {
                          "module": "access",
                          "access": {
                            "create": true,
                            "read": true,
                            "update": true,
                            "delete": true
                          }
                        }
                      ],
                      "roles": [
                        {
                          "id": 5,
                          "reseller_id": 1,
                          "organisation_id": 7,
                          "company_id_list": [
                            "2",
                            "3"
                          ],
                          "site_id_list": [ ],
                          "device_id_list": [ ],
                          "is_reseller": false,
                          "name": "New Role",
                          "access_level_id": 9
                        }
                      ],
                      "preferences": [
                        {
                          reseller_logo: "logo.png",
                          organisation_logo: "logo.png"
                        }
                      ]
                    },
                    "timestamp": 1725523937144
                  }

  '/authentication/reset-password':
    post:
      security:
        - { }
      tags:
        - Functions
        - Password Reset
      summary: Request password reset for user account
      description: |-
        This endpoint is used to request a password reset for a firebase user account.
        Users must complete their password reset email for any effect on their login details to occur. If not completed,
        their password will remain the same.

      operationId: resetPassword
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                client_email:
                  type: string
                  pattern: '^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
                  example: 'test@iqt.co.za'
                  description: Email needs to be working otherwise Firebase reset email will not work.
                  minLength: 1
                  maxLength: 320
                authority:
                  type: string
                  enum: [ "firebase", "proxy" ]
              required: [ "client_email", "authority" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns status of password reset attempt
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PasswordResetResponse"
              example:
                {
                  "success": true,
                  "data": "Password reset link sent to user with email ryan@iqt.co.za",
                  "timestamp": 1723108298846
                }


  '/access':
    post:
      tags:
        - Data
        - Access
      summary: Create object for operation id / endpoint
      description: |-
        This endpoint is used to create access objects that define properties of endpoints. e.g. /users
        The primary key returned on successful creation, or known as the "id", can be used to allow a user to access certain endpoints. This is done via the "User Access" resource.
        This table is populated and maintained by the system maintainers and should have an entry for each non-public OpenAPI definition end-point. This table joined
        with the users_access and users table can determine front-end visible menu items based on the user specific access controls.
        
        If a user encounters the message: **"Unauthorized. [${operationId}]"**, they most likely do not have an access entry linked to their account.
        All access to endpoints is denied by default, expect for a few select around user authentication.
      

      operationId: createAccess
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  example: 'Allow Deleting Customers'
                  maxLength: 100
                operation_id:
                  type: string
                  example: 'deleteCustomers'
                  maxLength: 100
                  description: |-
                    Operation ids are plain text representations of the open-api resources, e.g deleteCustomers.
                    These values can be found in the OpenAPI spec, and are defined under every endpoint type.
                can_access:
                  type: boolean
                module_fk:
                  type: number
                  minimum: 0
                action:
                  type: string
                  enum: [ "read", "create", "delete", "update" ]
              required: [ "name", "operation_id", "can_access", "module_fk", "action" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns access object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AccessResponse"
              example:
                {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "name": "Delete Customers",
                      "operation_id": "deleteCustomers",
                      "can_access": true,
                      "action": "delete",
                      "modules": {
                        "id": 20,
                        "name": "bookings"
                      }
                    }
                  ],
                  "entries": 1,
                  "total_count": null,
                  "timestamp": 1723108298846
                }

  '/access/{id}':
    get:
      tags:
        - Data
        - Access
      summary: Get object for operation id / endpoint
      operationId: getAccess
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Obtain an array of "access" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AccessResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "Update Device Activity Audit",
                        "operation_id": "updateDeviceActivityAudit",
                        "can_access": true,
                        "action": "update",
                        "modules": {
                          "id": 20,
                          "name": "bookings"
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
    put:
      tags:
        - Data
        - Access
      summary: Update object for operation id / endpoint
      description: Update properties of an access object
      operationId: updateAccess
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  example: 'User Deleting Customers'
                  maxLength: 100
                operation_id:
                  type: string
                  example: 'deleteCustomers'
                  maxLength: 100
                  description: |-
                    Operation ids are plain text representations of the open-api resources, e.g deleteCustomers.
                    These values can be found in the OpenAPI spec, and are defined under every endpoint type.
                can_access:
                  type: boolean
                module_fk:
                  type: number
                  minimum: 0
                action:
                  type: string
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "access" items updated by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AccessResponse"
              example:
                {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "name": "Delete Customers",
                      "operation_id": "deleteCustomers",
                      "can_access": true,
                      "action": "delete",
                      "modules": {
                        "id": 20,
                        "name": "bookings"
                      }
                    }
                  ],
                  "entries": 1,
                  "total_count": null,
                  "timestamp": 1723108298846
                }

    delete:
      tags:
        - Data
        - Access
      summary: Delete object for operation id / endpoint
      operationId: deleteAccess
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          content:
            application/json:
              schema:
                type: object
                example:
                  {
                    "success": true,
                    "data": "Successfully deleted record(s). [1]",
                    "timestamp": 1723108298846
                  }
          description: Returns result of delete

    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"


  '/roles':
    post:
      tags:
        - Data
        - Roles
      summary: Create object for roles
      description: |-
        This endpoint is used to create roles that are linked to users. These roles define which reseller and organisation users are linked to.
        A user may only belong to one Reseller and Organisation, and the Organisation must be a direct descendant of the Reseller.  A User may
        be linked to many Roles, and as such, we must ensure that the Reseller and Organisation are the same across all linked Roles.  A change
        in this rule will lead to unexpected behaviour.
        
        If the "is_reseller" flag is set in any of the Roles linked to the User, only the Reseller will be used to determine which siblings in
        the Reseller - Organisation - Company - Site - Device and other related resource will be accessible.  Note that only one Role needs this
        "is_reseller" flag to be set for this behaviour to be enforced.  This flag is set only for Users that are Resellers such that the User 
        may view and manage any resource belonging to any Organisation under their control.
        
        If a User is granted "super_admin" status, then roles are no longer in effect and total system wide visibility is permitted.  
        This status is granted only by direct database changes by the development squad. 
        (See Users endpoint details for more information on this)
        
        The Role also permits finer resource controls by defining which Companies, Sites and Devices may be accessible by the User-Role
        relationship.  Companies, Sites and Devices are defined by arrays of ids. An empty array is created by default. When the array is empty,
        all Companies, Sites and Devices which are direct descendants of the Organisation are visible. If you would like to restrict the roles 
        access to certain resources, append the relevant resources id to the array. This will restrict the role to ONLY the defined ids found 
        in those non-empty arrays.
        
        e.g: 
        * site_id_list: [] ---- results in ALL sites under organisation being accessible
        * site_id_list: [3, 1] ---- results in only sites with ID 3 and 1 being accessible
        
        Users are linked to Roles via the Users_Roles service.  When onboarding a new Organisation, the Primary User account created for the 
        Organisation will be created using either a Super Admin or Reseller User account. This primary User account should be allocated a Role,
        such that each Organisation will have at least one Primary Role that permits full visibility of all resources that are direct descendants.    
        This will allow for the organisation's Primary User to create subsequent User accounts and Roles only in relation to the resources that 
        are direct descendants.    

      operationId: createRoles
      x-tag-permissions:
        - roles
        - resellers
        - organisations
        - companies
        - devices
        - sites
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  example: 'Reseller role'
                  maxLength: 100
                reseller_id:
                  type: integer
                organisation_id:
                  type: integer
                company_id_list:
                  type: array
                  items:
                    type: integer
                  example: [ 9, 1, 5 ]
                  description: If array is empty, access to all companies linked to user. If not empty, only defined companies in array are accessible by user.
                site_id_list:
                  type: array
                  items:
                    type: integer
                  example: [ 7, 1 ]
                  description: If array is empty, access to all sites linked to user. If not empty, only defined sites in array are accessible by user.
                device_id_list:
                  type: array
                  items:
                    type: integer
                  example: [ 8, 9, 12, 477, 322 ]
                  description: If array is empty, access to all devices linked to user. If not empty, only defined devices in array are accessible by user.
                is_reseller:
                  type: boolean
                  description: If role is set to reseller, this role will have access to all resources under the reseller. Similar to a "super-user" account.
                access_level_id:
                  type: integer
                  description: Foreign key access level identification.
                  example: 4
              required: [ "name", "reseller_id", "organisation_id" ]
              example:
                {
                  "name": "New Role",
                  "reseller_id": 1,
                  "organisation_id": 10,
                  "company_id_list": [ 1,2 ],
                  "site_id_list": [ 1,2 ],
                  "device_id_list": [ ],
                  "is_reseller": false,
                  "access_level_id": 4
                }

      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns role object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RolesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 7,
                        "name": "New Role",
                        "company_id_list": [ ],
                        "device_id_list": [ 1, 2, 10, 3 ],
                        "site_id_list": [ ],
                        "is_reseller": false,
                        "resellers": {
                          "id": 1,
                          "name": "IQT Holdings"
                        },
                        "organisations": {
                          "id": 10,
                          "name": "Chilli Mobile"
                        },
                        "access_levels": {
                          "id": 9,
                          "name": "Standard User"
                        },
                        "access": {
                          "id": [
                            110
                          ],
                          "name": [
                            "Get Access Levels"
                          ],
                          "action": [
                            "read"
                          ]
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }

  '/roles/{id}':
    get:
      tags:
        - Data
        - Roles
      operationId: getRoles
      x-tag-permissions:
        - roles
        - resellers
        - organisations
      summary: Get object for roles
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "role" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RolesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 7,
                        "name": "New Role",
                        "company_id_list": [ ],
                        "device_id_list": [ 1, 2, 10, 3 ],
                        "site_id_list": [ ],
                        "is_reseller": false,
                        "resellers": {
                          "id": 1,
                          "name": "IQT Holdings"
                        },
                        "organisations": {
                          "id": 10,
                          "name": "Chilli Mobile"
                        },
                        "access_levels": {
                          "id": 9,
                          "name": "Standard User"
                        },
                        "access": {
                          "id": [
                            110
                          ],
                          "name": [
                            "Get Access Levels"
                          ],
                          "action": [
                            "read"
                          ]
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }

    put:
      tags:
        - Data
        - Roles
      summary: Update object for roles
      operationId: updateRoles
      x-tag-permissions:
        - roles
        - resellers
        - organisations
        - companies
        - devices
        - sites
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  example: 'Updated Reseller role'
                  maxLength: 100
                reseller_id:
                  type: integer
                organisation_id:
                  type: integer
                company_id_list:
                  type: array
                  items:
                    type: integer
                  example: [ 9, 1, 5 ]
                  description: If array is empty, access to all companies linked to user. If not empty, only defined companies in array are accessible by user.
                site_id_list:
                  type: array
                  items:
                    type: integer
                  example: [ 7 ]
                  description: If array is empty, access to all sites linked to user. If not empty, only defined sites in array are accessible by user.
                device_id_list:
                  type: array
                  items:
                    type: integer
                  example: [ ]
                  description: If array is empty, access to all devices linked to user. If not empty, only defined devices in array are accessible by user.
                is_reseller:
                  type: boolean
                  description: If role is set to reseller, this role will have access to all resources under the reseller. Similar to a "super-user" account.
                access_level_id:
                  type: integer
                  description: Foreign key access level identification.
                  example: 4
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "role" items updated by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RolesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 7,
                        "name": "New Role",
                        "company_id_list": [ ],
                        "device_id_list": [ 1, 2, 10, 3 ],
                        "site_id_list": [ ],
                        "is_reseller": false,
                        "resellers": {
                          "id": 1,
                          "name": "IQT Holdings"
                        },
                        "organisations": {
                          "id": 10,
                          "name": "Chilli Mobile"
                        },
                        "access_levels": {
                          "id": 9,
                          "name": "Standard User"
                        },
                        "access": {
                          "id": [
                            110
                          ],
                          "name": [
                            "Get Access Levels"
                          ],
                          "action": [
                            "read"
                          ]
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
    delete:
      tags:
        - Data
        - Roles
      summary: Delete object for roles
      operationId: deleteRoles
      x-tag-permissions:
        - roles
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          content:
            application/json:
              schema:
                type: object
                example:
                  {
                    "success": true,
                    "data": "Successfully deleted record(s). [1]",
                    "timestamp": 1723108298846
                  }
          description: Returns result of delete
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/users':
    post:
      tags:
        - Data
        - Users
      summary: Create object for Payway user
      description: |-
        Users are the main, and only way, to "access" resources in the API Backend. 
        Every user is linked to a Reseller and Organisation. As a user, you only have the ability to access resources 
        defined by the Access and Roles rules for the particular User, unless the "super_user" flag is set, in which case you
        have system wide access. 
        
        When a new user is created, a "client secret" or "password" is randomly generated and the "password_reset" flag is set.
        On first login of the User Account, if the "password_reset" flag is set, the User must be prompted to set a new
        password.  The password should not be the same as the email account used and must be at least:
        * 10 characters long
        * 2 upper case characters
        * One special character 
        * Two numerical characters 
        * Three lowercase characters.
        
        If the password is not updated, the user will not be able to access any resources other than the endpoints required to update their
        password.  **On update of the password, be sure to reset the "password_reset" flag.** 
        
        Every user that has been successfully authenticated will receive an "x-user-token".
        This token is a randomly generated unique string that identifies a user account.
        These tokens do not expire, but do get refreshed on a new successful authentication request. 
        This means that only ONE active "session" can exist. e.g The user account can only be used on one device at a time.
        
        Super admin users have the highest access level. These accounts get access to all resources in the API. No matter
        the reseller or organisation. 
        
        Proxy users (or service accounts) are NOT to be used by user facing websites or mobile applications. 
        Proxy users are meant to be used by applications that require restricted access to API resources. 
        Proxy users act like normal users, having the same access and role based controls.
        
        If the proxy user field is set, an automatic static token is generated. Any email, existing or not, can be used if not already used in
        the Payway system.

      operationId: createUsers
      x-tag-permissions:
        - users
        - roles
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                displayname:
                  type: string
                  example: John Doe
                  minLength: 1
                  maxLength: 50
                  pattern: ^[A-Za-z0-9]+[A-Za-z 0-9]*$
                email:
                  type: string
                  example: 'john.doe@gmail.com'
                  maxLength: 320
                  minLength: 1
                  pattern: '^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
                email_verified:
                  type: boolean
                contact_number:
                  type: string
                  example: '+27876545611'
                  maxLength: 20
                  minLength: 0
                  pattern: ^((\+|\d)[0-9]{1,16})?$
                currency:
                  type: string
                  example: "$"
                  maxLength: 5
                  minLength: 1
                  pattern: '(?:ZAR|USD|EUR)'
                  description: Defines the type of current a user is using.
                delimiter:
                  type: string
                  example: ';'
                  maxLength: 1
                  pattern: ^[,;|]
                  description: Delimiter used in CSV/Table exports for frontend.
                proxy_user:
                  type: boolean
                  description: Special user that should only be used in certain cases.
                users_roles:
                  type: array
                  items:
                    type: integer
                  description: Special user that should only be used in certain cases.
                active:
                  type: boolean
              required: [ "displayname", "email", "currency", "delimiter", "proxy_user", "users_roles" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns user object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UsersResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "displayname": "John Doe",
                        "email": "john.doe@gmai.com",
                        "email_verified": true,
                        "contact_number": "+27653451232",
                        "last_login_at": null,
                        "active": true,
                        "google_id": null,
                        "token": "HIDDEN",
                        "last_login_error": null,
                        "sidebar_toggled": false,
                        "firebase_id": "B9lQQzAED5JOcdP8Jc399Jk1CA2",
                        "currency": "R",
                        "delimiter": ";",
                        "super_admin": false,
                        "proxy_user": false,
                        "password_reset": true,
                        "password": "ns98Ui7T2Sc",
                        "qr_code": "PAYWAY|3|TOKEN|AA67SNERIA9",
                        "resellers": {
                          "id": [
                            1
                          ],
                          "name": [
                            "IQ Telemetry (Pty) Ltd"
                          ]
                        },
                        "organisations": {
                          "id": [
                            7
                          ],
                          "name": [
                            "IQ Telemetry Test Account"
                          ]
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }

  '/users/{id}':
    get:
      tags:
        - Data
        - Users
      operationId: getUsers
      x-tag-permissions:
        - users
        - roles
      summary: Get object for user
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "user" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UsersResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "contact_number": "+278249563295",
                        "email": "test@iqt.co.za",
                        "email_verified": true,
                        "last_login_at": "2024-08-13T09:08:29.000Z",
                        "last_login_error": "success",
                        "currency": "R",
                        "delimiter": ";",
                        "displayname": "Test IQT",
                        "sidebar_toggled": false,
                        "firebase_id": "B8vGoIA23aN74K78HEdPpT9hpX93",
                        "proxy_user": false,
                        "super_admin": true,
                        "password_reset": true,
                        "token": "HIDDEN",
                        "qr_code": "PAYWAY|3|TOKEN|AA67SNERIA9",
                        "active": true,
                        "resellers": {
                          "id": [
                            1
                          ],
                          "name": [
                            "IQ Telemetry (Pty) Ltd"
                          ]
                        },
                        "organisations": {
                          "id": [
                            7
                          ],
                          "name": [
                            "IQ Telemetry Test Account"
                          ]
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
    put:
      tags:
        - Data
        - Users
      summary: Update object for users
      operationId: updateUsers
      x-tag-permissions:
        - users
        - roles
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                displayname:
                  type: string
                  example: John Doe
                  maxLength: 50
                  minLength: 1
                  pattern: ^[A-Za-z0-9]+[A-Za-z 0-9]*$
                email:
                  type: string
                  maxLength: 320
                  example: 'john.doe@gmail.com'
                  pattern: '^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
                email_verified:
                  type: boolean
                contact_number:
                  type: string
                  example: '+27876545611'
                  maxLength: 20
                  minLength: 0
                  pattern: ^((\+|\d)[0-9]{1,16})?$
                currency:
                  type: string
                  example: "$"
                  maxLength: 5
                  pattern: '(?:ZAR|USD|EUR)'
                  minLength: 1
                  description: Defines the type of current a user is using.
                delimiter:
                  type: string
                  example: ';'
                  maxLength: 1
                  pattern: ^[,;|]
                  minLength: 1
                  description: Delimiter used in CSV/Table exports for frontend.
                proxy_user:
                  type: boolean
                  description: Special user that should only be used in certain cases.
                password_reset:
                  type: boolean
                  description: Define if password reset required.
                password:
                  type: string
                  description: New password provided by user.
                users_roles:
                  type: array
                  items:
                    type: integer
                active:
                  type: boolean
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "user" items updated by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UsersResponse"
              example:
                {
                  "success": true,
                  "data": [
                    {
                      "id": 1,
                      "displayname": "IQT Test",
                      "email": "test@iqt.co.za",
                      "email_verified": true,
                      "contact_number": "+27624574394",
                      "last_login_at": "2024-06-06T08:06:21.000Z",
                      "active": true,
                      "google_id": null,
                      "token": "HIDDEN",
                      "last_login_error": "Error: Email verification is required before this user can fully authenticate. An email has been sent to ryantest@iqt.co.za",
                      "sidebar_toggled": false,
                      "firebase_id": "Z7AyWWTA9888Ud8KIOV2YfrjlFT4O2",
                      "currency": "R",
                      "delimiter": ";",
                      "super_admin": false,
                      "password_reset": true,
                      "qr_code": "PAYWAY|3|TOKEN|AA67SNERIA9",
                      "proxy_user": false,
                      "resellers": {
                        "id": [
                          1
                        ],
                        "name": [
                          "IQ Telemetry (Pty) Ltd"
                        ]
                      },
                      "organisations": {
                        "id": [
                          7
                        ],
                        "name": [
                          "IQ Telemetry Test Account"
                        ]
                      }
                    }
                  ],
                  "entries": 1,
                  "timestamp": 1723108298846
                }
    delete:
      tags:
        - Data
        - Users
      summary: Delete object for users
      operationId: deleteUsers
      x-tag-permissions:
        - users
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeleteResponse"
              example:
                {
                  "success": true,
                  "data": "Successfully deleted record(s). [1]",
                  "timestamp": 1723108298846
                }
          description: Returns result of delete
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"


  '/users/access/{id}':
    get:
      tags:
        - Data
        - Users
      operationId: getUsersAccess
      x-tag-permissions:
        - users
      summary: Get object for user access
      description: |-
        This endpoint is used to return a users permissions, access and roles for use for the Payway website.

      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "user access" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  - $ref: "#/components/schemas/UsersResponse"
                  - $ref: "#/components/schemas/UsersAccessResponse"
                  - $ref: "#/components/schemas/RolesResponse"
                example:
                  {
                    "success": true,
                    "data": {
                      "user": [
                        {
                          "id": 125,
                          "contact_number": "+27824959395",
                          "email": "ryan@iqt.co.za",
                          "email_verified": true,
                          "last_login_at": "2024-09-11T05:09:22.000Z",
                          "last_login_error": "success",
                          "currency": "R",
                          "delimiter": ";",
                          "displayname": "Ryan Pomario",
                          "sidebar_toggled": false,
                          "firebase_id": "RvGoIQWf5aNW4K1hIJdPpKIhpX93",
                          "proxy_user": false,
                          "super_admin": true,
                          "active": true
                        }
                      ],
                      "access": [
                        {
                          "module": "access",
                          "access": {
                            "create": true,
                            "read": true,
                            "update": true,
                            "delete": true
                          }
                        }
                      ],
                      "roles": [
                        {
                          "id": 1,
                          "reseller_id": 1,
                          "organisation_id": 7,
                          "company_id_list": [ ],
                          "site_id_list": [ ],
                          "device_id_list": [ ],
                          "is_reseller": true,
                          "name": "Super Admin",
                          "access_level_id": 1
                        }
                      ]
                    },
                    "total_count": null,
                    "timestamp": 1726038406541
                  }
    parameters:
      - $ref: "#/components/parameters/idSingleParam"
      - $ref: "#/components/parameters/tokenParam"

  '/user_access':
    post:
      tags:
        - Data
        - Users Access
      summary: Create object for user access
      description: |-
        By default users are not able to access any resources, like /sites, until given specific permission to do so.
        This table acts as a link to the access and user table. If a user does not have permissions to access a HTTP/s 
        resource, this is the place to give them access.

      operationId: createUserAccess
      x-tag-permissions:
        - users
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                user_id:
                  type: integer
                  example: 1
                  description: Users ID can be found in the users resource.
                access_id:
                  type: integer
                  example: 3
                  description: Access ID can be found in the access resource.
                can_access:
                  type: boolean
                  description: User has access to the endpoint.
              required: [ "user_id", "access_id" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns user access object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserAccessResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "user_id": 1,
                        "access_id": 3,
                        "can_access": true
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }

  '/user_access/user/{id}':
    get:
      tags:
        - Data
        - Users Access
      summary: Get object for user access by a user id
      operationId: getUserAccessDetailByUserId
      x-tag-permissions:
        - users
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "user access" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserAccessDetailResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "user_access": {
                          "id": [
                            937,
                            969
                          ],
                          "user_id": [
                            1559,
                            1559
                          ],
                          "access_id": [
                            104,
                            164
                          ],
                          "can_access": [
                            true,
                            true
                          ]
                        },
                        "modules": {
                          "id": 29,
                          "name": "Activity Logs"
                        },
                        "access": {
                          "id": [
                            104,
                            164
                          ],
                          "name": [
                            "Get Activity Logs",
                            "View Activity Logs"
                          ],
                          "action": [
                            "read",
                            "view"
                          ],
                          "can_access": [
                            true,
                            true
                          ]
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
    parameters:
      - $ref: "#/components/parameters/idParam"

  '/user_access/{id}':
    get:
      tags:
        - Data
        - Users Access
      summary: Get object for user access
      operationId: getUserAccess
      x-tag-permissions:
        - users
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "user access" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserAccessResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "access_id": 77,
                        "user_id": 1,
                        "can_access": true
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
    put:
      tags:
        - Data
        - Users Access
      summary: Update object for user access
      operationId: updateUserAccess
      x-tag-permissions:
        - users
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                can_access:
                  type: boolean
                  description: User has access to the endpoint.
              required: [ "can_access" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "user access" items updated by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserAccessResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "access_id": 77,
                        "user_id": 1,
                        "can_access": true
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }

    delete:
      tags:
        - Data
        - Users Access
      operationId: deleteUserAccess
      x-tag-permissions:
        - users
      summary: Delete object for user access
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeleteResponse"
              example:
                {
                  "success": true,
                  "data": "Successfully deleted record(s). [1]",
                  "timestamp": 1723108298846
                }
          description: Returns result of delete
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/user_roles':
    post:
      tags:
        - Data
        - Users Roles
      summary: Create object for user roles
      description: |-
        This endpoint is used as a linking table.
        This tables relation is: 
        * MANY-Users-to-MANY-Roles.

      operationId: createUserRoles
      x-tag-permissions:
        - users
        - roles
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                user_id:
                  type: integer
                  example: 1
                  description: Users ID can be found in the users resource.
                role_id:
                  type: integer
                  example: 3
                  description: Roles ID can be found in the roles resource.
              required: [ "user_id", "role_id" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns user roles object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserRolesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "roles": {
                          "id": 1,
                          "name": "IQT Holdings Reseller Admin"
                        },
                        "users": {
                          "id": 125,
                          "displayname": "Ryan Pomario"
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }

  '/user_roles/{id}':
    get:
      tags:
        - Data
        - Users Roles
      operationId: getUserRoles
      x-tag-permissions:
        - users
        - roles
      summary: Get object for user roles
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "user roles" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserRolesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "roles": {
                          "id": 1,
                          "name": "IQT Holdings Reseller Admin"
                        },
                        "users": {
                          "id": 125,
                          "displayname": "Ryan Pomario"
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }

    put:
      tags:
        - Data
        - Users Roles
      summary: Update object for user roles
      description: |-
        This endpoint is used as a linking table.
        This tables relation is: 
        * MANY-Users-to-MANY-Roles.

      operationId: updateUserRolesByUserId
      x-tag-permissions:
        - users
        - roles
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                users_roles:
                  type: array
                  items:
                    type: integer
                  example: [ 1,2 ]
                  description: User Roles ID's to link to the user
              required: [ "user_roles" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns user roles object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserAccessDetailResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "user_access": {
                          "id": [
                            939,
                            940,
                            781
                          ],
                          "user_id": [
                            1559,
                            1559,
                            1559
                          ],
                          "access_id": [
                            122,
                            132,
                            4
                          ],
                          "can_access": [
                            true,
                            true,
                            true
                          ]
                        },
                        "modules": {
                          "id": 1,
                          "name": "Access"
                        },
                        "access": {
                          "id": [
                            122,
                            132,
                            4
                          ],
                          "name": [
                            "View Access",
                            "View Access",
                            "Get Access"
                          ],
                          "action": [
                            "view",
                            "view",
                            "read"
                          ],
                          "can_access": [
                            true,
                            true,
                            true
                          ]
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }

    delete:
      tags:
        - Data
        - Users Roles
      operationId: deleteUserRoles
      x-tag-permissions:
        - users
        - roles
      summary: Delete object for user roles
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeleteResponse"
              example:
                {
                  "success": true,
                  "data": "Successfully deleted record(s). [1]",
                  "timestamp": 1723108298846
                }
          description: Returns result of delete
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/user_roles/user/{id}':
    get:
      tags:
        - Data
        - Users Roles
      operationId: getUserRolesByUserId
      x-tag-permissions:
        - users
        - roles
      summary: Get object for user roles by user id
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "user roles" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserRolesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 30,
                        "roles": {
                          "id": 1,
                          "name": "IQT Holdings Reseller Admin"
                        },
                        "users": {
                          "id": 125,
                          "displayname": "Ryan Pomario"
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/customers':
    post:
      tags:
        - Data
        - Customers
      summary: Create object for customer
      description: |-
        This endpoint manages a second type of user in Payway called customers.
        Customers are not direct users of the Payway system, but rather consumers of features and services. e.g Walk in store customer, a student, etc.
        
        Customers are primarily used for the booking system and student app.
        Customers are linked to a Payway proxy user, service account. This ensures access is restricted to the correct organisation and resources
        in terms of the Access and Roles Based rules of the service account.
        
        Every customer has "virtual" mifare card already created for them. Please see [cardholders](https://docs.iqt.co.za/pages/mifare.html#tag/Cardholders), in the Mifare documentation. 
        This allows the customer to activate machines using Mifare, have automatic monthly topups and more. The create customer endpoint allows for initial
        configuration of the "virtual" mifare card. See all card_* fields that relate to the configuration of the card.

      operationId: createCustomers
      x-tag-permissions:
        - customers
        - companies
        - organisations
        - resellers
        - roles
        - users
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                first_name:
                  type: string
                  maxLength: 100
                  example: "John"
                last_name:
                  type: string
                  maxLength: 100
                  example: "Doe"
                customer_identification:
                  type: string
                  maxLength: 30
                  example: "0456744907613"
                email:
                  type: string
                  maxLength: 100
                  minLength: 1
                  pattern: '^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
                contact_number:
                  type: string
                  example: '+27876545611'
                  maxLength: 20
                  pattern: ^((\+|\d)[0-9]{1,16})?$
                  minLength: 0
                consent_number:
                  type: boolean
                consent_email:
                  type: boolean
                user_id:
                  type: integer
                  example: 105
                  description: The id of the proxy user (service account).
                blocked:
                  type: boolean
                  description: Prevents user from accessing the API.
                daily_booking_limit:
                  type: integer
                  example: 2
                  description: The total number of bookings a user can make in one day.
                reserved_booking_limit:
                  type: integer
                  example: 4
                  description: The total number of reserved bookings a user can have at once.
                verified:
                  type: boolean
                  description: Has the user verified their email?
                email_sent_amount:
                  type: integer
                  example: 5
                  description: Amount of times a login request has been sent.
                card_negative_credit_allowed:
                  type: boolean
                  description: If set, the card wallet balance will be allowed to go into negative credits.
                card_throttle_multiple_requests:
                  type: boolean
                  description: |-
                    If set (default), multiple requests for the card at the same POS terminal will be throttled to prevent
                    "double-tapping".
                card_balance_accumulate:
                  type: boolean
                  description: At the end of each month, card wallet balances are re-calculated.  If this is set, then
                    any un-used credits are included in the calculation.
                card_topup_reoccurrence:
                  type: boolean
                  description: If set, the card wallet will automatically be reset on month end in accordance with the rules set
                    above.
                card_topup_value:
                  type: number
                  description: This is the amount the will be either added to the wallet balance, if balance_accumulate is set,
                    or the value that will be used to set the wallet balance at month end.
                  minimum: 0
                card_initial_balance:
                  type: number
                  description: An initial wallet/balance amount for the automatically created virtual card. Must be in full currency, not cents.
              required: [ "first_name", "last_name", "email", "user_id" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns customer object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CustomersResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "email": "john.doe@gmail.com",
                        "first_name": "John",
                        "last_name": "Doe",
                        "contact_number": "+27876545611",
                        "customer_identification": "0456744907613",
                        "consent_number": true,
                        "consent_email": true,
                        "daily_booking_limit": 2,
                        "reserved_booking_limit": 4,
                        "blocked": false,
                        "verified": true,
                        "email_sent_amount": 4,
                        "verify_token": "3305",
                        "companies_providers_id": 3,
                        "mifare_card_number": '38362837a8aam332',
                        "missed_bookings": 0,
                        "image_guid": "323d8592-8464-44b2-8683-51925057cda5",
                        "users": {
                          "id": 1,
                          "displayname": "Chris Groenewald",
                          "active": true
                        },
                        "resellers": {
                          "id": [
                            1
                          ],
                          "name": [
                            "IQT Holdings"
                          ],
                          "id_name": [
                            "1,IQT Holdings"
                          ]
                        },
                        "organisations": {
                          "id": 7,
                          "name": "IQ Telemetry Test Account"
                        },
                        "companies": {
                          "id": 7,
                          "name": "IQ Telemetry Test Account"
                        },
                        "image": {
                          "full_url": "https://payway3.iqt.co.za/images/"
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }

  '/customers/{id}':
    get:
      tags:
        - Data
        - Customers
      summary: Get object for customers
      operationId: getCustomers
      x-tag-permissions:
        - customers
        - companies
        - organisations
        - resellers
        - roles
        - users
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "customer" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CustomersResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "email": "john.doe@gmail.com",
                        "first_name": "John",
                        "last_name": "Doe",
                        "contact_number": "+27876545611",
                        "customer_identification": "0456744907613",
                        "user_id": 125,
                        "consent_number": true,
                        "consent_email": true,
                        "daily_booking_limit": 2,
                        "reserved_booking_limit": 4,
                        "blocked": false,
                        "verified": true,
                        "email_sent_amount": 4,
                        "verify_token": "3305",
                        "companies_providers_id": 3,
                        "mifare_card_number": '38362837a8aam332',
                        "missed_bookings": 0,
                        "image_guid": "323d8592-8464-44b2-8683-51925057cda5",
                        "users": {
                          "id": 1,
                          "displayname": "Chris Groenewald",
                          "active": true
                        },
                        "resellers": {
                          "id": [
                            1
                          ],
                          "name": [
                            "IQT Holdings"
                          ],
                          "id_name": [
                            "1,IQT Holdings"
                          ]
                        },
                        "organisations": {
                          "id": 7,
                          "name": "IQ Telemetry Test Account"
                        },
                        "companies": {
                          "id": 7,
                          "name": "IQ Telemetry Test Account"
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
    put:
      tags:
        - Data
        - Customers
      summary: Update object for customers
      operationId: updateCustomers
      x-tag-permissions:
        - customers
        - companies
        - organisations
        - resellers
        - roles
        - users
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                first_name:
                  type: string
                  maxLength: 100
                  example: "John"
                last_name:
                  type: string
                  maxLength: 100
                  example: "Doe"
                customer_identification:
                  type: string
                  maxLength: 30
                  example: "0456744907613"
                email:
                  type: string
                  maxLength: 100
                  pattern: '^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
                  minLength: 1
                contact_number:
                  type: string
                  example: '+27876545611'
                  maxLength: 20
                  pattern: ^((\+|\d)[0-9]{1,16})?$
                  minLength: 0
                consent_number:
                  type: boolean
                consent_email:
                  type: boolean
                user_id:
                  type: integer
                  example: 105
                  description: Customer needs to be linked to a user, usually a proxy user, for access control.
                blocked:
                  type: boolean
                  description: Prevents user from accessing the API.
                daily_booking_limit:
                  type: integer
                  example: 2
                  description: The total number of bookings a user can make in one day.
                reserved_booking_limit:
                  type: integer
                  example: 4
                  description: The total number of reserved bookings a user can have at once.
                verified:
                  type: boolean
                  description: Has the user verified their email?
                email_sent_amount:
                  type: integer
                  example: 5
                  description: Amount of times a login request has been sent.
                mifare_card_number:
                  type: string
                  example: "38362837a8aam332"
                  maxLength: 45
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "customer" items updated by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CustomersResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "email": "john.doe@gmail.com",
                        "first_name": "John",
                        "last_name": "Doe",
                        "contact_number": "+27876545611",
                        "customer_identification": "0456744907613",
                        "user_id": 125,
                        "consent_number": true,
                        "consent_email": true,
                        "daily_booking_limit": 2,
                        "reserved_booking_limit": 4,
                        "blocked": false,
                        "verified": true,
                        "email_sent_amount": 4,
                        "verify_token": "3305",
                        "companies_providers_id": 3,
                        "mifare_card_number": '38362837a8aam332',
                        "missed_bookings": 0,
                        "image_guid": "323d8592-8464-44b2-8683-51925057cda5",
                        "users": {
                          "id": 1,
                          "displayname": "Chris Groenewald",
                          "active": true
                        },
                        "resellers": {
                          "id": [
                            1
                          ],
                          "name": [
                            "IQT Holdings"
                          ],
                          "id_name": [
                            "1,IQT Holdings"
                          ]
                        },
                        "organisations": {
                          "id": 7,
                          "name": "IQ Telemetry Test Account"
                        },
                        "companies": {
                          "id": 7,
                          "name": "IQ Telemetry Test Account"
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
    delete:
      tags:
        - Data
        - Customers
      operationId: deleteCustomers
      summary: Delete object for customers
      x-tag-permissions:
        - customers
        - companies
        - organisations
        - resellers
        - roles
        - users
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeleteResponse"
              example:
                {
                  "success": true,
                  "data": "Successfully deleted record(s). [1]",
                  "timestamp": 1723108298846
                }
          description: Returns result of delete

    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/customers/biometrics/face/{id}':
    put:
      tags:
        - Data
        - Customers
      summary: Update image_guid for customer
      description: Update image_guid for customer
      operationId: updateCustomersBiometricsFacial
      x-tag-permissions:
        - customers
        - companies
        - organisations
        - resellers
        - roles
        - users
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "access" items updated by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CustomersResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "email": "john.doe@gmail.com",
                        "first_name": "John",
                        "last_name": "Doe",
                        "contact_number": "+27876545611",
                        "customer_identification": "0456744907613",
                        "user_id": 125,
                        "consent_number": true,
                        "consent_email": true,
                        "daily_booking_limit": 5,
                        "blocked": false,
                        "verified": true,
                        "email_sent_amount": 4,
                        "verify_token": "3305",
                        "companies_providers_id": 3,
                        "mifare_card_number": '38362837a8aam332',
                        "missed_bookings": 0,
                        "image_guid": "323d8592-8464-44b2-8683-51925057cda5",
                        "users": {
                          "id": 1,
                          "displayname": "Chris Groenewald",
                          "active": true
                        },
                        "resellers": {
                          "id": [
                            1
                          ],
                          "name": [
                            "IQT Holdings"
                          ],
                          "id_name": [
                            "1,IQT Holdings"
                          ]
                        },
                        "organisations": {
                          "id": 7,
                          "name": "IQ Telemetry Test Account"
                        },
                        "companies": {
                          "id": 7,
                          "name": "IQ Telemetry Test Account"
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
    parameters:
      - $ref: "#/components/parameters/idParam"

  '/resellers':
    post:
      tags:
        - Data
        - Resellers
      summary: Create object for reseller
      description: |-
        Resellers are customers that re-sell the Payway system to their own customers / consumers. 
        Resellers are of the highest level in the Payway system. **Resellers may have MANY Organisations.**

      operationId: createResellers
      x-tag-permissions:
        - resellers
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  example: "BigTech Reseller"
                  maxLength: 60
                  pattern: ^[.@&]?[a-zA-Z0-9 ]+[ !.@&()]?[ a-zA-Z0-9!()]+
                  minLength: 1
                address:
                  type: string
                  example: "109 BigTech Street, Cape Town 8800"
                  maxLength: 100
                contact_number:
                  type: string
                  example: '+27876545611'
                  maxLength: 20
                  pattern: ^((\+|\d)[0-9]{1,16})?$
                  minLength: 0
                contact_person:
                  type: string
                  example: "John Doe"
                  maxLength: 50
                  pattern: ^[A-Za-z0-9]+[A-Za-z 0-9]*$
                  minLength: 1
                lat_lng:
                  type: string
                  maxLength: 200
                  example: "-18.08011,-34.73830"
                  pattern: '^[-+]?([1-8]?\d(\.\d+)?|90(\.0+)?),\s*[-+]?(180(\.0+)?|((1[0-7]\d)|([1-9]?\d))(\.\d+)?)$'
                  minLength: 1
                logo_url:
                  type: string
                  example: 'https://google.com/image.png'
                  description: Link to png used for logo
                active:
                  type: boolean
              required: [ "name", "address", "contact_number", "contact_person", "lat_lng", "active" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns reseller object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResellersResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "New Reseller",
                        "address": "3336 Zebra Road, Cape Town 8800",
                        "contact_number": "+2712795494",
                        "contact_person": "John Doe",
                        "lat_lng": "-18.08011,-34.73830",
                        "active": true
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }

  '/resellers/{id}':
    get:
      tags:
        - Data
        - Resellers
      operationId: getResellers
      x-tag-permissions:
        - resellers
      summary: Get object for resellers
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "reseller" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResellersResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "New Reseller",
                        "address": "3336 Zebra Road, Cape Town 8800",
                        "contact_number": "+2712795494",
                        "contact_person": "John Doe",
                        "lat_lng": "-18.08011,-34.73830",
                        "logo_url": "https://google.com",
                        "active": true
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
    put:
      tags:
        - Data
        - Resellers
      summary: Update object for resellers
      operationId: updateResellers
      x-tag-permissions:
        - resellers
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  example: "BigTech Reseller"
                  maxLength: 60
                  pattern: ^[.@&]?[a-zA-Z0-9 ]+[ !.@&()]?[ a-zA-Z0-9!()]+
                  minLength: 1
                address:
                  type: string
                  example: "109 BigTech Street, Cape Town 8800"
                  maxLength: 100
                contact_number:
                  type: string
                  example: '+27876545611'
                  maxLength: 20
                  pattern: ^((\+|\d)[0-9]{1,16})?$
                  minLength: 0
                contact_person:
                  type: string
                  example: "John Doe"
                  maxLength: 50
                  pattern: ^[A-Za-z0-9]+[A-Za-z 0-9]*$
                  minLength: 1
                lat_lng:
                  type: string
                  maxLength: 200
                  example: "-18.08011,-34.73830"
                  pattern: '^[-+]?([1-8]?\d(\.\d+)?|90(\.0+)?),\s*[-+]?(180(\.0+)?|((1[0-7]\d)|([1-9]?\d))(\.\d+)?)$'
                  minLength: 1
                logo_url:
                  type: string
                  example: 'https://google.com/image.png'
                  description: Link to png used for logo
                active:
                  type: boolean
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "reseller" items updated by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResellersResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "New Reseller",
                        "address": "3336 Zebra Road, Cape Town 8800",
                        "contact_number": "+2712795494",
                        "contact_person": "John Doe",
                        "lat_lng": "-18.08011,-34.73830",
                        "logo_url": "https://google.com",
                        "active": true
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
    delete:
      tags:
        - Data
        - Resellers
      summary: Delete object for resellers
      operationId: deleteResellers
      x-tag-permissions:
        - resellers
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeleteResponse"
              example:
                {
                  "success": true,
                  "data": "Successfully deleted record(s). [1]",
                  "timestamp": 1723108298846
                }
          description: Returns result of delete
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/resellers/image/{id}':
    put:
      tags:
        - Data
        - Resellers
      summary: Upload custom reseller image
      description: Upload custom reseller image
      operationId: createUploadResellersImages
      x-tag-permissions:
        - resellers
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of images uploaded
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LogoImageUploadResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "file_name": "res-1-34861.png",
                        "success": true
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }
    get:
      tags:
        - Data
        - Organisations
      summary: Get all images for resellers
      description: Get all images for resellers
      operationId: getResellersImages
      x-tag-permissions:
        - resellers
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of images linked to reseller
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  {
                    "success": true,
                    "data": [
                      "res-1-34861.png"
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }
    delete:
      tags:
        - Data
        - Resellers
      summary: Delete custom reseller image
      description: Delete custom reseller image
      operationId: deleteResellersImages
      x-tag-permissions:
        - resellers
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                file_name:
                  type: string
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of images deleted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LogoImageDeleteResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "file_name": "res-4-3044.png",
                        "success": true
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }
    parameters:
      - $ref: "#/components/parameters/idSingleParam"

  '/organisations':
    post:
      tags:
        - Data
        - Organisations
      summary: Create object for an organisation
      description: |-
        Organisations are the second level in the Payway system.
        An Organisation may be linked to **MANY Resellers**, see "Organisations_Resellers", and may have many companies.

      operationId: createOrganisations
      x-tag-permissions:
        - organisations
        - resellers
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  example: "BigTech Org"
                  maxLength: 60
                  pattern: ^[.@&]?[a-zA-Z0-9 ]+[ !.@&()]?[ a-zA-Z0-9!()]+
                  minLength: 1
                address:
                  type: string
                  example: "109 BigTech Street, Cape Town 8800"
                  maxLength: 400
                contact_number:
                  type: string
                  example: '+27876545611'
                  maxLength: 20
                  pattern: ^((\+|\d)[0-9]{1,16})?$
                  minLength: 0
                contact_person:
                  type: string
                  example: "John Doe"
                  maxLength: 50
                  pattern: ^[A-Za-z0-9]+[A-Za-z 0-9]*$
                  minLength: 1
                lat_lng:
                  type: string
                  maxLength: 200
                  example: "-18.08011,-34.73830"
                  pattern: '^[-+]?([1-8]?\d(\.\d+)?|90(\.0+)?),\s*[-+]?(180(\.0+)?|((1[0-7]\d)|([1-9]?\d))(\.\d+)?)$'
                  minLength: 1
                reseller_id:
                  type: array
                  items:
                    type: integer
                  example: [ 7, 1 ]
                logo_url:
                  type: string
                  example: 'https://google.com/image.png'
                  description: Link to png used for logo
                active:
                  type: boolean
              required: [ "name", "address", "contact_number", "contact_person", "reseller_id", "active" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns organisation object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrganisationsResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "BigTech Org",
                        "address": "3336 Zebra Road, Cape Town 8800",
                        "contact_number": "+2712795494",
                        "contact_person": "John Doe",
                        "lat_lng": "-18.08011,-34.73830",
                        "logo_url": "https://google.com",
                        "active": true,
                        "resellers": {
                          "id": [
                            4
                          ],
                          "name": [
                            "360 Laundry Solutions"
                          ],
                          "id_name": [
                            "4,360 Laundry Solutions"
                          ]
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }

  '/organisations/{id}':
    get:
      tags:
        - Data
        - Organisations
      operationId: getOrganisations
      x-tag-permissions:
        - organisations
      summary: Get object for organisation
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "organisation" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrganisationsResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "BigTech Org",
                        "address": "3336 Zebra Road, Cape Town 8800",
                        "contact_number": "+2712795494",
                        "contact_person": "John Doe",
                        "lat_lng": "-18.08011,-34.73830",
                        "url_logo": "https://google.com",
                        "active": true,
                        "resellers": {
                          "id": [
                            4
                          ],
                          "name": [
                            "360 Laundry Solutions"
                          ],
                          "id_name": [
                            "4,360 Laundry Solutions"
                          ]
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }
    put:
      tags:
        - Data
        - Organisations
      summary: Update object for organisations
      operationId: updateOrganisations
      x-tag-permissions:
        - organisations
        - resellers
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  example: "BigTech Org"
                  maxLength: 60
                  pattern: ^[.@&]?[a-zA-Z0-9 ]+[ !.@&()]?[ a-zA-Z0-9!()]+
                  minLength: 1
                address:
                  type: string
                  example: "109 BigTech Street, Cape Town 8800"
                  maxLength: 400
                contact_number:
                  type: string
                  example: '+27876545611'
                  maxLength: 20
                  pattern: ^((\+|\d)[0-9]{1,16})?$
                  minLength: 0
                contact_person:
                  type: string
                  example: "John Doe"
                  maxLength: 50
                  pattern: ^[A-Za-z0-9]+[A-Za-z 0-9]*$
                  minLength: 1
                lat_lng:
                  type: string
                  maxLength: 200
                  example: "-18.08011,-34.73830"
                  pattern: '^[-+]?([1-8]?\d(\.\d+)?|90(\.0+)?),\s*[-+]?(180(\.0+)?|((1[0-7]\d)|([1-9]?\d))(\.\d+)?)$'
                  minLength: 1
                reseller_id:
                  type: array
                  items:
                    type: integer
                  example: [ 7, 1 ]
                logo_url:
                  type: string
                  example: 'https://google.com/image.png'
                  description: Link to png used for logo
                active:
                  type: boolean

      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "organisation" items updated by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrganisationsResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "New Org",
                        "address": "3336 Zebra Road, Cape Town 8800",
                        "contact_number": "+2712795494",
                        "contact_person": "John Doe",
                        "lat_lng": "-18.08011,-34.73830",
                        "logo_url": "https://google.com",
                        "active": true,
                        "resellers": {
                          "id": [
                            4
                          ],
                          "name": [
                            "360 Laundry Solutions"
                          ],
                          "id_name": [
                            "4,360 Laundry Solutions"
                          ]
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }
    delete:
      tags:
        - Data
        - Organisations
      operationId: deleteOrganisations
      x-tag-permissions:
        - organisations
      summary: Delete object for organisations
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeleteResponse"
              example:
                {
                  "success": true,
                  "data": "Successfully deleted record(s). [1]",
                  "timestamp": 1723108298846
                }
          description: Returns result of delete
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/organisations/image/{id}':
    put:
      tags:
        - Data
        - Organisations
      summary: Upload custom organisation image
      description: Upload custom organisation image
      operationId: createUploadOrganisationsImages
      x-tag-permissions:
        - organisations
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of images uploaded
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LogoImageUploadResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "file_name": "res-1-34861.png",
                        "success": true
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }
    get:
      tags:
        - Data
        - Organisations
      summary: Get all images for organisation
      description: Get all images for organisation
      operationId: getOrganisationsImages
      x-tag-permissions:
        - organisations
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of images linked to organisation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  {
                    "success": true,
                    "data": [
                      "org-1-7831.png"
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }
    delete:
      tags:
        - Data
        - Organisations
      summary: Delete custom organisation image
      description: Delete custom organisation image
      operationId: deleteOrganisationsImages
      x-tag-permissions:
        - organisations
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                file_name:
                  type: string
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of images deleted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LogoImageDeleteResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "file_name": "org-5-8891.png",
                        "success": true
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
    parameters:
      - $ref: "#/components/parameters/idSingleParam"

  '/resellers_organisations':
    post:
      tags:
        - Data
        - Resellers Organisations
      summary: Create object for reseller to organisation link
      description: |-
        This endpoint is used as a **MANY-Resellers-to-MANY-Organisations** linking table.
        If you want to link a reseller to a organisation, or vice versa, you need to add a link in this table.
        If this is not done, or done incorrectly, users will not be able to see their intended resources.

      operationId: createResellersOrganisations
      x-tag-permissions:
        - resellers_organisations
        - resellers
        - organisations
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                reseller_id:
                  type: integer
                  example: 3
                organisation_id:
                  type: integer
                  example: 1
              required: [ "reseller_id", "organisation_id" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns reseller organisation link created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResellersOrganisationsResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "reseller_id": 3,
                        "organisation_id": 1,
                        "reseller_name": "IQT Holdings",
                        "organisation_name": "Kiddies Rides"
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }

  '/resellers_organisations/{id}':
    get:
      tags:
        - Data
        - Resellers Organisations
      summary: Get object for reseller organisation link
      operationId: getResellersOrganisations
      x-tag-permissions:
        - resellers_organisations
        - resellers
        - organisations
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "reseller organisation" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResellersOrganisationsResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "reseller_id": 3,
                        "organisation_id": 1,
                        "reseller_name": "IQT Holdings",
                        "organisation_name": "Kiddies Rides"
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
    delete:
      tags:
        - Data
        - Resellers Organisations
      summary: Delete object for resellers organisations
      operationId: deleteResellersOrganisations
      x-tag-permissions:
        - resellers_organisations
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeleteResponse"
              example:
                {
                  "success": true,
                  "data": "Successfully deleted record(s). [1]",
                  "timestamp": 1723108298846
                }
          description: Returns result of delete
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/companies':
    post:
      tags:
        - Data
        - Companies
      summary: Create object for company
      description: |-
        Companies are the third level in the Payway system. **A company may only be linked to ONE parent Organisation.**

      operationId: createCompanies
      x-tag-permissions:
        - resellers
        - organisations
        - companies
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  example: "BigTech Company"
                  maxLength: 60
                  pattern: ^[.@&]?[a-zA-Z0-9 ]+[ !.@&()]?[ a-zA-Z0-9!()]+
                  minLength: 1
                address:
                  type: string
                  example: "109 BigTech Street, Cape Town 8800"
                  maxLength: 400
                contact_number:
                  type: string
                  example: '+27876545611'
                  maxLength: 20
                  pattern: ^((\+|\d)[0-9]{1,16})?$
                  minLength: 0
                contact_person:
                  type: string
                  example: "John Doe"
                  maxLength: 50
                  pattern: ^[A-Za-z0-9]+[A-Za-z 0-9]*$
                  minLength: 1
                lat_lng:
                  type: string
                  maxLength: 200
                  example: "-18.08011,-34.73830"
                  pattern: '^[-+]?([1-8]?\d(\.\d+)?|90(\.0+)?),\s*[-+]?(180(\.0+)?|((1[0-7]\d)|([1-9]?\d))(\.\d+)?)$'
                  minLength: 1
                organisation_id:
                  type: integer
                  example: 2
                email_template:
                  type: string
                  description: GZIPed string of custom HTML used for email templates.
                logo_url:
                  type: string
                  example: 'https://google.com/image.png'
                  description: Link to png used for logo
                sap:
                  type: string
                  example: BE566492
                  pattern: ^((\+|\d)[0-9]{1,16})?$
                  maxLength: 150
                  description: Tracking code for billing.
                support_text:
                  type: string
                  description: Support text to be displayed for apps.
                active:
                  type: boolean
              required: [ "name", "address", "contact_number", "contact_person", "organisation_id", "active" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns company object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CompaniesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 4,
                        "name": "BigTech Company",
                        "address": "109 BigTech Street, Cape Town 8800",
                        "contact_number": "+27876545611",
                        "contact_person": "John Doe",
                        "lat_lng": "-18.08011,-34.73830",
                        "email_template": "H4sIAAAAAAAAA+1abW/bNhD+vPwKxsMwYKgsyy9N4pcMaZq2QbI27bK225eBls4WF0pUSNqON/S/j6RkWZIlO02bLu18RZOIOh3J5557MeWd/q7HXDmPAPkyoIc7/cUvwN7hDlLSD0BiFOIABrUpgVnEuKwhl4USQjmozYgn/YEHU+KCZS5q9uqDHgiXk0gSFmaevcBCzBj30BsQIJGFjrizr36dBJhQdAlBRLEEgUaMIzUDUBYBF3n7vpSRBdcTMh3UjmPD1qXaT2YaCTfS1vvqIdfHXE01+O3ymbWfGpJEUjh8C5yMiIv1ItEx80AvSLRaGxfUt2MDsTEh54u/teh5H6VXQ+bN0T/ppZYA8zEJu6iB8EQytEsCjTAOZS+nFmHPI+FY61WpGPS7yGk0fqjUGSlQrBEOCJ13kcChsITedl6JkhAsH8jYl8pcvZ2/a81geEWUFW1KBIxJ3yxMzUUwJViAV3ggEJb2gSXI32Bh76+JkPEyyw1v0v2wk/75UwHM20yVeVziIYWld6RX9I1gltGxqIiwCwr9SFZiu9TmG7QzSyDBuDCpR4SimXLPkDL3Kj/FUEUL8C4KWQiFyfGNlSHAqgeIigYeMWr4bQWK32oG4k7U/9KF4cKyDKweuIwbC8U1fIjZbyf079txBulrxqdKFEYy5vug1qilw/FQnEmy45JFldoxPXM32GikYzs7NBy7jDI+qH3/bF//W95JZtNYLQfN4ge1NCR7FWFnXJ2JEotPqIITbrAr6byHhti9GnM2Cb0uSmbu1XYUGruWhV6cHD09eYMsS10buiwhp2Ss9uqCdtVyVdNkXMGR2ZlhQm6zLlCarHdlXBOyOL6AMI9BKTAZHI2sQLbEqYcy8GUZWUAlsbNIwXyZMvvSO8xRrwBTViogy0opfFkpgTIrVbAWdcogzkoCbKdRcX+J8chIuVZK0TTclcHopoBumYXDFXs51PM3vJQdrUZtMemiJLT0hLXyR83jKqlV3kw3wl1lUVVv0bXtgBEBwo/qYyL9ybBOmA265qpkntRcVW64tay5Ks+oRDQGW3JVxCLMFQHqUTguBy0rC35v1kzjY7PqBgrl9h1jWcjyucxebcSu8JddDJlktMS/65y+xqU6c52/ev7K5K1KrY92PAmUE0VdXE+UC03VtFwvrLsssJP+zZ46dmfoPvbcVnvvYG+013b29hoN7Hjtoe109h87BwdOu9E6aFmvz87+OH1/fvz8XfP38/dnz9+eHf9qXxBXTjg0NTt+ViQKsBw4KmZmt3ZVrugWy/MixTWbJihuSz+lXhFAn8uX2wD+BgNYjehSmKmV6YOxcqpgAvbk5dNsu/FV9huFvu3O/UZi51b9hsbul6PTlyvJ7v/RiVT0GJ+lneisZqPONhsV5CvJRmb0bu2E79x2Z7kTiyNOMH2EXgCdgiQu7u18l0p8HqE+96v61lGMytwyyUQlgYbTOGnuZ+8sc0dmMJNcivZnCWdD3UjQNfW+eu9azrHKSnyOnjB2pWZCR1FUjZXtO1+oVXBWg9PZBmdBvv3grObiQj4hNp12eWx2njw+2N+7Y2zmTixb6zvx9ZF5yczBMQknoOgjfTRnE46w66o+QqJp5oz4EYooYAHIVHwkfUAjRimb6YB29fkxCSUzz6+dcZjkABxF9TVJIPpCOaC5mgOa2xxQkG0OeHj1eTUHZG6a02vTfnfNKfSd80M2A/ypo/wBhOy2p96G7H2HbLPxoMv2O/iRg6KD+qFqrg802n0Agbntp7eB+cD76XjQGjIpWZDQ8+PitpgZPlupPR3p5hn5eAoIh3N0PQGhy65YdN7rCzURRCLdvItJpF/cokhxHvXxAuwYqEXPsfp+W31CB653eotT/XLxOYyWcTpmbExBv9qoHepE1bfxGs7cd476z+j6aXUkoatkkTJV6CIfMJUv2Ex53EPD+b0TsJp0F3g+w3NNuzo6QhFn3sSVekmnr9ElUAhA8vk9fgRd8/LCXC3eWORO3pdmimf2aY1pr1bZdkmVraysX7Karq+gG6rmhkr50dXRLnNF8T2Srb/BY77Qo78Z+C/iF9CUMSgAAA==",
                        "logo_url": "https://google.com",
                        "sap": "BE566492",
                        "support_text": null,
                        "active": true,
                        "resellers": {
                          "id": [
                            4
                          ],
                          "name": [
                            "360 Laundry Solutions"
                          ],
                          "id_name": [
                            "4,360 Laundry Solutions"
                          ]
                        },
                        "organisations": {
                          "id": 320,
                          "name": "Rezi Buubles"
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723639902458
                  }

  '/companies/{id}':
    get:
      tags:
        - Data
        - Companies
      operationId: getCompanies
      x-tag-permissions:
        - resellers
        - organisations
        - companies
      summary: Get object for company
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "companies" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CompaniesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 4,
                        "name": "BigTech Company",
                        "address": "109 BigTech Street, Cape Town 8800",
                        "contact_number": "+27876545611",
                        "contact_person": "John Doe",
                        "lat_lng": "-18.08011,-34.73830",
                        "email_template": "H4sIAAAAAAAAA+1abW/bNhD+vPwKxsMwYKgsyy9N4pcMaZq2QbI27bK225eBls4WF0pUSNqON/S/j6RkWZIlO02bLu18RZOIOh3J5557MeWd/q7HXDmPAPkyoIc7/cUvwN7hDlLSD0BiFOIABrUpgVnEuKwhl4USQjmozYgn/YEHU+KCZS5q9uqDHgiXk0gSFmaevcBCzBj30BsQIJGFjrizr36dBJhQdAlBRLEEgUaMIzUDUBYBF3n7vpSRBdcTMh3UjmPD1qXaT2YaCTfS1vvqIdfHXE01+O3ymbWfGpJEUjh8C5yMiIv1ItEx80AvSLRaGxfUt2MDsTEh54u/teh5H6VXQ+bN0T/ppZYA8zEJu6iB8EQytEsCjTAOZS+nFmHPI+FY61WpGPS7yGk0fqjUGSlQrBEOCJ13kcChsITedl6JkhAsH8jYl8pcvZ2/a81geEWUFW1KBIxJ3yxMzUUwJViAV3ggEJb2gSXI32Bh76+JkPEyyw1v0v2wk/75UwHM20yVeVziIYWld6RX9I1gltGxqIiwCwr9SFZiu9TmG7QzSyDBuDCpR4SimXLPkDL3Kj/FUEUL8C4KWQiFyfGNlSHAqgeIigYeMWr4bQWK32oG4k7U/9KF4cKyDKweuIwbC8U1fIjZbyf079txBulrxqdKFEYy5vug1qilw/FQnEmy45JFldoxPXM32GikYzs7NBy7jDI+qH3/bF//W95JZtNYLQfN4ge1NCR7FWFnXJ2JEotPqIITbrAr6byHhti9GnM2Cb0uSmbu1XYUGruWhV6cHD09eYMsS10buiwhp2Ss9uqCdtVyVdNkXMGR2ZlhQm6zLlCarHdlXBOyOL6AMI9BKTAZHI2sQLbEqYcy8GUZWUAlsbNIwXyZMvvSO8xRrwBTViogy0opfFkpgTIrVbAWdcogzkoCbKdRcX+J8chIuVZK0TTclcHopoBumYXDFXs51PM3vJQdrUZtMemiJLT0hLXyR83jKqlV3kw3wl1lUVVv0bXtgBEBwo/qYyL9ybBOmA265qpkntRcVW64tay5Ks+oRDQGW3JVxCLMFQHqUTguBy0rC35v1kzjY7PqBgrl9h1jWcjyucxebcSu8JddDJlktMS/65y+xqU6c52/ev7K5K1KrY92PAmUE0VdXE+UC03VtFwvrLsssJP+zZ46dmfoPvbcVnvvYG+013b29hoN7Hjtoe109h87BwdOu9E6aFmvz87+OH1/fvz8XfP38/dnz9+eHf9qXxBXTjg0NTt+ViQKsBw4KmZmt3ZVrugWy/MixTWbJihuSz+lXhFAn8uX2wD+BgNYjehSmKmV6YOxcqpgAvbk5dNsu/FV9huFvu3O/UZi51b9hsbul6PTlyvJ7v/RiVT0GJ+lneisZqPONhsV5CvJRmb0bu2E79x2Z7kTiyNOMH2EXgCdgiQu7u18l0p8HqE+96v61lGMytwyyUQlgYbTOGnuZ+8sc0dmMJNcivZnCWdD3UjQNfW+eu9azrHKSnyOnjB2pWZCR1FUjZXtO1+oVXBWg9PZBmdBvv3grObiQj4hNp12eWx2njw+2N+7Y2zmTixb6zvx9ZF5yczBMQknoOgjfTRnE46w66o+QqJp5oz4EYooYAHIVHwkfUAjRimb6YB29fkxCSUzz6+dcZjkABxF9TVJIPpCOaC5mgOa2xxQkG0OeHj1eTUHZG6a02vTfnfNKfSd80M2A/ypo/wBhOy2p96G7H2HbLPxoMv2O/iRg6KD+qFqrg802n0Agbntp7eB+cD76XjQGjIpWZDQ8+PitpgZPlupPR3p5hn5eAoIh3N0PQGhy65YdN7rCzURRCLdvItJpF/cokhxHvXxAuwYqEXPsfp+W31CB653eotT/XLxOYyWcTpmbExBv9qoHepE1bfxGs7cd476z+j6aXUkoatkkTJV6CIfMJUv2Ex53EPD+b0TsJp0F3g+w3NNuzo6QhFn3sSVekmnr9ElUAhA8vk9fgRd8/LCXC3eWORO3pdmimf2aY1pr1bZdkmVraysX7Karq+gG6rmhkr50dXRLnNF8T2Srb/BY77Qo78Z+C/iF9CUMSgAAA==",
                        "logo_url": "https://google.com",
                        "sap": "BE566492",
                        "support_text": null,
                        "active": true,
                        "resellers": {
                          "id": [
                            4
                          ],
                          "name": [
                            "360 Laundry Solutions"
                          ],
                          "id_name": [
                            "4,360 Laundry Solutions"
                          ]
                        },
                        "organisations": {
                          "id": 320,
                          "name": "Rezi Buubles"
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723639902458
                  }
    put:
      tags:
        - Data
        - Companies
      summary: Update object for companies
      operationId: updateCompanies
      x-tag-permissions:
        - resellers
        - organisations
        - companies
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  example: "BigTech Company"
                  maxLength: 60
                  pattern: ^[.@&]?[a-zA-Z0-9 ]+[ !.@&()]?[ a-zA-Z0-9!()]+
                  minLength: 1
                address:
                  type: string
                  example: "109 BigTech Street, Cape Town 8800"
                  maxLength: 400
                contact_number:
                  type: string
                  example: '+27876545611'
                  maxLength: 20
                  pattern: ^((\+|\d)[0-9]{1,16})?$
                  minLength: 0
                contact_person:
                  type: string
                  example: "John Doe"
                  maxLength: 50
                  pattern: ^[A-Za-z0-9]+[A-Za-z 0-9]*$
                  minLength: 1
                lat_lng:
                  type: string
                  maxLength: 200
                  example: "-18.08011,-34.73830"
                  pattern: '^[-+]?([1-8]?\d(\.\d+)?|90(\.0+)?),\s*[-+]?(180(\.0+)?|((1[0-7]\d)|([1-9]?\d))(\.\d+)?)$'
                  minLength: 1
                organisation_id:
                  type: integer
                  example: 2
                email_template:
                  type: string
                  description: GZIPed string of custom HTML used for email templates.
                logo_url:
                  type: string
                  example: 'https://google.com/image.png'
                  description: Link to png used for logo
                sap:
                  type: string
                  example: BE566492
                  pattern: ^((\+|\d)[0-9]{1,16})?$
                  maxLength: 150
                  description: Tracking code for billing.
                support_text:
                  type: string
                  description: Support text to be displayed for apps.
                active:
                  type: boolean
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "companies" items updated by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CompaniesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "BigTech Company",
                        "address": "109 BigTech Street, Cape Town 8800",
                        "contact_number": "+27876545611",
                        "contact_person": "John Doe",
                        "lat_lng": "-18.08011,-34.73830",
                        "logo_url": "https://google.com",
                        "sap": "BE566492",
                        "support_text": null,
                        "active": true,
                        "resellers": {
                          "id": [
                            4
                          ],
                          "name": [
                            "360 Laundry Solutions"
                          ],
                          "id_name": [
                            "4,360 Laundry Solutions"
                          ]
                        },
                        "organisations": {
                          "id": 320,
                          "name": "Rezi Buubles"
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }
    delete:
      tags:
        - Data
        - Companies
      operationId: deleteCompanies
      x-tag-permissions:
        - companies
      summary: Delete object for companies
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeleteResponse"
              example:
                {
                  "success": true,
                  "data": "Successfully deleted record(s). [1]",
                  "timestamp": 1723108298846
                }
          description: Returns result of delete
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/sites':
    post:
      tags:
        - Data
        - Sites
      summary: Create object for site
      description: |-
        Sites are of the fourth level in the Payway system. A site may only be linked to one parent company.
        The Booking System is managed at a site level. For a site to allow bookings, the "allow_booking" flag must be set.
        The "mifare_site_id" field is used to match the Site to it's equivalent Mifare Site (refer to MiFare API).

      operationId: createSites
      x-tag-permissions:
        - companies
        - resellers
        - organisations
        - sites
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  example: "HighTech Site"
                  maxLength: 60
                  pattern: ^[.@&]?[a-zA-Z0-9 ]+[ !.@&()]?[ a-zA-Z0-9!()]+
                  minLength: 1
                address:
                  type: string
                  example: "109 BigTech Street, Cape Town 8800"
                  maxLength: 400
                contact_number:
                  type: string
                  example: '+27876545611'
                  maxLength: 20
                  pattern: ^((\+|\d)[0-9]{1,16})?$
                  minLength: 0
                contact_person:
                  type: string
                  example: "John Doe"
                  maxLength: 50
                  pattern: ^[A-Za-z0-9]+[A-Za-z 0-9]*$
                  minLength: 1
                lat_lng:
                  type: string
                  example: "{\"latLng\":{\"lat\":-33.848106900673486,\"lng\":18.5385}}"
                  pattern: '^[-+]?([1-8]?\d(\.\d+)?|90(\.0+)?),\s*[-+]?(180(\.0+)?|((1[0-7]\d)|([1-9]?\d))(\.\d+)?)$'
                  minLength: 1
                company_id:
                  type: integer
                  example: 5
                mifare_site_id:
                  type: integer
                  example: 5
                allow_booking:
                  type: boolean
                active:
                  type: boolean
              required: [ "name", "address", "contact_number", "contact_person", "company_id", "active" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns site object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SitesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "HighTech Site",
                        "address": "109 BigTech Street, Cape Town 8800",
                        "contact_number": "+27876545611",
                        "contact_person": "John Doe",
                        "lat_lng": "{\"latLng\":{\"lat\":-33.848106900673486,\"lng\":18.5385}}",
                        "mifare_site_id": 17,
                        "allow_booking": false,
                        "active": true,
                        "resellers": {
                          "id": [
                            4
                          ],
                          "name": [
                            "360 Laundry Solutions"
                          ],
                          "id_name": [
                            "4,360 Laundry Solutions"
                          ]
                        },
                        "organisations": {
                          "id": 1,
                          "name": "LS360"
                        },
                        "companies": {
                          "id": 1,
                          "name": "Supreme Vending"
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }

  '/sites/{id}':
    get:
      tags:
        - Data
        - Sites
      operationId: getSites
      x-tag-permissions:
        - companies
        - resellers
        - organisations
        - sites
      summary: Get object for sites
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "site" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SitesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "HighTech Site",
                        "address": "109 BigTech Street, Cape Town 8800",
                        "contact_number": "+27876545611",
                        "contact_person": "John Doe",
                        "lat_lng": "{\"latLng\":{\"lat\":-33.848106900673486,\"lng\":18.5385}}",
                        "mifare_site_id": 17,
                        "allow_booking": false,
                        "active": true,
                        "resellers": {
                          "id": [
                            4
                          ],
                          "name": [
                            "360 Laundry Solutions"
                          ],
                          "id_name": [
                            "4,360 Laundry Solutions"
                          ]
                        },
                        "organisations": {
                          "id": 1,
                          "name": "LS360"
                        },
                        "companies": {
                          "id": 1,
                          "name": "Supreme Vending"
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }
    put:
      tags:
        - Data
        - Sites
      summary: Update object for sites
      operationId: updateSites
      x-tag-permissions:
        - companies
        - resellers
        - organisations
        - sites
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  example: "HighTech Site"
                  maxLength: 60
                  pattern: ^[.@&]?[a-zA-Z0-9 ]+[ !.@&()]?[ a-zA-Z0-9!()]+
                  minLength: 1
                address:
                  type: string
                  example: "109 BigTech Street, Cape Town 8800"
                  maxLength: 400
                contact_number:
                  type: string
                  example: '+27876545611'
                  maxLength: 20
                  pattern: ^((\+|\d)[0-9]{1,16})?$
                  minLength: 0
                contact_person:
                  type: string
                  example: "John Doe"
                  maxLength: 50
                  pattern: ^[A-Za-z0-9]+[A-Za-z 0-9]*$
                  minLength: 1
                lat_lng:
                  type: string
                  example: "{\"latLng\":{\"lat\":-33.848106900673486,\"lng\":18.5385}}"
                  pattern: '^[-+]?([1-8]?\d(\.\d+)?|90(\.0+)?),\s*[-+]?(180(\.0+)?|((1[0-7]\d)|([1-9]?\d))(\.\d+)?)$'
                  minLength: 1
                company_id:
                  type: integer
                  example: 5
                mifare_site_id:
                  type: integer
                  example: 5
                allow_booking:
                  type: boolean
                active:
                  type: boolean
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "site" items updated by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SitesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "HighTech Site",
                        "address": "109 BigTech Street, Cape Town 8800",
                        "contact_number": "+27876545611",
                        "contact_person": "John Doe",
                        "lat_lng": "{\"latLng\":{\"lat\":-33.848106900673486,\"lng\":18.5385}}",
                        "mifare_site_id": 17,
                        "allow_booking": false,
                        "active": true,
                        "resellers": {
                          "id": [
                            4
                          ],
                          "name": [
                            "360 Laundry Solutions"
                          ],
                          "id_name": [
                            "4,360 Laundry Solutions"
                          ]
                        },
                        "organisations": {
                          "id": 1,
                          "name": "LS360"
                        },
                        "companies": {
                          "id": 1,
                          "name": "Supreme Vending"
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }
    delete:
      tags:
        - Data
        - Sites
      summary: Delete object for sites
      operationId: deleteSites
      x-tag-permissions:
        - sites
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeleteResponse"
              example:
                {
                  "success": true,
                  "data": "Successfully deleted record(s). [1]",
                  "timestamp": 1723108298846
                }
          description: Returns result of delete
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/devices':
    post:
      tags:
        - Data
        - Devices
      summary: Create object for device
      description: |-
        Devices are physical WiFi or SIM based modems used to connect physical hardware to the Payway system. 
        Each device has its own hardware type, found in the resource "host_hardware", and "pos_type" that defines the type of device. Each devices
        configuration can be set here. e.g poll_start, poll_end, dip and csq. 
        **A device may only be linked to ONE parent Site.**

      operationId: createDevices
      x-tag-permissions:
        - sites
        - devices
        - resellers
        - organisations
        - companies
        - sites
        - asset_states
        - host_hardware
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  maxLength: 50
                  example:
                uid:
                  type: string
                  maxLength: 50
                  pattern: ^[a-zA-Z0-9]+$
                  minLength: 1
                  description: Unique identification for the device.
                  example: 'ae23db32'
                imsi:
                  type: string
                  maxLength: 50
                  pattern: ^[a-zA-Z0-9#!@$%^&*-_\s]+$
                  minLength: 1
                  description: International Mobile Subscriber Identity or Service Set Identifier (SSID).
                  example: '17654337383999700'
                pos_type_id:
                  type: integer
                host_hardware_id:
                  type: integer
                site_id:
                  type: integer
                polling_frequency:
                  type: integer
                  description: Expected number of polled calls from the device.
                scale_factor:
                  type: integer
                  description: The Bill Scale Factor when using Bill Emulation mode for MDB devices.
                time_zone:
                  type: integer
                  description: Timezone offset of the device in hours.
                screen_fitted:
                  type: boolean
                  description: Indication if an info screen is fitted together with the device on the machine.
                multiplier:
                  type: integer
                  description: Integer Value to multiply the incoming paid value by.
                divider:
                  type: integer
                  example:
                  description: Integer Value to divide the incoming paid value by.
                unit_price:
                  anyOf:
                    - type: number
                    - type: integer
                    - type: string
                  example:
                  description: The price per unit.
                ssid:
                  oneOf:
                    - type: string
                      maxLength: 32
                      pattern: '^[\x20-\x7E]{1,32}$'
                      description: Service Set Identifier for WiFi devices.
                    - type: string
                      minLength: 0
                      maxLength: 0
                password:
                  type: string
                  maxLength: 64
                  description: Service Set Identifier password for WiFi Devices.
                coupon_price:
                  anyOf:
                    - type: number
                    - type: integer
                    - type: string
                  description: The price per unit used for MiFare Payments.
                  example:
                asset_state_id:
                  type: integer
                short_name:
                  type: string
                  maxLength: 20
                  description: Short name description used on Payment Kiosks or POS.
                machine_serial_number:
                  type: string
                  maxLength: 100
                  description: Serial number of the physical machine.
                  example: 'SWMN20045XY2323223'
                active:
                  type: boolean
              required: [ "name", "uid", "imsi", "site_id", "pos_type_id", "asset_state_id", "host_hardware_id", "polling_frequency", "scale_factor", "screen_fitted", "multiplier", "divider", "unit_price", "active" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns device object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DevicesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "async_ratio": "0.00",
                        "callback": 2,
                        "calls": 11841,
                        "channels": 0,
                        "connected_at": "never",
                        "csq": "11,0",
                        "dip": 5,
                        "divider": 1,
                        "firmware_version": "04.13",
                        "heartbeat_rate": "0.00",
                        "imsi": "not reported",
                        "life_days": 1572,
                        "local_time": "2024-05-27 15:05:32",
                        "mdb_online": true,
                        "minutes_connected": "0.00",
                        "multiplier": 1,
                        "name": "1STFloor",
                        "password": "L$36o",
                        "peer_host": "0.0.0.0",
                        "polling_frequency": 30,
                        "protocol": "unknown",
                        "scale_factor": 1,
                        "screen_fitted": false,
                        "seq": 31606,
                        "ssid": "LS360",
                        "time_offset": -1,
                        "time_zone": 2,
                        "timestamp": "2024-05-26T22:05:04.000Z",
                        "uid": "861359035223765",
                        "unit_price": "0.00",
                        "vmc_expansion_id": "",
                        "coupon_price": "0.00",
                        "short_name": null,
                        "machine_serial_number": null,
                        "online": false,
                        "last_online": "2024-12-10 13:15:00.231160",
                        "last_transaction_date": null,
                        "active": true,
                        "resellers": {
                          "id": [
                            1
                          ],
                          "name": [
                            "IQT Holdings"
                          ],
                          "id_name": [
                            "1,IQT Holdings"
                          ]
                        },
                        "organisations": {
                          "id": 5,
                          "name": "Supreme Vending"
                        },
                        "companies": {
                          "id": 5,
                          "name": "Supreme Vending"
                        },
                        "sites": {
                          "id": 5,
                          "name": "CSG"
                        },
                        "status_codes": {
                          "id": 51,
                          "name": "AVAILABLE"
                        },
                        "asset_states": {
                          "id": 1,
                          "name": "Production"
                        },
                        "pos_types": {
                          "id": 2,
                          "name": "LTE",
                          "version": "1.0"
                        },
                        "host_hardware": {
                          "id": 1,
                          "name": "SQ Dryer"
                        },
                        "emulations": {
                          "id": 1,
                          "name": "Bills"
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }

  '/devices/{id}':
    get:
      tags:
        - Data
        - Devices
      operationId: getDevices
      x-tag-permissions:
        - sites
        - devices
        - resellers
        - organisations
        - companies
        - sites
        - asset_states
        - host_hardware
      summary: Get object for devices
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "device" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DevicesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "async_ratio": "0.00",
                        "callback": 2,
                        "calls": 11841,
                        "channels": 0,
                        "connected_at": "never",
                        "csq": "11,0",
                        "dip": 5,
                        "divider": 1,
                        "firmware_version": "04.13",
                        "heartbeat_rate": "0.00",
                        "imsi": "not reported",
                        "life_days": 1572,
                        "local_time": "2024-05-27 15:05:32",
                        "mdb_online": true,
                        "minutes_connected": "0.00",
                        "multiplier": 1,
                        "name": "1STFloor",
                        "password": "L$36o",
                        "peer_host": "0.0.0.0",
                        "polling_frequency": 30,
                        "protocol": "unknown",
                        "scale_factor": 1,
                        "screen_fitted": false,
                        "seq": 31606,
                        "ssid": "LS360",
                        "time_offset": -1,
                        "time_zone": 2,
                        "timestamp": "2024-05-26T22:05:04.000Z",
                        "uid": "861359035223765",
                        "unit_price": "0.00",
                        "vmc_expansion_id": "",
                        "coupon_price": "0.00",
                        "short_name": null,
                        "machine_serial_number": null,
                        "online": false,
                        "last_online": "2024-12-10 13:15:00.231160",
                        "last_transaction_date": null,
                        "active": true,
                        "resellers": {
                          "id": [
                            1
                          ],
                          "name": [
                            "IQT Holdings"
                          ],
                          "id_name": [
                            "1,IQT Holdings"
                          ]
                        },
                        "organisations": {
                          "id": 5,
                          "name": "Supreme Vending"
                        },
                        "companies": {
                          "id": 5,
                          "name": "Supreme Vending"
                        },
                        "sites": {
                          "id": 5,
                          "name": "CSG"
                        },
                        "status_codes": {
                          "id": 51,
                          "name": "AVAILABLE"
                        },
                        "asset_states": {
                          "id": 1,
                          "name": "Production"
                        },
                        "pos_types": {
                          "id": 2,
                          "name": "LTE",
                          "version": "1.0"
                        },
                        "host_hardware": {
                          "id": 1,
                          "name": "SQ Dryer"
                        },
                        "emulations": {
                          "id": 1,
                          "name": "Bills"
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }
    put:
      tags:
        - Data
        - Devices
      summary: Update object for devices
      operationId: updateDevices
      x-tag-permissions:
        - sites
        - devices
        - resellers
        - organisations
        - companies
        - sites
        - asset_states
        - host_hardware
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  maxLength: 50
                  example:
                uid:
                  type: string
                  maxLength: 50
                  pattern: ^[a-zA-Z0-9]+$
                  minLength: 1
                  description: Unique identification for the device.
                  example: 'ae23db32'
                imsi:
                  type: string
                  maxLength: 50
                  pattern: ^[a-zA-Z0-9#!@$%^&*-_\s]+$
                  minLength: 1
                  description: International Mobile Subscriber Identity or Service Set Identifier (SSID).
                  example: '17654337383999700'
                pos_type_id:
                  type: integer
                host_hardware_id:
                  type: integer
                site_id:
                  type: integer
                polling_frequency:
                  type: integer
                  description: Expected number of polled calls from the device.
                scale_factor:
                  type: integer
                  description: The Bill Scale Factor when using Bill Emulation mode for MDB devices.
                time_zone:
                  type: integer
                  description: Timezone offset of the device in hours.
                screen_fitted:
                  type: boolean
                  description: Indication if an info screen is fitted together with the device on the machine.
                multiplier:
                  type: integer
                  description: Integer Value to multiply the incoming paid value by.
                divider:
                  type: integer
                  example:
                  description: Integer Value to divide the incoming paid value by.
                unit_price:
                  anyOf:
                    - type: number
                    - type: integer
                    - type: string
                  example: 4
                  description: The price per unit.
                ssid:
                  oneOf:
                    - type: string
                      maxLength: 32
                      pattern: '^[\x20-\x7E]{1,32}$'
                      description: Service Set Identifier for WiFi devices.
                    - type: string
                      minLength: 0
                      maxLength: 0
                password:
                  type: string
                  maxLength: 64
                  description: Service Set Identifier password for WiFi Devices.
                coupon_price:
                  anyOf:
                    - type: number
                    - type: integer
                    - type: string
                  description: The price per unit used for MiFare Payments.
                  example: 5
                asset_state_id:
                  type: integer
                short_name:
                  type: string
                  maxLength: 20
                  description: Short name description used on Payment Kiosks or POS.
                machine_serial_number:
                  type: string
                  maxLength: 100
                  description: Serial number of the physical machine.
                  example: 'SWMN20045XY2323223'
                active:
                  type: boolean
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "device" items updated by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DevicesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "async_ratio": "0.00",
                        "callback": 2,
                        "calls": 11841,
                        "channels": 0,
                        "connected_at": "never",
                        "csq": "11,0",
                        "dip": 5,
                        "divider": 1,
                        "firmware_version": "04.13",
                        "heartbeat_rate": "0.00",
                        "imsi": "not reported",
                        "life_days": 1572,
                        "local_time": "2024-05-27 15:05:32",
                        "mdb_online": true,
                        "minutes_connected": "0.00",
                        "multiplier": 1,
                        "name": "1STFloor",
                        "password": "L$36o",
                        "peer_host": "0.0.0.0",
                        "polling_frequency": 30,
                        "protocol": "unknown",
                        "scale_factor": 1,
                        "screen_fitted": false,
                        "seq": 31606,
                        "ssid": "LS360",
                        "time_offset": -1,
                        "time_zone": 2,
                        "timestamp": "2024-05-26T22:05:04.000Z",
                        "uid": "861359035223765",
                        "unit_price": "0.00",
                        "vmc_expansion_id": "",
                        "coupon_price": "0.00",
                        "short_name": null,
                        "machine_serial_number": null,
                        "online": false,
                        "last_online": "2024-12-10 13:15:00.231160",
                        "last_transaction_date": null,
                        "active": true,
                        "resellers": {
                          "id": [
                            1
                          ],
                          "name": [
                            "IQT Holdings"
                          ],
                          "id_name": [
                            "1,IQT Holdings"
                          ]
                        },
                        "organisations": {
                          "id": 5,
                          "name": "Supreme Vending"
                        },
                        "companies": {
                          "id": 5,
                          "name": "Supreme Vending"
                        },
                        "sites": {
                          "id": 5,
                          "name": "CSG"
                        },
                        "status_codes": {
                          "id": 51,
                          "name": "AVAILABLE"
                        },
                        "asset_states": {
                          "id": 1,
                          "name": "Production"
                        },
                        "pos_types": {
                          "id": 2,
                          "name": "LTE",
                          "version": "1.0"
                        },
                        "host_hardware": {
                          "id": 1,
                          "name": "SQ Dryer"
                        },
                        "emulations": {
                          "id": 1,
                          "name": "Bills"
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }
    delete:
      tags:
        - Data
        - Devices
      summary: Delete object for devices
      operationId: deleteDevices
      x-tag-permissions:
        - devices
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeleteResponse"
              example:
                {
                  "success": true,
                  "data": "Successfully deleted record(s). [1]",
                  "timestamp": 1723108298846
                }
          description: Returns result of delete
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/devices/activate':
    post:
      tags:
        - Functions
        - Devices
      summary: Activate device remotely
      description: |-
        Devices are physical WiFi or SIM based modems used to connect physical hardware to the Payway system. Using this endpoint,
        you can test if you have setup your device correctly or integrate using Mifare.
        This endpoint will trigger the device based the the payment_service_provider field provided in the body.

      operationId: activateDevices
      x-tag-permissions:
        - devices
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              oneOf:
                - type: array
                  items:
                    type: object
                - type: object
              additionalProperties: false
              properties:
                device_id:
                  type: integer
                payment_service_provider:
                  type: string
                  enum: [ "mifare", "test" ]
                  description: The type of activation method.
                card_no:
                  type: string
                  description: The unique UUID for the card found in the MiFare system. Only used if "payment_service_provider" = mifare.
                  example: ab34ef16aa
                  maxLength: 45
                amount:
                  type: number
                  minimum: 0
                  description: The amount of currency the activation is going to use in whole numbers, not cents. If "payment_service_provider" = mifare, the devices coupon price is used and the amount is ignored.
              required: [ "device_id", "payment_service_provider" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns device object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DevicesActivateResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "device_id": 1,
                        "reason": "Webhook call successful. [Notification Successfully published]",
                        "success": true
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }

  '/logs_fatal/{id}':
    get:
      tags:
        - Data
        - Logs
      operationId: getLogsFatal
      summary: Get object for fatal logs
      description: |-
        This endpoint holds all Fatal Logs generated in the Payway Payment Engine.

      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "fatal log" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LogsFatalResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "webhook_timestamp": null,
                        "provider": "none",
                        "provider_id": null,
                        "uuid": "none",
                        "application": "cc_payment_gateway_logic",
                        "application_timestamp": null,
                        "application_version": "2.0.0",
                        "calling_url": "",
                        "reason": "Internal Server Error occurred",
                        "payload": "",
                        "severity": "fatal",
                        "created": "2024-07-02T13:00:59.773Z"
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }

    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"


  '/logs_info/{id}':
    get:
      tags:
        - Data
        - Logs
      operationId: getLogsInfo
      summary: Get object for info logs
      description: |-
        This endpoint holds all Info Logs generated in the Payway Payment Engine.
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "info log" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LogsInfoResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "webhook_timestamp": 1719924749423,
                        "provider": "IQT MiFare Legacy",
                        "provider_id": 6,
                        "uuid": "f0cd6ff0-3871-11ef-a4ac-8526e161eb2f",
                        "application": "cc_payment_gateway_logic",
                        "application_timestamp": 1719924749423,
                        "application_version": "2.0.0",
                        "calling_url": "",
                        "reason": "unknown",
                        "payload": "",
                        "severity": "info",
                        "created": "2024-07-02T12:52:29.482Z"
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723715090987
                  }
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/logs_warning/{id}':
    get:
      tags:
        - Data
        - Logs
      operationId: getLogsWarning
      summary: Get object for warning logs
      description: |-
        This endpoint holds all Warning Logs generated in the Payway Payment Engine.
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "warning log" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LogsWarningResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "webhook_timestamp": 1719924749423,
                        "provider": "IQT MiFare Legacy",
                        "provider_id": 6,
                        "uuid": "f0cd6ff0-3871-11ef-a4ac-8526e161eb2f",
                        "application": "cc_payment_gateway_logic",
                        "application_timestamp": 1719924749423,
                        "application_version": "2.0.0",
                        "calling_url": "",
                        "reason": "unknown",
                        "payload": "",
                        "severity": "warn",
                        "created": "2024-07-02T12:52:29.482Z"
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723715090987
                  }
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/logs_combined/{id}':
    get:
      tags:
        - Data
        - Logs
      operationId: getLogsCombined
      summary: Get object for combined logs
      description: |-
        This endpoint will return all logs, warning, fatal and info. This is done by a union and id does not represent
        link to individual log type.

      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "combined log" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LogsCombinedResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "webhook_timestamp": null,
                        "provider": "none",
                        "provider_id": null,
                        "uuid": "none",
                        "application": "cc_payment_gateway_logic",
                        "application_timestamp": null,
                        "application_version": "2.0.0",
                        "calling_url": "",
                        "reason": "Internal Server Error occurred",
                        "payload": "",
                        "severity": "fatal",
                        "created": "2024-07-02T13:00:59.773Z"
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }

    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/providers':
    post:
      tags:
        - Data
        - Providers
      summary: Create object for provider
      description: |-
        This endpoint is used to define providers that are supported by the Payway system.
        Providers are integrations between Payway and an external payment systems, e.g Snapscan or Mastercard.

      operationId: createProviders
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  maxLength: 50
                  example: Snapscan
                logo_url:
                  type: string
                  example: 'https://google.com/image.png'
                  description: Link to png used for logo
                color:
                  type: string
                  maxLength: 10
                  pattern: '^#(?:[0-9a-fA-F]{3}){1,2}$'
                  minLength: 1
                  example: '#7795f3'
                  description: Hex code colour
                qr_payments:
                  type: boolean
                  description: Does this provider support qr code based payments?
                qr_string:
                  type: string
                  example: "https://pos.snapscan.io/qr/{merchant_id}?ID=IMEI{uid}&Amount={amount}"
                qr_cents:
                  type: boolean
                  description: Does this QR code require the amount to be in cents?
                active:
                  type: boolean
              required: [ "name", "active" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns provider object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProvidersResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "Snapscan",
                        "color": "#7795f3",
                        "logo_url": "https://google.com/image.png",
                        "qr_payments": true,
                        "qr_string": "https://pos.snapscan.io/qr/{merchant_id}?ID=IMEI{uid}&Amount={amount}",
                        "qr_cents": false,
                        "active": true
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }


  '/providers/{id}':
    get:
      tags:
        - Data
        - Providers
      operationId: getProviders
      summary: Get object for providers
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "provider" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProvidersResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "Snapscan",
                        "color": "#7795f3",
                        "logo_url": "https://google.com/image.png",
                        "qr_payments": true,
                        "qr_string": "https://pos.snapscan.io/qr/{merchant_id}?ID=IMEI{uid}&Amount={amount}",
                        "qr_cents": false,
                        "active": true
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }
    put:
      tags:
        - Data
        - Providers
      summary: Update object for providers
      operationId: updateProviders
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  maxLength: 50
                  example: Snapscan
                logo_url:
                  type: string
                  example: 'https://google.com/image.png'
                color:
                  type: string
                  maxLength: 10
                  pattern: '^#(?:[0-9a-fA-F]{3}){1,2}$'
                  minLength: 1
                  example: '#7795f3'
                qr_payments:
                  type: boolean
                  description: Does this provider support qr code based payments?
                qr_string:
                  type: string
                  example: "https://pos.snapscan.io/qr/{merchant_id}?ID=IMEI{uid}&Amount={amount}"
                qr_cents:
                  type: boolean
                  description: Does this QR code require the amount to be in cents?
                active:
                  type: boolean
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "provider" items updated by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProvidersResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "Snapscan",
                        "color": "#7795f3",
                        "logo_url": "https://google.com/image.png",
                        "qr_payments": true,
                        "qr_string": "https://pos.snapscan.io/qr/{merchant_id}?ID=IMEI{uid}&Amount={amount}",
                        "qr_cents": false,
                        "active": true
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/pos_types':
    post:
      tags:
        - Data
        - Pos Types
      summary: Create object for pos types
      description: |-
        This endpoint is used to create POS (Point Of Sale) types. These define the technology used by hardware e.g Wifi, LTE and 
        Firmware Release Versions.

      operationId: createPosTypes
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  example: 'WIFI'
                  maxLength: 50
                version:
                  type: string
                  example: '1.0.0'
                  maxLength: 10
                  pattern: '^\d+\.\d+\.\d+$'
                  minLength: 1
                  description: Version of firmware used.
                active:
                  type: boolean
              required: [ "name", "active" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns pos type object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PosTypesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "WIFI",
                        "version": "1.0",
                        "active": true
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }

  '/pos_types/{id}':
    get:
      tags:
        - Data
        - Pos Types
      operationId: getPosTypes
      summary: Get object for pos types
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "pos type" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PosTypesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "WIFI",
                        "version": "1.0",
                        "active": true
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
    put:
      tags:
        - Data
        - Pos Types
      summary: Update object for pos types
      operationId: updatePosTypes
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  example: 'WIFI'
                  maxLength: 50
                version:
                  type: string
                  example: '1.0.0'
                  maxLength: 10
                  pattern: '^\d+\.\d+\.\d+$'
                  minLength: 1
                  description: Version of firmware used.
                active:
                  type: boolean
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "pos type" items updated by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PosTypesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "WIFI",
                        "version": "1.0",
                        "active": true
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/host_hardware':
    post:
      tags:
        - Data
        - Host Hardware
      summary: Create object for host hardware
      description: |-
        This endpoint is used to define different types of host hardware devices, physical hardware that Payway hardware integrates into, in the field, eg: 
        * Speedqueen SWMN216 Washing Machine.
        * Azkoyn Palma Vending Machine.
        
        All hardware specific values like cycle time, cycle signal source, hardware type, payment emulation and additional notes can be set here.

      operationId: createHostHardware
      x-tag-permissions:
        - host_hardware
        - resellers
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  maxLength: 50
                  example: "Washer 3000"
                cycle_time:
                  type: integer
                  example: 60
                  description: Time in minutes
                notes:
                  type: string
                  example: "The best washer ever!"
                  description: Used to add any additional notes or information about the hardware.
                cycle_signal_source:
                  type: integer
                  example: 1
                  description: Indicates whether the cycle signal is coming from the machine (0) or theoretical time (1).
                reseller_id:
                  type: integer
                  example: 1
                emulation_id:
                  type: integer
                  example: 7
                pwm_on_time:
                  type: integer
                  example: 100
                  description: Used to configure coin pulse on time for machine.
                pwm_off_time:
                  type: integer
                  example: 50
                  description: Used to configure coin pulse off time for machine.
                active:
                  type: boolean
              required: [ "name", "reseller_id", "emulation_id", "active" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns host hardware object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/HostHardwareResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "Washer 3000",
                        "notes": "The best washer ever!",
                        "cycle_signal_source": 1,
                        "cycle_time": 30,
                        "pwm_on_time": 100,
                        "pwm_off_time": 50,
                        "active": true,
                        "resellers": {
                          "id": 1,
                          "name": "IQT Holdings"
                        },
                        "emulations": {
                          "id": 1,
                          "name": "Bills"
                        },
                        "cycle_signal_source_name": "Theoretical"
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723639902458
                  }


  '/host_hardware/{id}':
    get:
      tags:
        - Data
        - Host Hardware
      operationId: getHostHardware
      x-tag-permissions:
        - host_hardware
        - resellers
      summary: Get object for host hardware
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "host hardware" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/HostHardwareResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "Washer 3000",
                        "notes": "The best washer ever!",
                        "cycle_signal_source": 1,
                        "cycle_time": 30,
                        "pwm_on_time": 100,
                        "pwm_off_time": 50,
                        "active": true,
                        "resellers": {
                          "id": 1,
                          "name": "IQT Holdings"
                        },
                        "emulations": {
                          "id": 1,
                          "name": "Bills"
                        },
                        "cycle_signal_source_name": "Theoretical"
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723639902458
                  }
    put:
      tags:
        - Data
        - Host Hardware
      summary: Update object for host hardware
      operationId: updateHostHardware
      x-tag-permissions:
        - host_hardware
        - resellers
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  maxLength: 50
                  example: "Washer 3000"
                cycle_time:
                  type: integer
                  example: 60
                  description: Time in minutes
                notes:
                  type: string
                  example: "The best washer ever!"
                  description: Used to add any additional notes or information about the hardware.
                cycle_signal_source:
                  type: integer
                  example: 1
                  description: Indicates whether the cycle signal is coming from the machine (0) or theoretical time (1).
                reseller_id:
                  type: integer
                  example: 1
                emulation_id:
                  type: integer
                  example: 7
                pwm_on_time:
                  type: integer
                  example: 100
                  description: Used to configure coin pulse on time for machine.
                pwm_off_time:
                  type: integer
                  example: 50
                  description: Used to configure coin pulse off time for machine.
                active:
                  type: boolean
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "host hardware" items updated by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/HostHardwareResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "Washer 3000",
                        "notes": "The best washer ever!",
                        "cycle_signal_source": 1,
                        "cycle_time": 30,
                        "pwm_on_time": 100,
                        "pwm_off_time": 50,
                        "active": true,
                        "resellers": {
                          "id": 1,
                          "name": "IQT Holdings"
                        },
                        "emulations": {
                          "id": 1,
                          "name": "Bills"
                        },
                        "cycle_signal_source_name": "Theoretical"
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723639902458
                  }
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/status_codes':
    post:
      tags:
        - Data
        - Status Codes
      summary: Create object for status codes
      description: |-
        This endpoint is used to manage status codes. Status codes are codes identifying an action during payments/transactions.
        e.g Status code 1 ---- Pending transaction.

      operationId: createStatusCodes
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  maxLength: 50
                  pattern: ^[A-Za-z0-9]+[A-Za-z 0-9]*$
                  minLength: 1
                  example: "COMPLETED"
                  description: Name of event
                code:
                  type: integer
                  example: 101
                color:
                  type: string
                  maxLength: 10
                  pattern: '^#(?:[0-9a-fA-F]{3}){1,2}$'
                  minLength: 1
                  example: '#7795f3'
                  description: Hex code colour
                refund_sale:
                  type: boolean
                  description: Indicates if this status code permits refund actions.
                success:
                  type: boolean
                  description: Indicates if this status code is a success code.
                active:
                  type: boolean
              required: [ "name", "code", "color", "refund_sale", "success", "active" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns status code object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StatusCodesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "COMPLETED",
                        "code": 101,
                        "color": "#7795f3",
                        "refund_sale": false,
                        "success": false,
                        "active": true,
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }


  '/status_codes/{id}':
    get:
      tags:
        - Data
        - Status Codes
      operationId: getStatusCodes
      summary: Get object for status code
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "status code" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StatusCodesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "COMPLETED",
                        "code": 101,
                        "color": "#7795f3",
                        "refund_sale": false,
                        "success": false,
                        "active": true,
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
    put:
      tags:
        - Data
        - Status Codes
      summary: Update object for status codes
      operationId: updateStatusCodes
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  maxLength: 50
                  pattern: ^[A-Za-z0-9]+[A-Za-z 0-9]*$
                  minLength: 1
                  example: "COMPLETED"
                  description: Name of event
                code:
                  type: integer
                  example: 101
                color:
                  type: string
                  maxLength: 10
                  pattern: '^#(?:[0-9a-fA-F]{3}){1,2}$'
                  minLength: 1
                  example: '#7795f3'
                  description: Hex code colour,
                refund_sale:
                  type: boolean
                  description: Indicates if this status code permits refund actions.
                success:
                  type: boolean
                  description: Indicates if this status code is a success code.
                active:
                  type: boolean
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "status code" items updated by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StatusCodesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "COMPLETED",
                        "code": 101,
                        "color": "#7795f3",
                        "refund_sale": false,
                        "success": false,
                        "active": true,
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/emulations':
    post:
      tags:
        - Data
        - Emulations
      summary: Create object for emulations
      description: |-
        This endpoint is used to manage emulation types. Emulation types are the different methods
        of emulating a pulse in a physical machine that uses coin based payments. e.g Vending machine accepting coins.

      operationId: createEmulations
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  maxLength: 50
                  pattern: ^[A-Za-z0-9]+[A-Za-z 0-9]*$
                  minLength: 1
                  example: "Coin Pulse"
                active:
                  type: boolean
              required: [ "name", "active" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns emulation object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EmulationsResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "Coin Pulse",
                        "active": true,
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }

  '/emulations/{id}':
    get:
      tags:
        - Data
        - Emulations
      summary: Get object for emulation
      operationId: getEmulations
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "emulation" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EmulationsResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "Coin Pulse",
                        "active": true,
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
    put:
      tags:
        - Data
        - Emulations
      summary: Update object for emulations
      operationId: updateEmulations
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  maxLength: 50
                  pattern: ^[A-Za-z0-9]+[A-Za-z 0-9]*$
                  minLength: 1
                  example: "Coin Pulse"
                active:
                  type: boolean
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "emulation" items updated by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EmulationsResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "Coin Pulse",
                        "active": true,
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/connectivity_history/{id}':
    get:
      tags:
        - Data
        - Connectivity History
      operationId: getConnectivityHistory
      x-tag-permissions:
        - devices
      summary: Get object for connectivity history
      description: |-
        Obtain device polling / connectivity history.  
        * **pfN** ---- Connectivity History frequency for hour of day __N__.
        * **sfN** ---- Session frequency for hour of day __N__.

      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: List of connectivity history objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ConnectivityHistoryResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "date": "2024-10-28T00:00:00.000Z",
                        "device_id": 1,
                        "pf0": 0,
                        "pf1": 0,
                        "pf2": 0,
                        "pf3": 0,
                        "pf4": 0,
                        "pf5": 0,
                        "pf6": 0,
                        "pf7": 0,
                        "pf8": 0,
                        "pf9": 0,
                        "pf10": 287,
                        "pf11": 417,
                        "pf12": 288,
                        "pf13": 385,
                        "pf14": 0,
                        "pf15": 0,
                        "pf16": 0,
                        "pf17": 0,
                        "pf18": 0,
                        "pf19": 0,
                        "pf20": 0,
                        "pf21": 0,
                        "pf22": 0,
                        "pf23": 0,
                        "sf0": 0,
                        "sf1": 0,
                        "sf2": 0,
                        "sf3": 0,
                        "sf4": 0,
                        "sf5": 0,
                        "sf6": 0,
                        "sf7": 0,
                        "sf8": 0,
                        "sf9": 0,
                        "sf10": 1,
                        "sf11": 2,
                        "sf12": 5,
                        "sf13": 1,
                        "sf14": 0,
                        "sf15": 0,
                        "sf16": 0,
                        "sf17": 0,
                        "sf18": 0,
                        "sf19": 0,
                        "sf20": 0,
                        "sf21": 0,
                        "sf22": 0,
                        "sf23": 0
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
      parameters:
        - $ref: "#/components/parameters/idParam"
        - $ref: "#/components/parameters/limitParam"
        - $ref: "#/components/parameters/offsetParam"
        - $ref: "#/components/parameters/orderParam"
        - $ref: "#/components/parameters/countParam"
        - $ref: "#/components/parameters/others"

  '/companies_providers':
    post:
      tags:
        - Data
        - Companies Providers
      summary: Create object for company provider
      description: |-
        This endpoint is used to link and manage each companies payment integration and providers.
        This includes their API keys, merchant ids, callback URLs, tokens, etc.
        A company may be linked to many providers, but may not be linked to many of the same provider.

      operationId: createCompaniesProviders
      x-tag-permissions:
        - companies
        - organisations
        - resellers
        - companies_providers
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                provider_id:
                  type: integer
                  example: 1
                company_id:
                  type: integer
                  example: 5
                merchant_id:
                  type: string
                  example: '6789A'
                  maxLength: 50
                pos_token:
                  type: string
                  example: '373-034534-ad354-a335'
                  maxLength: 200
                  description: API Key or other forms of authentication.
                provider_site_id:
                  type: string
                  example: '47724'
                  maxLength: 20
                callback_url:
                  type: string
                  example: 'https://zapper.com/webhook'
                  description: If callback authentication, specify the URL here.
                allow_refund:
                  type: boolean
                active:
                  type: boolean
              required: [ "provider_id", "company_id", "allow_refund", "active" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns company provider object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CompaniesProvidersResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "merchant_id": "6789A",
                        "pos_token": "373-034534-ad354-a335",
                        "provider_site_id": "47724",
                        "callback_url": "https://zapper.com/webhook",
                        "allow_refund": false,
                        "active": true,
                        "resellers": {
                          "id": [
                            1
                          ],
                          "name": [
                            "IQT Holdings"
                          ],
                          "id_name": [
                            "1,IQT Holdings"
                          ]
                        },
                        "organisations": {
                          "id": 5,
                          "name": "Supreme Vending"
                        },
                        "companies": {
                          "id": 5,
                          "name": "Supreme Vending"
                        },
                        "providers": {
                          "id": 1,
                          "name": "SnapScan",
                          "color": "#309dbe",
                          "logo_url": "snapscan.png",
                          "logo_full_url": "https://payway3.iqt.co.za/images/snapscan.png",
                          "qr_payments": false,
                          "qr_string": "",
                          "active": true
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723639902458
                  }

  '/companies_providers/{id}':
    get:
      tags:
        - Data
        - Companies Providers
      operationId: getCompaniesProviders
      x-tag-permissions:
        - companies_providers
        - organisations
        - resellers
        - companies
      summary: Get object for company provider
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "company provider" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CompaniesProvidersResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "merchant_id": "6789A",
                        "pos_token": "373-034534-ad354-a335",
                        "provider_site_id": "47724",
                        "callback_url": "https://zapper.com/webhook",
                        "allow_refund": false,
                        "active": true,
                        "resellers": {
                          "id": [
                            1
                          ],
                          "name": [
                            "IQT Holdings"
                          ],
                          "id_name": [
                            "1,IQT Holdings"
                          ]
                        },
                        "organisations": {
                          "id": 5,
                          "name": "Supreme Vending"
                        },
                        "companies": {
                          "id": 5,
                          "name": "Supreme Vending"
                        },
                        "providers": {
                          "id": 1,
                          "name": "SnapScan",
                          "color": "#309dbe",
                          "logo_url": "snapscan.png",
                          "logo_full_url": "https://payway3.iqt.co.za/images/snapscan.png",
                          "qr_payments": false,
                          "qr_string": "",
                          "active": true
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723639902458
                  }
    put:
      tags:
        - Data
        - Companies Providers
      summary: Update object for company provider
      operationId: updateCompaniesProviders
      x-tag-permissions:
        - companies
        - organisations
        - resellers
        - companies_providers
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                provider_id:
                  type: integer
                  example: 1
                company_id:
                  type: integer
                  example: 5
                merchant_id:
                  type: string
                  example: '6789A'
                  maxLength: 50
                pos_token:
                  type: string
                  example: '373-034534-ad354-a335'
                  maxLength: 200
                  description: API Key or other forms of authentication.
                provider_site_id:
                  type: string
                  example: '47724'
                  maxLength: 20
                callback_url:
                  type: string
                  example: 'https://zapper.com/webhook'
                  description: If callback authentication, specify the URL here.
                allow_refund:
                  type: boolean
                active:
                  type: boolean
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "company provider" items updated by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CompaniesProvidersResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "merchant_id": "6789A",
                        "pos_token": "373-034534-ad354-a335",
                        "provider_site_id": "47724",
                        "callback_url": "https://zapper.com/webhook",
                        "allow_refund": false,
                        "active": true,
                        "resellers": {
                          "id": [
                            1
                          ],
                          "name": [
                            "IQT Holdings"
                          ],
                          "id_name": [
                            "1,IQT Holdings"
                          ]
                        },
                        "organisations": {
                          "id": 5,
                          "name": "Supreme Vending"
                        },
                        "companies": {
                          "id": 5,
                          "name": "Supreme Vending"
                        },
                        "providers": {
                          "id": 1,
                          "name": "SnapScan",
                          "color": "#309dbe",
                          "logo_url": "snapscan.png",
                          "logo_full_url": "https://payway3.iqt.co.za/images/snapscan.png",
                          "qr_payments": false,
                          "qr_string": "",
                          "active": true
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723639902458
                  }
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/transactions/{id}':
    get:
      tags:
        - Data
        - Transactions
      operationId: getTransactions
      x-tag-permissions:
        - companies
        - organisations
        - sites
        - devices
      summary: Get object for transactions
      description: |-
        This endpoint is used to retrieve and view transactions. This is a history of transactions processed by the Payway Payment Engine.
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "transaction" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TransactionsResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "acknowledged": 80,
                        "amount": "32.00",
                        "credit": "0.00",
                        "customer_name": "unknown",
                        "divider": 1,
                        "end_run": 0,
                        "end_time": null,
                        "item": null,
                        "multiplier": 1,
                        "payment_date": "24-07-12 10:37:06",
                        "payment_id": "691100-53416",
                        "payment_reference": "ae6ec0-803a-11bb-88e6-11634890y2f7",
                        "retry": 0,
                        "start_run": 0,
                        "start_time": null,
                        "time": "2024-07-12T10:37:06.203Z",
                        "timestamp": 1720780626202,
                        "uid": "e465b8a4ed60    ",
                        "uuid": "aee5eec0-403a-11ef-88e6-116a4589c2f7",
                        "currency_code": "R",
                        "source": "za-server-1",
                        "created_at": "2024-10-28T09:26:57.145Z",
                        "status_codes": {
                          "id": 32,
                          "name": "SOURCE PAYMENT FAILED"
                        },
                        "providers": {
                          "id": 2,
                          "name": "SnapScan",
                          "logo_url": "snapscan.png",
                          "color": "#309dbe"
                        },
                        "emulations": {
                          "id": 3,
                          "name": "Mifare Coin Pulse"
                        },
                        "devices": {
                          "id": 4010,
                          "name": "QA TEST UNIT",
                          "uid": "e465b8a4ed60"
                        },
                        "sites": {
                          "id": 153,
                          "name": "UNALLOCATED"
                        },
                        "companies": {
                          "id": 7,
                          "name": "IQ Telemetry Test Account"
                        },
                        "organisations": {
                          "id": 7,
                          "name": "IQ Telemetry Test Account"
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
      parameters:
        - $ref: "#/components/parameters/idParam"
        - $ref: "#/components/parameters/limitParam"
        - $ref: "#/components/parameters/offsetParam"
        - $ref: "#/components/parameters/orderParam"
        - $ref: "#/components/parameters/countParam"
        - $ref: "#/components/parameters/others"

  '/refunds/{id}':
    get:
      tags:
        - Data
        - Refunds
      operationId: getRefunds
      x-tag-permissions:
        - devices
        - companies
        - organisations
        - sites
      summary: Get object for refunds
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "refund" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RefundsResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 4,
                        "organisation_id": 10,
                        "company_id": 10,
                        "amount": 10,
                        "device_uid": 736e740b,
                        "refund_reference": null,
                        "payment_reference": "Zapper",
                        "provider_id": 1,
                        "site_id": 10,
                        "status": null,
                        "transaction_id": 1,
                        "timestamp": "2024-08-13T10:33:38.323Z"
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/asset_states':
    post:
      tags:
        - Data
        - Asset States
      summary: Create object for asset states
      description: |-
        This endpoint is used to track assets owned by a reseller, or others, and actions or movements of these assets.
        e.g:
        * Device is broken. 
        * Device in maintenance.
        * Device in trade.

      operationId: createAssetStates
      x-tag-permissions:
        - resellers
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                state:
                  type: string
                  maxLength: 50
                  example: "Out of order"
                reseller_id:
                  type: integer
                  example: 1
                active:
                  type: boolean
              required: [ "state", "reseller_id", "active" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns asset state object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AssetStatesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "reseller_id": 1,
                        "state": "Out of order",
                        "active": true,
                        "resellers": {
                          "id": 1,
                          "name": "IQT Holdings"
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }

  '/asset_states/{id}':
    get:
      tags:
        - Data
        - Asset States
      operationId: getAssetStates
      x-tag-permissions:
        - resellers
      summary: Get object for asset states
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "asset state" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AssetStatesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "reseller_id": 1,
                        "state": "Out of order",
                        "active": true,
                        "resellers": {
                          "id": 1,
                          "name": "IQT Holdings"
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
    put:
      tags:
        - Data
        - Asset States
      summary: Update object for asset states
      operationId: updateAssetStates
      x-tag-permissions:
        - resellers
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                state:
                  type: string
                  maxLength: 50
                  example: "Out of order"
                reseller_id:
                  type: integer
                  example: 1
                active:
                  type: boolean
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "asset state" items updated by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AssetStatesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "reseller_id": 1,
                        "state": "Out of order",
                        "active": true,
                        "resellers": {
                          "id": 1,
                          "name": "IQT Holdings"
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/device_activity_audit':
    post:
      tags:
        - Data
        - Device Activity Audit
      summary: Create object for device activity audit
      description: |-
        This endpoint is used to track and manage device movements and asset_state changes.
      operationId: createDeviceActivityAudit
      x-tag-permissions:
        - resellers
        - asset_states
        - sites
        - devices
        - users
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                device_id:
                  type: integer
                  example: 104
                user_id:
                  type: integer
                  example: 4
                site_id:
                  type: integer
                  example: 9
                asset_state_id:
                  type: integer
                  example: 1
                notes:
                  type: string
                  example: "Testing this device"
                  description: Anything of note or extra information can be added here.
                timestamp:
                  type: string
                  example: "2024-08-13T10:33:38.323Z"
                  description: Time of entry creation in UTC.
                reseller_id:
                  type: integer
                  example: 4
              required: [ "device_id", "user_id", "site_id", "asset_state_id", "reseller_id" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns device activity audit object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeviceActivityAuditResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "notes": "Testing this device",
                        "timestamp": "2024-08-13T10:33:38.323Z",
                        "devices": {
                          "id": 1,
                          "name": "New Device",
                          "uid": "aabbccddff"
                        },
                        "sites": {
                          "id": 4,
                          "name": "NSRI Constantia Village"
                        },
                        "users": {
                          "id": 2,
                          "displayname": "Test Account",
                          "contact_number": ""
                        },
                        "asset_states": {
                          "id": 2,
                          "state": "Testing"
                        },
                        "resellers": {
                          "id": 7,
                          "name": "Homii",
                          "contact_number": "",
                          "logo_url": null
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }

  '/device_activity_audit/{id}':
    get:
      tags:
        - Data
        - Device Activity Audit
      operationId: getDeviceActivityAudit
      x-tag-permissions:
        - resellers
        - asset_states
        - sites
        - devices
        - users
      summary: Get object for device activity audit
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "device activity audit" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeviceActivityAuditResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "notes": "Testing this device",
                        "timestamp": "2024-08-13T10:33:38.323Z",
                        "devices": {
                          "id": 1,
                          "name": "New Device",
                          "uid": "aabbccddff"
                        },
                        "sites": {
                          "id": 4,
                          "name": "NSRI Constantia Village"
                        },
                        "users": {
                          "id": 2,
                          "displayname": "Test Account",
                          "contact_number": ""
                        },
                        "asset_states": {
                          "id": 2,
                          "state": "Testing"
                        },
                        "resellers": {
                          "id": 7,
                          "name": "Homii",
                          "contact_number": "",
                          "logo_url": null
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }
    put:
      tags:
        - Data
        - Device Activity Audit
      summary: Update object for device activity audits
      operationId: updateDeviceActivityAudit
      x-tag-permissions:
        - resellers
        - asset_states
        - sites
        - devices
        - users
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                device_id:
                  type: integer
                  example: 104
                user_id:
                  type: integer
                  example: 4
                site_id:
                  type: integer
                  example: 9
                asset_state_id:
                  type: integer
                  example: 1
                notes:
                  type: string
                  example: "Testing this device"
                  description: Anything of note or extra information can be added here.
                timestamp:
                  type: string
                  example: "2024-08-13T10:33:38.323Z"
                  description: Time of entry creation in UTC.
                reseller_id:
                  type: integer
                  example: 4
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: List of device activity audit objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeviceActivityAuditResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "notes": "Testing this device",
                        "timestamp": "2024-08-13T10:33:38.323Z",
                        "devices": {
                          "id": 1,
                          "name": "New Device",
                          "uid": "aabbccddff"
                        },
                        "sites": {
                          "id": 4,
                          "name": "NSRI Constantia Village"
                        },
                        "users": {
                          "id": 2,
                          "displayname": "Test Account",
                          "contact_number": ""
                        },
                        "asset_states": {
                          "id": 2,
                          "state": "Testing"
                        },
                        "resellers": {
                          "id": 7,
                          "name": "Homii",
                          "contact_number": "",
                          "logo_url": null
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/bookings/{id}':
    get:
      tags:
        - Data
        - Bookings
      operationId: getBookings
      x-tag-permissions:
        - resellers
        - organisations
        - companies
        - sites
        - devices
      summary: Get object for bookings
      description: |-
        This endpoint is used to obtain all booking objects.
        By default all devices have 2 weeks of booking slots generated by the backend. These 2 weeks are in the future, 
        and not in the past. In other words, there will always be a rolling 2 week period of bookings.
        
        Status, booking_guid (randomly generated unique identifier), version and customer_id fields are all [parallel arrays](https://www.geeksforgeeks.org/parallel-array/) of 24 length. Each position in the array represents a hour
        in the day.
        
        e.g:
        customer_id ---- [0,2,6,1,0,0,4,6,5,8,0,1,3,0,0,0,0,0,0,0,0,0,0,0]
        * Position 3 of array, customer id "6", is the 3rd hour / 03:00 in the day. 

      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "booking" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BookingsResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "date": "2024-08-08T11:58:52.032Z",
                        "booking_guid": [
                          "57e8ffae-558e-11ef-af9f-4bbe8661d8e8",
                          "57e8ffaf-558e-11ef-af9f-cf8b36714bd7",
                          "57e8ffb0-558e-11ef-af9f-5b2c5ebd9dc5",
                          "57e8ffb1-558e-11ef-af9f-5bf8ad8a0dff",
                          "57e8ffb2-558e-11ef-af9f-3feacc8b3a27",
                          "57e8ffb3-558e-11ef-af9f-473d60c096f4",
                          "57e8ffb4-558e-11ef-af9f-5b73a8db1e0a",
                          "57e8ffb5-558e-11ef-af9f-ffcd4ca01865",
                          "57e8ffb6-558e-11ef-af9f-7fe35d411510",
                          "57e8ffb7-558e-11ef-af9f-fb2929e833cf",
                          "57e8ffb8-558e-11ef-af9f-e34010195cd2",
                          "57e8ffb9-558e-11ef-af9f-63d02f60a895",
                          "57e8ffba-558e-11ef-af9f-eb0108c6e265",
                          "57e8ffbb-558e-11ef-af9f-83e06496a479",
                          "57e8ffbc-558e-11ef-af9f-0f472645aab3",
                          "57e8ffbd-558e-11ef-af9f-836f06d1ba00",
                          "57e8ffbe-558e-11ef-af9f-d73b9bb274e5",
                          "57e8ffbf-558e-11ef-af9f-7baf89099b29",
                          "57e8ffc0-558e-11ef-af9f-bf51939434aa",
                          "57e8ffc1-558e-11ef-af9f-637e501d567f",
                          "57e8ffc2-558e-11ef-af9f-4f3fc8c697c6",
                          "57e8ffc3-558e-11ef-af9f-4fd4e7e8838e",
                          "57e8ffc4-558e-11ef-af9f-4303c2637358",
                          "57e8ffc5-558e-11ef-af9f-8b4b07af0656"
                        ],
                        "status": [
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0
                        ],
                        "version": [
                          1,
                          1,
                          1,
                          1,
                          1,
                          1,
                          1,
                          1,
                          1,
                          1,
                          1,
                          1,
                          1,
                          1,
                          1,
                          1,
                          1,
                          1,
                          1,
                          1,
                          1,
                          1,
                          1,
                          1
                        ],
                        "customer_id": [
                          "0",
                          "0",
                          "0",
                          "0",
                          "0",
                          "0",
                          "0",
                          "0",
                          "0",
                          "0",
                          "0",
                          "0",
                          "0",
                          "0",
                          "0",
                          "0",
                          "0",
                          "0",
                          "0",
                          "0",
                          "0",
                          "0",
                          "0",
                          "0"
                        ],
                        "slot": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6,
                          7,
                          8,
                          9,
                          10,
                          11,
                          12,
                          13,
                          14,
                          15,
                          16,
                          17,
                          18,
                          19,
                          20,
                          21,
                          22,
                          23,
                          24
                        ],
                        "resellers": {
                          "id": [
                            4
                          ],
                          "name": [
                            "360 Laundry Solutions"
                          ],
                          "id_name": [
                            "4,360 Laundry Solutions"
                          ]
                        },
                        "organisations": {
                          "id": 14,
                          "name": "Nano Living"
                        },
                        "companies": {
                          "id": 14,
                          "name": "Nano Living"
                        },
                        "sites": {
                          "id": 30,
                          "name": "Herb Street, Johannesburg"
                        },
                        "devices": {
                          "id": 2439,
                          "name": "Washer01",
                          "uid": "34865dadc478"
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723715090987
                  }
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/bookings/booked/{id}':
    get:
      tags:
        - Data
        - Bookings
      operationId: getBookedBookings
      x-tag-permissions:
        - resellers
        - organisations
        - companies
        - sites
        - devices
        - customers
      summary: Get object for booked bookings
      description: |-
        This endpoint is used to obtain all booking objects with a status in (1, 5, 10)
        Status, booking_guid (randomly generated unique identifier), version and customer_id fields are all [parallel arrays](https://www.geeksforgeeks.org/parallel-array/) of 24 length. Each position in the array represents a hour
        in the day.
        
        e.g:
        customer_id ---- [0,2,6,1,0,0,4,6,5,8,0,1,3,0,0,0,0,0,0,0,0,0,0,0]
        * Position 3 of array, customer id "6", is the 3rd hour / 03:00 in the day. 
        
        * Status 0: Available.
        * Status 1: Booked by someone.
        * Status 2: Booked by you.
        * Status 3: You missed booking.
        * Status 4: Used by someone
        * Status 5: Used by you
        * Status 10: Missed booking by someone.

      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "booking" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BookingsBookedResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "status": 1,
                        "booking_guid": "758f17f2-6e3e-11ef-af9f-1bedd2e9e918",
                        "resellers": {
                          "id": 4,
                          "name": "360 Laundry Solutions"
                        },
                        "organisations": {
                          "id": 14,
                          "name": "Nano Living"
                        },
                        "companies": {
                          "id": 14,
                          "name": "Nano Living"
                        },
                        "sites": {
                          "id": 30,
                          "name": "Herb Street, Johannesburg"
                        },
                        "devices": {
                          "id": 2523,
                          "name": "Washer04",
                          "uid": "7821844c4ac0"
                        },
                        "customers": {
                          "id": 8,
                          "first_name": "Brent",
                          "last_name": "Blake",
                          "identification": "1234555",
                          "email": "brent99blake@gmail.com",
                          "contact_number": "+27765679609",
                          "daily_booking_limit": 5
                        },
                        "date": "2024-09-20T08:00:00.000Z"
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723715090987
                  }
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/missed_bookings/{id}':
    get:
      tags:
        - Data
        - Bookings
      operationId: getMissedBookings
      x-tag-permissions:
        - devices
        - sites
        - companies
        - organisations
        - customers
      summary: Get object for missed bookings.
      description: |-
        This endpoint is used to obtain all missed booking objects.
        
        When a customer does not start the booked device within 20 minutes of their booking
        booking slot, machine not activated by customer, their missed booking is placed automatically into this table.
        
        Customers are blocked automatically after 5 missed bookings.

      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "missed bookings" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MissedBookingsResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "booking_guid": "c4f7afc0-82ac-11ef-af9f-b7fea465b9b2",
                        "date": "2024-10-15T22:00:00.000Z",
                        "slot": 3,
                        "customers": {
                          "id": 55,
                          "customer_identification": "aabbcc",
                          "missed_bookings": 0
                        },
                        "organisations": {
                          "id": 14,
                          "name": "Nano Living"
                        },
                        "companies": {
                          "id": 14,
                          "name": "Nano Living"
                        },
                        "sites": {
                          "id": 30,
                          "name": "Herb Street, Johannesburg"
                        },
                        "devices": {
                          "id": 2566,
                          "name": "Washer03",
                          "uid": "349454bfde38"
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723715090987
                  }
    delete:
      tags:
        - Data
        - Bookings
      summary: Delete object for missed bookings
      operationId: deleteMissedBookings
      x-tag-permissions:
        - devices
        - sites
        - companies
        - organisations
        - customers
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeleteResponse"
              example:
                {
                  "success": true,
                  "data": "Successfully deleted record(s). [1]",
                  "timestamp": 1723108298846
                }
          description: Returns result of delete
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/bookings/status':
    get:
      tags:
        - Data
        - Bookings
      operationId: getBookingsStatus
      summary: Get object for bookings status list
      description: |-
        This endpoint is used to obtain the bookings system status list
        
        * Status 0: Available.
        * Status 1: Booked by someone.
        * Status 2: Booked by you. (not returned by this endpoint)
        * Status 3: You missed booking. (not returned by this endpoint)
        * Status 4: Used by someone
        * Status 5: Used by you (not returned by this endpoint)
        * Status 10: Missed booking by someone.

      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of statuses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BookingsStatusResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "status": 'Booked'
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723715090987
                  }

  '/notifications':
    post:
      tags:
        - Data
        - Notifications
      summary: Create object for notifications
      description: |-
        This endpoint is used to create notifications that can be viewed in apps or websites. This contains announcements, alerts or any other
        communication.

      operationId: createNotifications
      x-tag-permissions:
        - resellers
        - organisations
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                id:
                  type: integer
                summary:
                  type: string
                  example: "Zapper Downtime"
                  description: Short summary, usually used for a title.
                description:
                  type: string
                  example: "Zapper is currently not working, please notify customers."
                  description: More in depth summary, usually used for a body.
                severity:
                  type: string
                  enum: [ "info", "warning", "critical" ]
                  example: "info"
                  description: Level of notification.
                start_time:
                  type: string
                  example: "2024-07-12T10:37:06.203Z"
                  description: Start time that the notification should be shown.
                end_time:
                  type: string
                  example: "2024-07-15T10:37:06.203Z"
                  description: End time that the notification should be hidden.
                created_at:
                  type: string
                  example: "2024-07-12T10:37:06.203Z"
                reseller_id:
                  type: array
                  items:
                    type: integer
                  example: [ 2, 10 ]
                  description: "Restrict notification to certain reseller(s). If empty array, no restriction applied."
                organisation_id:
                  type: array
                  items:
                    type: integer
                  example: [ 8 ]
                  description: "Restrict notification to certain organisation(s). If empty array, no restriction applied."
                banner:
                  type: boolean
                  description: "Should the notification be shown as a banner on the frontend?"
                active:
                  type: boolean
              required: [ "summary", "severity", "start_time", "end_time", "active" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns notification object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NotificationsResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "summary": "Zapper Downtime",
                        "description": "Zapper is currently not working, please notify customers.",
                        "severity": "info",
                        "start_time": "2024-07-12T10:37:06.203Z",
                        "end_time": "2024-07-15T10:37:06.203Z",
                        "created_at": "2024-07-12T10:37:06.203Z",
                        "banner": false,
                        "super_admin": true,
                        "active": true,
                        "resellers": {
                          "id": [
                            7,
                            8
                          ],
                          "name": [
                            "Homii",
                            "SouthPoint"
                          ]
                        },
                        "organisations": {
                          "id": [
                            10,
                            13
                          ],
                          "name": [
                            "Chilli Mobile",
                            "Peninsula Vending "
                          ]
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }

  '/notifications/{id}':
    get:
      tags:
        - Data
        - Notifications
      operationId: getNotifications
      x-tag-permissions:
        - resellers
        - organisations
      summary: Get object for notifications
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "notification" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NotificationsResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "summary": "Zapper Downtime",
                        "description": "Zapper is currently not working, please notify customers.",
                        "severity": "info",
                        "start_time": "2024-07-12T10:37:06.203Z",
                        "end_time": "2024-07-15T10:37:06.203Z",
                        "created_at": "2024-07-12T10:37:06.203Z",
                        "banner": false,
                        "super_admin": true,
                        "active": true,
                        "resellers": {
                          "id": [
                            7,
                            8
                          ],
                          "name": [
                            "Homii",
                            "SouthPoint"
                          ]
                        },
                        "organisations": {
                          "id": [
                            10,
                            13
                          ],
                          "name": [
                            "Chilli Mobile",
                            "Peninsula Vending "
                          ]
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }
    put:
      tags:
        - Data
        - Notifications
      summary: Update object for notifications
      operationId: updateNotifications
      x-tag-permissions:
        - resellers
        - organisations
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                id:
                  type: integer
                summary:
                  type: string
                  example: "Zapper Downtime"
                  description: Short summary, usually used for a title.
                description:
                  type: string
                  example: "Zapper is currently not working, please notify customers."
                  description: More in depth summary, usually used for a body.
                severity:
                  type: string
                  enum: [ "info", "warning", "critical" ]
                  example: "info"
                  description: Level of notification.
                start_time:
                  type: string
                  example: "2024-07-12T10:37:06.203Z"
                  description: Start time that the notification should be shown.
                end_time:
                  type: string
                  example: "2024-07-15T10:37:06.203Z"
                  description: End time that the notification should be hidden.
                created_at:
                  type: string
                  example: "2024-07-12T10:37:06.203Z"
                reseller_id:
                  type: array
                  items:
                    type: integer
                  example: [ 2, 10 ]
                  description: "Restrict notification to certain reseller(s). If empty array, no restriction applied."
                organisation_id:
                  type: array
                  items:
                    type: integer
                  example: [ 8 ]
                  description: "Restrict notification to certain organisation(s). If empty array, no restriction applied."
                banner:
                  type: boolean
                  description: "Should the notification be shown as a banner on the frontend?"
                active:
                  type: boolean
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "notification" items updated by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NotificationsResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "summary": "Zapper Downtime",
                        "description": "Zapper is currently not working, please notify customers.",
                        "severity": "info",
                        "start_time": "2024-07-12T10:37:06.203Z",
                        "end_time": "2024-07-15T10:37:06.203Z",
                        "created_at": "2024-07-12T10:37:06.203Z",
                        "banner": false,
                        "super_admin": true,
                        "active": true,
                        "resellers": {
                          "id": [
                            7,
                            8
                          ],
                          "name": [
                            "Homii",
                            "SouthPoint"
                          ]
                        },
                        "organisations": {
                          "id": [
                            10,
                            13
                          ],
                          "name": [
                            "Chilli Mobile",
                            "Peninsula Vending "
                          ]
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }
    delete:
      tags:
        - Data
        - Notifications
      summary: Delete object for notifications
      operationId: deleteNotifications
      x-tag-permissions:
        - resellers
        - organisations
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeleteResponse"
              example:
                {
                  "success": true,
                  "data": "Successfully deleted record(s). [1]",
                  "timestamp": 1723108298846
                }
          description: Returns result of delete
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/notifications/active/{id}':
    get:
      tags:
        - Data
        - Notifications
      operationId: getNotificationsActive
      x-tag-permissions:
        - companies
        - resellers
        - organisations
      summary: Get object for active notifications
      description: |-
        This endpoint is used to view notifications that are currently being shown to users. This contains announcements, alerts or any other
        communication.

      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "notification" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NotificationsResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "summary": "Zapper Downtime",
                        "description": "Zapper is currently not working, please notify customers.",
                        "severity": "info",
                        "start_time": "2024-07-12T10:37:06.203Z",
                        "end_time": "2024-07-15T10:37:06.203Z",
                        "created_at": "2024-07-12T10:37:06.203Z",
                        "banner": false,
                        "active": true,
                        "resellers": {
                          "id": [
                            7,
                            8
                          ],
                          "name": [
                            "Homii",
                            "SouthPoint"
                          ]
                        },
                        "organisations": {
                          "id": [
                            10,
                            13
                          ],
                          "name": [
                            "Chilli Mobile",
                            "Peninsula Vending "
                          ]
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/activity_logs/{id}':
    get:
      tags:
        - Data
        - Logs
      operationId: getActivityLogs
      x-tag-permissions:
        - users
      summary: Get object for activity logs
      description: |-
        This endpoint holds all activity logs for PUT, POST and DELETE endpoints.
        This acts as a audit trail to understand what actions have been performed by users.

      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "activity logs" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ActivityLogsResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "user_id": 125,
                        "timestamp": "2024-09-06T05:06:37.709Z",
                        "action": "POST",
                        "operation_id": "createUserAccess",
                        "body": "{\"user_id\":125,\"access_id\":104}",
                        "parameters": "{}",
                        "user_displayname": "Ryan Pomario",
                        "users": {
                          "id": 1,
                          "displayname": "Ryan Pomario",
                          "email": "ryan@iqt.co.za",
                          "super_admin": false,
                          "proxy_user": false
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }

    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/modules':
    post:
      tags:
        - Data
        - Modules
      summary: Create object for modules
      description: |-
        This endpoint is used to allow access restriction and different views for many times of users for our Payway website.
        All names should be in lower case, have no spaces and contain "_" as a replacement for spaces.

      operationId: createModules
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  maxLength: 50
                  pattern: ^[a-zA-Z_]+
                  minLength: 1
              required: [ "name" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns modules object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ModulesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "organisations",
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }

  '/modules/{id}':
    get:
      tags:
        - Data
        - Modules
      operationId: getModules
      summary: Get object for modules
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "module" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ModulesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "organisations",
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }
    put:
      tags:
        - Data
        - Modules
      summary: Update object for modules
      operationId: updateModules
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  maxLength: 50
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "module" items updated by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ModulesResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "organisations",
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }
    delete:
      tags:
        - Data
        - Modules
      summary: Delete object for modules
      operationId: deleteModules
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeleteResponse"
              example:
                {
                  "success": true,
                  "data": "Successfully deleted record(s). [1]",
                  "timestamp": 1723108298846
                }
          description: Returns result of delete
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/access_levels':
    post:
      tags:
        - Data
        - Access Levels
      summary: Create object for access level
      description: |-
        This endpoint is used to define access levels for operations. This endpoint acts as a link to the roles table and contains more information about
        the how access is given by default. This table acts as a "base" of permissions / access.

      operationId: createAccessLevels
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  maxLength: 50
                  example: "Organisation Admin"
              required: [ "name" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns modules object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AccessLevelsResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "Organisation Admin",
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }

  '/access_levels/{id}':
    get:
      tags:
        - Data
        - Access Levels
      operationId: getAccessLevels
      summary: Get object for access levels
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "access level" items from the database
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AccessLevelsResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "Organisation Admin",
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }
    put:
      tags:
        - Data
        - Access Levels
      summary: Update object for access level
      operationId: updateAccessLevels
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  maxLength: 50
                  example: "Organisation Admin"
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns an array of "access level" items updated by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AccessLevelsResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "name": "Organisation Admin",
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }
    delete:
      tags:
        - Data
        - Access Levels
      summary: Delete object for access levels
      operationId: deleteAccessLevels
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeleteResponse"
              example:
                {
                  "success": true,
                  "data": "Successfully deleted record(s). [1]",
                  "timestamp": 1723108298846
                }
          description: Returns result of delete
    parameters:
      - $ref: "#/components/parameters/idParam"
      - $ref: "#/components/parameters/limitParam"
      - $ref: "#/components/parameters/offsetParam"
      - $ref: "#/components/parameters/orderParam"
      - $ref: "#/components/parameters/countParam"
      - $ref: "#/components/parameters/others"
      - $ref: "#/components/parameters/smallerThanParam"
      - $ref: "#/components/parameters/greaterThanParam"
      - $ref: "#/components/parameters/smallerThanEqualParam"
      - $ref: "#/components/parameters/greaterThanEqualParam"

  '/reports/transactions/totals_current_previous':
    get:
      tags:
        - Data
        - Report
        - Transactions Totals Current Previous
      operationId: getTransactionsTotalsCurrentPrevious
      x-tag-permissions:
        - companies
        - organisations
        - sites
        - devices
      summary: Get transactions totals current previous report
      description: |-
        This endpoint returns the total number of transactions and total value of transactions for the current specified period and previous specified period.
        This can be used to compare performance between all customers transactions in the form of dashboards or reports.

      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns a dashboard data object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TransactionsTotalsCurrentPreviousResponse"
                example:
                  {
                    "success": true,
                    "data": {
                      "current_period": {
                        "day_of_week": [
                          "Wed",
                          "Thu",
                          "Fri",
                          "Sat",
                          "Sun",
                          "Mon",
                          "Tue"
                        ],
                        "date": [
                          "2024-10-23",
                          "2024-10-24",
                          "2024-10-25",
                          "2024-10-26",
                          "2024-10-27",
                          "2024-10-28",
                          "2024-10-29"
                        ],
                        "total_amount": [
                          33945.62,
                          38739.5,
                          47753,
                          62940.88,
                          167230.21,
                          48408.05,
                          31966.51
                        ],
                        "total_count": [
                          1378,
                          1536,
                          2205,
                          3148,
                          2906,
                          2075,
                          1361
                        ]
                      },
                      "previous_period": {
                        "day_of_week": [
                          "Mon",
                          "Tue",
                          "Wed",
                          "Thu",
                          "Fri",
                          "Sat",
                          "Sun"
                        ],
                        "date": [
                          "2023-10-23",
                          "2023-10-24",
                          "2023-10-25",
                          "2023-10-26",
                          "2023-10-27",
                          "2023-10-28",
                          "2023-10-29"
                        ],
                        "total_amount": [
                          44375.2,
                          38287,
                          43052,
                          16052210.21,
                          51855.26,
                          54125.52,
                          55729.6
                        ],
                        "total_count": [
                          1662,
                          1467,
                          1825,
                          2022,
                          2232,
                          2646,
                          2381
                        ]
                      },
                      "current_grand_total_amount": "ZAR 3,716,187.97",
                      "previous_grand_total_amount": "ZAR 4,616,637.28",
                      "delta_grand_total_amount": "-ZAR 900,449.31",
                      "delta_grand_total_amount_perc": -21.61,
                      "current_grand_total_count": "172,325",
                      "previous_grand_total_count": "205,097",
                      "delta_grand_total_count": "-32,772",
                      "delta_grand_total_count_perc": -17.37,
                      "currency": "ZAR"
                    },
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
      parameters:
        - $ref: "#/components/parameters/reports_start_time"
        - $ref: "#/components/parameters/reports_end_time"
        - $ref: "#/components/parameters/reports_organisations"
        - $ref: "#/components/parameters/reports_companies"
        - $ref: "#/components/parameters/reports_devices"
        - $ref: "#/components/parameters/reports_sites"
        - $ref: "#/components/parameters/reports_emulations"
        - $ref: "#/components/parameters/reports_providers"
        - $ref: "#/components/parameters/reports_status_codes"
        - $ref: "#/components/parameters/reports_success"


  '/reports/transactions/totals_by_provider_in_period':
    get:
      tags:
        - Data
        - Report
        - Transactions Totals By Provider In Period
      operationId: getTransactionsTotalsByProviderInPeriod
      x-tag-permissions:
        - companies
        - organisations
        - sites
        - devices
      summary: Get transactions totals by provider in period report
      description: |-
        This endpoint is used for report dashboards. It provides insight into transactions for each Payway payment provider.

      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns a dashboard data object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TransactionsTotalsByProviderInPeriodResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "total_amount": 3095386.36,
                        "total_count": 102738,
                        "provider_name": "SnapScan",
                        "provider_logo_url": "snapscan.png",
                        "provider_color": "#309dbe",
                        "perc_total": 59.11,
                        "currency": "ZAR",
                        "grand_total_count": 173816
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }
      parameters:
        - $ref: "#/components/parameters/reports_start_time"
        - $ref: "#/components/parameters/reports_end_time"
        - $ref: "#/components/parameters/reports_organisations"
        - $ref: "#/components/parameters/reports_companies"
        - $ref: "#/components/parameters/reports_devices"
        - $ref: "#/components/parameters/reports_sites"
        - $ref: "#/components/parameters/reports_emulations"
        - $ref: "#/components/parameters/reports_providers"
        - $ref: "#/components/parameters/reports_status_codes"
        - $ref: "#/components/parameters/reports_success"


  '/reports/transactions/totals_by_status_code_in_period':
    get:
      tags:
        - Data
        - Report
        - Transactions Totals By Status Code In Period
      operationId: getTransactionsTotalsByStatusCodeInPeriod
      x-tag-permissions:
        - companies
        - organisations
        - sites
        - devices
      summary: Get transactions totals by status code in period report
      description: |-
        This endpoint is used for report dashboards. It provides transaction totals in a specified period grouped by all status codes
        found on the Payway System.

      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns a dashboard data object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TransactionsTotalsByStatusCodeInPeriodResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "total_amount": 3960586.94,
                        "total_count": 155653,
                        "status_code": 2,
                        "status_name": "SUCCESS",
                        "status_color": "#FFC300",
                        "perc_total": 89.55,
                        "currency": "ZAR",
                        "grand_total_count": 173816
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }
      parameters:
        - $ref: "#/components/parameters/reports_start_time"
        - $ref: "#/components/parameters/reports_end_time"
        - $ref: "#/components/parameters/reports_organisations"
        - $ref: "#/components/parameters/reports_companies"
        - $ref: "#/components/parameters/reports_devices"
        - $ref: "#/components/parameters/reports_sites"
        - $ref: "#/components/parameters/reports_emulations"
        - $ref: "#/components/parameters/reports_providers"
        - $ref: "#/components/parameters/reports_status_codes"
        - $ref: "#/components/parameters/reports_success"


  '/reports/devices/total_devices_by_current_status':
    get:
      tags:
        - Data
        - Report
        - Total Devices By Current Status
      operationId: getTotalDevicesByCurrentStatus
      x-tag-permissions:
        - companies
        - organisations
        - sites
        - devices
      summary: Get total devices by current status report
      description: |-
        This endpoint is used for report dashboards. It will give detail into the operations of all your devices in the Payway System.

      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns a dashboard data object
          content:
            application/json:
              schema:
                type: array
                items:
                  - $ref: "#/components/schemas/TotalDevicesByCurrentStatusResponseOne"
                  - $ref: "#/components/schemas/TotalDevicesByCurrentStatusResponseTwo"
                example:
                  {
                    "success": true,
                    "data": [
                      [
                        {
                          "online": false,
                          "total": "3,740",
                          "perc_total": 99.95,
                          "grand_total": "3,742"
                        },
                        {
                          "online": true,
                          "total": "2",
                          "perc_total": 0.05,
                          "grand_total": "3,742"
                        }
                      ],
                      [
                        {
                          "code": 99,
                          "name": "AVAILABLE",
                          "color": "#00aa00",
                          "total": 2056,
                          "grand_total": 2056,
                          "perc_total": 100
                        }
                      ]
                    ],
                    "entries": 2,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
      parameters:
        - $ref: "#/components/parameters/reports_organisations"
        - $ref: "#/components/parameters/reports_companies"
        - $ref: "#/components/parameters/reports_sites"

  '/reports/transactions/detailed_transaction_report':
    get:
      tags:
        - Data
        - Report
        - Detailed Transaction Drill Down Report
      operationId: getDetailedTransactionsReport
      x-tag-permissions:
        - resellers
        - organisations
        - companies
        - sites
        - devices
        - companies_providers
      summary: Get detailed transaction drill down report
      description: |-
        This endpoint is used for report dashboards. It will return a tree like response for all transactions and their details.

      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns a dashboard data object
          content:
            application/json:
              schema:
                type: array
                items:
                  - $ref: "#/components/schemas/TotalDevicesByCurrentStatusResponseOne"
                  - $ref: "#/components/schemas/TotalDevicesByCurrentStatusResponseTwo"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "columns": [
                          {
                            "id": 1,
                            "name": "Zapper",
                            "color": "#4282bf",
                            "logo_url": "zapper.png"
                          },
                          {
                            "id": 2,
                            "name": "SnapScan",
                            "color": "#309dbe",
                            "logo_url": "snapscan.png"
                          },
                          {
                            "id": 4,
                            "name": "PayWayTest",
                            "color": "#888888",
                            "logo_url": "paywayLogo.png"
                          },
                          {
                            "id": 5,
                            "name": "Modus10",
                            "color": "#01d5d6",
                            "logo_url": "modus.png"
                          },
                          {
                            "id": 6,
                            "name": "MiFare",
                            "color": "#c7d401",
                            "logo_url": "mifare.png"
                          },
                          {
                            "id": 7,
                            "name": "Cash",
                            "color": "#d83f37",
                            "logo_url": "cash.png"
                          },
                          {
                            "id": 10,
                            "name": "Homii",
                            "color": "#a9c702",
                            "logo_url": "homii.png"
                          },
                          {
                            "id": 11,
                            "name": "Ozow",
                            "color": "#00bfa7",
                            "logo_url": "ozow.png"
                          },
                          {
                            "id": 14,
                            "name": "Halodot",
                            "color": "#cb3091",
                            "logo_url": "halodot.png"
                          }
                        ],
                        "resellers": [
                          {
                            "id": 49,
                            "name": "Marvel Studios",
                            "address": "Marvell, AR 72366, USA",
                            "contact_number": "+2711122233",
                            "contact_person": "Captian America",
                            "lat_lng": "34.5569568,-90.9125471",
                            "logo_url": "",
                            "active": true,
                            "totals": [
                              13,
                              99,
                              4,
                              4,
                              136,
                              297.69,
                              0,
                              0,
                              8,
                              55,
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                              1,
                              1,
                              162,
                              456.69
                            ],
                            "organisation": [
                              {
                                "id": 552,
                                "name": "Stark Organisation",
                                "address": "Starkville, MS 39759, USA",
                                "contact_number": "+2711122233",
                                "contact_person": "Tony",
                                "lat_lng": "33.4503998,-88.81838719999999",
                                "logo_url": "",
                                "active": true,
                                "resellers": {
                                  "id": [
                                    49
                                  ],
                                  "name": [
                                    "Marvel Studios"
                                  ],
                                  "id_name": [
                                    "49,Marvel Studios"
                                  ]
                                },
                                "totals": [
                                  13,
                                  99,
                                  4,
                                  4,
                                  136,
                                  297.69,
                                  0,
                                  0,
                                  8,
                                  55,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  0,
                                  1,
                                  1,
                                  162,
                                  456.69
                                ],
                                "company": [
                                  {
                                    "id": 551,
                                    "name": "Stark Company",
                                    "address": "Testour, Tunisia",
                                    "contact_number": "+27112224",
                                    "contact_person": "Tony",
                                    "lat_lng": "36.5499,9.4422664",
                                    "logo_url": null,
                                    "sap": null,
                                    "active": true,
                                    "resellers": {
                                      "id": [
                                        49
                                      ],
                                      "name": [
                                        "Marvel Studios"
                                      ],
                                      "id_name": [
                                        "49,Marvel Studios"
                                      ]
                                    },
                                    "organisations": {
                                      "id": 552,
                                      "name": "Stark Organisation"
                                    },
                                    "totals": [
                                      13,
                                      99,
                                      4,
                                      4,
                                      136,
                                      297.69,
                                      0,
                                      0,
                                      8,
                                      55,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      1,
                                      1,
                                      162,
                                      456.69
                                    ],
                                    "site": [
                                      {
                                        "id": 941,
                                        "name": "Tower 1 Site",
                                        "address": "Charvátova, Nové Město, 110 00 Praha-Praha 1, Czechia",
                                        "contact_number": "+2711122234",
                                        "contact_person": "Stark",
                                        "lat_lng": "50.0816514,14.420821",
                                        "mifare_site_id": 0,
                                        "allow_booking": true,
                                        "active": true,
                                        "resellers": {
                                          "id": [
                                            49
                                          ],
                                          "name": [
                                            "Marvel Studios"
                                          ],
                                          "id_name": [
                                            "49,Marvel Studios"
                                          ]
                                        },
                                        "organisations": {
                                          "id": 552,
                                          "name": "Stark Organisation"
                                        },
                                        "companies": {
                                          "id": 551,
                                          "name": "Stark Company"
                                        },
                                        "totals": [
                                          13,
                                          99,
                                          4,
                                          4,
                                          136,
                                          297.69,
                                          0,
                                          0,
                                          8,
                                          55,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          1,
                                          1,
                                          162,
                                          456.69
                                        ],
                                        "device": [
                                          {
                                            "id": 2141,
                                            "device": "Dryer 2 (04.14)",
                                            "historical": false,
                                            "totals": [
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              1,
                                              48,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              1,
                                              48
                                            ]
                                          },
                                          {
                                            "id": 21385562,
                                            "device": "Washer 1 (1.6)",
                                            "historical": false,
                                            "totals": [
                                              8,
                                              94,
                                              4,
                                              4,
                                              119,
                                              206.69,
                                              0,
                                              0,
                                              7,
                                              7,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              1,
                                              1,
                                              139,
                                              312.69
                                            ]
                                          },
                                          {
                                            "id": 21389662,
                                            "device": "Washer 2 (1.6)",
                                            "historical": false,
                                            "totals": [
                                              5,
                                              5,
                                              0,
                                              0,
                                              14,
                                              70,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              19,
                                              75
                                            ]
                                          },
                                          {
                                            "id": 2442,
                                            "device": "Washer 3 (5.5)",
                                            "historical": false,
                                            "totals": [
                                              0,
                                              0,
                                              0,
                                              0,
                                              3,
                                              21,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              0,
                                              3,
                                              21
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "id": 942,
                                        "name": "Tower 2 Site",
                                        "address": "Via Aldo Manuzio, 66b, 00153 Roma RM, Italy",
                                        "contact_number": "+272233332",
                                        "contact_person": "Tony",
                                        "lat_lng": "41.8776845,12.4738455",
                                        "mifare_site_id": 0,
                                        "allow_booking": true,
                                        "active": true,
                                        "resellers": {
                                          "id": [
                                            49
                                          ],
                                          "name": [
                                            "Marvel Studios"
                                          ],
                                          "id_name": [
                                            "49,Marvel Studios"
                                          ]
                                        },
                                        "organisations": {
                                          "id": 552,
                                          "name": "Stark Organisation"
                                        },
                                        "companies": {
                                          "id": 551,
                                          "name": "Stark Company"
                                        },
                                        "totals": [
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0
                                        ],
                                        "device": [ ]
                                      },
                                      {
                                        "id": 950,
                                        "name": "Tower Test",
                                        "address": "Ticino, Switzerland",
                                        "contact_number": "+2711232321",
                                        "contact_person": "test",
                                        "lat_lng": "46.331734,8.800452900000002",
                                        "mifare_site_id": 0,
                                        "allow_booking": false,
                                        "active": true,
                                        "resellers": {
                                          "id": [
                                            49
                                          ],
                                          "name": [
                                            "Marvel Studios"
                                          ],
                                          "id_name": [
                                            "49,Marvel Studios"
                                          ]
                                        },
                                        "organisations": {
                                          "id": 552,
                                          "name": "Stark Organisation"
                                        },
                                        "companies": {
                                          "id": 551,
                                          "name": "Stark Company"
                                        },
                                        "totals": [
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0,
                                          0
                                        ],
                                        "device": [ ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ],
                        "compute_time_seconds": 0
                      }
                    ],
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
      parameters:
        - $ref: "#/components/parameters/reports_resellers"
        - $ref: "#/components/parameters/reports_organisations"
        - $ref: "#/components/parameters/reports_companies"
        - $ref: "#/components/parameters/reports_sites"
        - $ref: "#/components/parameters/reports_status_codes"
        - $ref: "#/components/parameters/reports_providers"


  '/biometrics/face_compare':
    post:
      tags:
        - Data
        - Facial Biometrics
      summary: Compare two faces and return probability of them being the same.
      description: |-
        This endpoint utilizes Amazon Rekognition, specifically [compare faces](https://docs.aws.amazon.com/rekognition/latest/APIReference/API_CompareFaces.html),
        to compare a source and target image containing one or many faces. Details of the matched and non-matched faces are turned for further logic decisions.
        
        Compares a face in the source input image with each of the 100 largest faces detected in the target input image. 
        If the source image contains multiple faces, the service detects the largest face and compares it with each face detected in the target image.

      operationId: postFaceCompare
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                source:
                  type: string
                  format: binary
                target:
                  type: string
                  format: binary
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Obtain an array of "compare face" items.
          content:
            application/json:
              schema:
                type: array
                items:
                  - $ref: "#/components/schemas/FaceCompareMatchedResponse"
                  - $ref: "#/components/schemas/FaceCompareNotMatchedResponse"

                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "faces_matched": [
                          {
                            "sharpness": 67.22731018066406,
                            "brightness": 78.88008880615234,
                            "contains_face": 99.99811553955078,
                            "emotions": null,
                            "smile": null,
                            "match_similarity": 99.99887084960938
                          }
                        ],
                        "faces_unmatched": [
                          {
                            "sharpness": 32.20803451538086,
                            "brightness": 69.8022689819336,
                            "contains_face": 99.99658966064453,
                            "emotions": null,
                            "smile": null
                          }
                        ]
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723628631562
                  }

  '/biometrics/customer/face':
    put:
      tags:
        - Data
        - Facial Biometrics
      summary: Find customer by facial biometric image.
      description: |-
        This endpoint utilizes Amazon Rekognition, specifically [SearchUsersByImage](https://docs.aws.amazon.com/rekognition/latest/APIReference/API_SearchUsersByImage.html),
        to compare a source image and find the corresponding Payway Customer. 

      operationId: putIdentifyCustomerByFace
      x-tag-permissions:
        - customers
        - companies
        - organisations
        - resellers
        - roles
        - users
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns customer object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CustomersResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "id": 1,
                        "email": "john.doe@gmail.com",
                        "first_name": "John",
                        "last_name": "Doe",
                        "contact_number": "+27876545611",
                        "customer_identification": "0456744907613",
                        "consent_number": true,
                        "consent_email": true,
                        "daily_booking_limit": 5,
                        "blocked": false,
                        "verified": true,
                        "email_sent_amount": 4,
                        "verify_token": "3305",
                        "companies_providers_id": 3,
                        "mifare_card_number": '38362837a8aam332',
                        "missed_bookings": 0,
                        "image_guid": "323d8592-8464-44b2-8683-51925057cda5",
                        "users": {
                          "id": 1,
                          "displayname": "Chris Groenewald",
                          "active": true
                        },
                        "resellers": {
                          "id": [
                            1
                          ],
                          "name": [
                            "IQT Holdings"
                          ],
                          "id_name": [
                            "1,IQT Holdings"
                          ]
                        },
                        "organisations": {
                          "id": 7,
                          "name": "IQ Telemetry Test Account"
                        },
                        "companies": {
                          "id": 7,
                          "name": "IQ Telemetry Test Account"
                        }
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }

  '/qr/device/{device_id}/{provider_id}':
    get:
      tags:
        - Data
        - QR Codes
      operationId: getQRDeviceProvider
      x-tag-permissions:
        - devices
        - companies
        - sites
        - host_hardware
        - asset_states
        - organisations
        - resellers
      summary: Get generated QR code for provider
      description: |-
        This endpoint is used to generate QR codes if a provider supports them. This allows customers to pay using QR codes.

      requestBody:
        required: false
        content:
          'application/json':
            schema:
              type: object
              additionalProperties: false
              properties:
                amount:
                  type: number
                  minimum: 0
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns a qr code data object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/QRCodeDeviceProviderResponse"
                example:
                  {
                    "success": true,
                    "data": {
                      "provider": "SnapScan",
                      "qr_string": "https://pos.snapscan.io/qr/AQ3SB_73?ID=IMEId4d4daf66818&Amount=1000",
                      "logo_url": "snapscan.png",
                      "logo_full_url": "https://payway3.iqt.co.za/images/snapscan.png"
                    },
                    "total_count": null,
                    "timestamp": 1723108298846
                  }
    parameters:
      - $ref: "#/components/parameters/deviceIdParam"
      - $ref: "#/components/parameters/providerIdParam"

  '/ota/publish':
    post:
      tags:
        - Data
        - Ota
      summary: Publish OTA for specified group.
      description: |-
        This endpoint is used to initiate OTA updates for all physical devices in the field.

      operationId: postPublishOta
      x-tag-permissions:
        - organisations
        - devices
        - sites
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              oneOf:
                - type: object
                  additionalProperties: false
                  properties:
                    organisation_id:
                      type: integer
                  required: [ "organisation_id" ]
                - type: array
                  items:
                    type: object
                    additionalProperties: false
                    properties:
                      organisation_id:
                        type: integer
                    required: [ "organisation_id" ]
                - type: object
                  additionalProperties: false
                  properties:
                    site_id:
                      type: integer
                  required: [ "site_id" ]
                - type: array
                  items:
                    type: object
                    additionalProperties: false
                    properties:
                      site_id:
                        type: integer
                    required: [ "site_id" ]
                - type: object
                  additionalProperties: false
                  properties:
                    device_id:
                      type: integer
                  required: [ "device_id" ]
                - type: array
                  items:
                    type: object
                    additionalProperties: false
                    properties:
                      device_id:
                        type: integer
                    required: [ "device_id" ]
      responses:
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '200':
          description: Returns result object created by query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PublishOtaResponse"
                example:
                  {
                    "success": true,
                    "data": [
                      {
                        "device_id": 2141,
                        "success": true
                      }
                    ],
                    "entries": 1,
                    "total_count": null,
                    "timestamp": 1723108298846
                  }

components:
  securitySchemes:
    XUserToken:
      type: apiKey
      in: header
      name: x-user-token
  schemas:
    AccessResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        operation_id:
          type: string
          description: |-
            Operation ids are plain text representations of the open-api resources, e.g deleteCustomers.
            These values can be found in the OpenAPI spec, and are defined under every endpoint type.
        can_access:
          type: boolean
        action:
          type: string
          enum: [ "read", "create", "delete", "update" ]
        modules:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
    RolesResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        company_id_list:
          type: array
          description: If array is empty, access to all companies linked to user. If not empty, only defined companies in array are accessible by user.
          items:
            type: integer
        site_id_list:
          type: array
          description: If array is empty, access to all sites linked to user. If not empty, only defined sites in array are accessible by user.
          items:
            type: integer
        device_id_list:
          type: array
          description: If array is empty, access to all devices linked to user. If not empty, only defined devices in array are accessible by user.
          items:
            type: integer
        is_reseller:
          type: boolean
        resellers:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        organisations:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        access_levels:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        access:
          type: object
          properties:
            id:
              type: array
              items:
                type: integer
            name:
              type: array
              items:
                type: string
            action:
              type: array
              items:
                type: string
    PreferencesResponse:
      type: object
      properties:
        reseller_logo:
          type: string
        organisation_logo:
          type: string
    UsersResponse:
      type: object
      properties:
        id:
          type: integer
        displayname:
          type: string
        email:
          type: string
        email_verified:
          type: boolean
        contact_number:
          type: string
        last_login_at:
          type: string
        google_id:
          type: string
        token:
          type: string
        last_login_error:
          type: string
        side_bar_toggled:
          type: string
        firebase_id:
          type: string
        currency:
          type: string
          description: Defines the type of current a user is using.
        delimiter:
          type: string
          description: Delimiter used in CSV/Table exports for frontend.
        proxy_user:
          type: boolean
          description: Special user that should only be used in certain cases.
        password_reset:
          type: boolean
          description: Define if password reset required.
        super_user:
          type: boolean
          description: Highest level of access in Payway system.
        qr_code:
          type: string
          description: Generated QR code used for first party payway applications.
        resellers:
          type: object
          description: All the resellers this user is linked to.
          properties:
            id:
              type: array
              items:
                type: integer
            name:
              type: array
              items:
                type: string
        organisations:
          type: object
          description: All the organisations this user is linked to.
          properties:
            id:
              type: array
              items:
                type: integer
            name:
              type: array
              items:
                type: string
        active:
          type: boolean
    AuthenticationResponse:
      type: object
      properties:
        id:
          type: integer
        token:
          type: string
          description: x-user-token used in all endpoints.
        contact_number:
          type: string
        currency:
          type: string
        delimiter:
          type: string
          description: Delimiter used in CSV/Table exports for frontend.
        displayname:
          type: string
        email:
          type: string
        email_verified:
          type: boolean
        firebase_id:
          type: string
        google_id:
          type: string
        sidebar_toggled:
          type: boolean
        super_admin:
          type: boolean
        active:
          type: boolean
    PasswordResetResponse:
      type: string
      description: Response returned by Firebase
    UserAccessResponse:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        access_id:
          type: integer
        can_access:
          type: boolean
    UserRolesResponse:
      type: object
      properties:
        id:
          type: integer
        roles:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        users:
          type: object
          properties:
            id:
              type: integer
            displayname:
              type: string
    ResellersOrganisationsResponse:
      type: object
      properties:
        id:
          type: integer
        reseller_id:
          type: integer
        organisation_id:
          type: integer
        reseller_name:
          type: string
        organisation_name:
          type: string
    UserAccessDetailResponse:
      type: object
      properties:
        users_access:
          type: object
          properties:
            id:
              type: array
              items:
                type: integer
            user_id:
              type: array
              items:
                type: integer
            access_id:
              type: array
              items:
                type: integer
            can_access:
              type: array
              items:
                type: boolean
        modules:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        access:
          type: object
          properties:
            id:
              type: array
              items:
                type: integer
            name:
              type: array
              items:
                type: string
            action:
              type: array
              items:
                type: string
            can_access:
              type: array
              items:
                type: boolean
    ResellersResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        address:
          type: string
        contact_number:
          type: string
        contact_person:
          type: string
        lat_lng:
          type: string
        logo_url:
          type: string
        active:
          type: boolean
    OrganisationsResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        address:
          type: string
        contact_number:
          type: string
        contact_person:
          type: string
        lat_lng:
          type: string
        logo_url:
          type: string
        active:
          type: boolean
        resellers:
          type: object
          properties:
            id:
              type: array
              items:
                type: integer
            name:
              type: array
              items:
                type: string
            id_name:
              type: array
              items:
                type: string
    CompaniesResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        address:
          type: string
        contact_number:
          type: string
        contact_person:
          type: string
        lat_lng:
          type: string
        email_template:
          type: string
          description: GZIPed string of custom HTML used for email templates.
        logo_url:
          type: string
        active:
          type: boolean
        resellers:
          type: object
          properties:
            id:
              type: array
              items:
                type: integer
            name:
              type: array
              items:
                type: string
            id_name:
              type: array
              items:
                type: string
        organisations:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
    SitesResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        address:
          type: string
        contact_number:
          type: string
        contact_person:
          type: string
        lat_lng:
          type: string
        allow_booking:
          type: boolean
        mifare_site_id:
          type: integer
        active:
          type: boolean
        resellers:
          type: object
          properties:
            id:
              type: array
              items:
                type: integer
            name:
              type: array
              items:
                type: string
            id_name:
              type: array
              items:
                type: string
        organisations:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        companies:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
    DevicesResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        uid:
          type: string
          description: Unique identification for the device.
        imsi:
          type: string
          description: International Mobile Subscriber Identity or Service Set Identifier (SSID).
        polling_frequency:
          type: integer
          description: Expected number of polled calls from the device.
        scale_factor:
          type: integer
          description: The Bill Scale Factor when using Bill Emulation mode for MDB devices.
        time_zone:
          type: integer
          description: Timezone offset of the device in hours.
        screen_fitted:
          type: boolean
          description: Indication if an info screen is fitted together with the device on the machine.
        callback:
          type: integer
        calls:
          type: integer
        local_time:
          type: string
        vmc_expansion_id:
          type: string
        timestamp:
          type: string
          description: Time of creation.
        time_offset:
          type: integer
        firmware_version:
          type: string
        mdb_online:
          type: boolean
        seq:
          type: integer
        csq:
          type: string
        dip:
          type: integer
        life_days:
          type: integer
        multiplier:
          type: integer
          description: Integer Value to multiply the incoming paid value by.
        divider:
          type: integer
          description: Integer Value to divide the incoming paid value by.
        unit_price:
          type: number
          description: The price per unit.
        ssid:
          type: string
          description: Service Set Identifier for WiFi devices.
        password:
          type: string
          description: Service Set Identifier password for WiFi Devices.
        connected_at:
          type: string
        peer_host:
          type: string
        async_ratio:
          type: string
        protocol:
          type: string
        channels:
          type: integer
        minutes_connected:
          type: integer
        heartbeat_rate:
          type: string
        status_code:
          type: integer
        asset_state_id:
          type: integer
        coupon_price:
          type: integer
          description: The price per unit used for MiFare Payments.
        short_name:
          type: string
          description: Short name description used on Payment Kiosks or POS.
        allow_booking:
          type: boolean
        machine_serial_number:
          type: string
          description: Serial number of the physical machine.
        online:
          type: boolean
          description: Boolean representing the connection of the device.
        last_online:
          type: string
          description: The last time we saw the device had an activate connection with MQTT.
        last_transaction_date:
          type: string
          description: The last time any transaction occurred on the device.
        active:
          type: boolean
        resellers:
          type: object
          properties:
            id:
              type: array
              items:
                type: integer
            name:
              type: array
              items:
                type: string
            id_name:
              type: array
              items:
                type: string
        organisations:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        companies:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        sites:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        status_codes:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        asset_states:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        pos_types:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            version:
              type: string
        host_hardware:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        emulations:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
    DevicesActivateResponse:
      type: object
      properties:
        device_id:
          type: integer
        reason:
          type: string
        success:
          type: boolean
    LogsFatalResponse:
      type: object
      properties:
        id:
          type: integer
        webhook_timestamp:
          type: integer
        provider:
          type: string
        provider_id:
          type: integer
        uuid:
          type: string
        application:
          type: string
        application_timestamp:
          type: integer
        application_version:
          type: string
        calling_url:
          type: string
        reason:
          type: string
        severity:
          type: string
        payload:
          type: string
    LogsCombinedResponse:
      type: object
      properties:
        id:
          type: integer
        webhook_timestamp:
          type: integer
        provider:
          type: string
        provider_id:
          type: integer
        uuid:
          type: string
        application:
          type: string
        application_timestamp:
          type: integer
        application_version:
          type: string
        calling_url:
          type: string
        reason:
          type: string
        severity:
          type: string
        payload:
          type: string
    LogsInfoResponse:
      type: object
      properties:
        id:
          type: integer
        webhook_timestamp:
          type: integer
        provider:
          type: string
        provider_id:
          type: integer
        uuid:
          type: string
        application:
          type: string
        application_timestamp:
          type: integer
        application_version:
          type: string
        calling_url:
          type: string
        reason:
          type: string
        severity:
          type: string
        payload:
          type: string
    LogsWarningResponse:
      type: object
      properties:
        id:
          type: integer
        webhook_timestamp:
          type: integer
        provider:
          type: string
        provider_id:
          type: integer
        uuid:
          type: string
        application:
          type: string
        application_timestamp:
          type: integer
        application_version:
          type: string
        calling_url:
          type: string
        reason:
          type: string
        severity:
          type: string
        payload:
          type: string
    ProvidersResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        logo_url:
          type: string
          description: Link to png used for logo
        color:
          type: string
          description: Hex code colour
        active:
          type: boolean
    PosTypesResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        version:
          type: string
          description: Version of firmware used.
        active:
          type: boolean
    HostHardwareResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        cycle_time:
          type: integer
          description: Time in minutes
        notes:
          type: string
          description: Used to add any additional notes or information about the hardware.
        cycle_signal_source:
          type: integer
          description: Indicates whether the cycle signal is coming from the machine (0) or theoretical time (1).
        pwm_on_time:
          type: integer
          description: Used to configure coin pulse on time for machine.
        pwm_off_time:
          type: integer
          description: Used to configure coin pulse off time for machine.
        active:
          type: boolean
        resellers:
          type: object
          properties:
            id:
              type: array
              items:
                type: integer
        emulations:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        cycle_signal_source_name:
          type: string
    StatusCodesResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          description: Name of event
        code:
          type: integer
        color:
          type: string
          description: Hex code colour
        refund_sale:
          type: boolean
          description: Indicates if this status code permits refund actions.
        success:
          type: boolean
          description: Indicates if this status code is a success code.
        active:
          type: boolean
    EmulationsResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        active:
          type: boolean
    ConnectivityHistoryResponse:
      type: object
      properties:
        id:
          type: integer
        date:
          type: string
        device_id:
          type: integer
        pf0:
          type: integer
        pf1:
          type: integer
        pf2:
          type: integer
        pf3:
          type: integer
        pf4:
          type: integer
        pf5:
          type: integer
        pf6:
          type: integer
        pf7:
          type: integer
        pf8:
          type: integer
        pf9:
          type: integer
        pf10:
          type: integer
        pf11:
          type: integer
        pf12:
          type: integer
        pf13:
          type: integer
        pf14:
          type: integer
        pf15:
          type: integer
        pf16:
          type: integer
        pf17:
          type: integer
        pf18:
          type: integer
        pf19:
          type: integer
        pf20:
          type: integer
        pf21:
          type: integer
        pf22:
          type: integer
        pf23:
          type: integer
        sf0:
          type: integer
        sf1:
          type: integer
        sf2:
          type: integer
        sf3:
          type: integer
        sf4:
          type: integer
        sf5:
          type: integer
        sf6:
          type: integer
        sf7:
          type: integer
        sf8:
          type: integer
        sf9:
          type: integer
        sf10:
          type: integer
        sf11:
          type: integer
        sf12:
          type: integer
        sf13:
          type: integer
        sf14:
          type: integer
        sf15:
          type: integer
        sf16:
          type: integer
        sf17:
          type: integer
        sf18:
          type: integer
        sf19:
          type: integer
        sf20:
          type: integer
        sf21:
          type: integer
        sf22:
          type: integer
        sf23:
          type: integer
    CompaniesProvidersResponse:
      type: object
      properties:
        id:
          type: integer
        merchant_id:
          type: string
        pos_token:
          type: string
          description: API Key or other forms of authentication.
        provider_site_id:
          type: string
        callback_url:
          type: string
          description: If callback authentication, specify the URL here.
        allow_refund:
          type: boolean
        active:
          type: boolean
        resellers:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        organisations:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        companies:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        providers:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            color:
              type: string
            logo_url:
              type: string
            logo_full_url:
              type: string
            qr_payments:
              type: boolean
            qr_string:
              type: string
            active:
              type: boolean
    TransactionsResponse:
      type: object
      properties:
        id:
          type: integer
        acknowledged:
          type: integer
        uid:
          type: string
        amount:
          type: number
        payment_id:
          type: string
        payment_reference:
          type: string
        time:
          type: string
        timestamp:
          type: integer
        payment_date:
          type: string
        customer_name:
          type: string
        multiplier:
          type: integer
        divider:
          type: integer
        credit:
          type: number
        item:
          type: integer
        retry:
          type: integer
        uuid:
          type: string
        start_run:
          type: integer
        start_time:
          type: integer
        end_run:
          type: integer
        end_time:
          type: integer
        currency_code:
          type: string
          description: Type of currency used in transaction.
        source:
          type: string
          description: Where/what processed our request. Can be used to identify source of processed payment.
        created_at:
          type: string
        status_code:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        providers:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            logo_url:
              type: string
            color:
              type: string
        emulations:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        devices:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            uid:
              type: string
        sites:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        companies:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        organisations:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
    AssetStatesResponse:
      type: object
      properties:
        id:
          type: integer
        state:
          type: string
        reseller_id:
          type: integer
        active:
          type: boolean
        resellers:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
    RefundsResponse:
      type: object
      properties:
        id:
          type: integer
        company_id:
          type: integer
        organisations_id:
          type: integer
        site_id:
          type: integer
        provider_id:
          type: integer
        transaction_id:
          type: integer
        device_uid:
          type: string
        payment_reference:
          type: string
        refund_reference:
          type: string
        amount:
          type: number
        status:
          type: string
        timestamp:
          type: string
    DeviceActivityAuditResponse:
      type: object
      properties:
        id:
          type: integer
        notes:
          type: string
          description: Anything of note or extra information can be added here.
        timestamp:
          type: string
          description: Time of entry creation in UTC.
        devices:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            uid:
              type: string
        sites:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        users:
          type: object
          properties:
            id:
              type: integer
            displayname:
              type: string
            contact_number:
              type: string
        asset_states:
          type: object
          properties:
            id:
              type: integer
            state:
              type: string
        resellers:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            contact_number:
              type: string
            logo_url:
              type: string
    CustomersResponse:
      type: object
      properties:
        id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        customer_identification:
          type: string
        email:
          type: string
        contact_number:
          type: string
        consent_number:
          type: boolean
        consent_email:
          type: boolean
        blocked:
          type: boolean
          description: Prevents user from accessing the API.
        daily_booking_limit:
          type: integer
          description: The total number of bookings a user can make for a day.
        reserved_booking_limit:
          type: integer
          description: The total number of reserved bookings a user can have at once.
        verified:
          type: boolean
          description: Has the user verified their email?
        email_sent_amount:
          type: integer
        verify_token:
          type: string
        companies_providers_id:
          type: integer
        mifare_card_number:
          type: string
        missed_bookings:
          type: number
        image_guid:
          type: string
          description: Identification of biometric face image on disk.
        users:
          type: object
          properties:
            id:
              type: integer
            displayname:
              type: string
            active:
              type: boolean
        resellers:
          type: object
          properties:
            id:
              type: array
              items:
                type: integer
            name:
              type: array
              items:
                type: string
            id_name:
              type: array
              items:
                type: string
        organisations:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        companies:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        image:
          type: object
          properties:
            full_url:
              type: string
    BookingsStatusResponse:
      type: object
      properties:
        id:
          type: integer
        status:
          type: string
    BookingsResponse:
      type: object
      properties:
        id:
          type: integer
        date:
          type: string
        booking_guid:
          type: array
          items:
            type: string
        status:
          type: array
          items:
            type: integer
        version:
          type: array
          items:
            type: integer
        customer_id:
          type: array
          items:
            type: integer
        slot:
          type: array
          items:
            type: integer
        resellers:
          type: object
          properties:
            id:
              type: array
              items:
                type: integer
            name:
              type: array
              items:
                type: string
            id_name:
              type: array
              items:
                type: string
        organisations:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        companies:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        sites:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        devices:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            uid:
              type: string
    MissedBookingsResponse:
      type: object
      properties:
        id:
          type: integer
        date:
          type: string
        slot:
          type: integer
        bookings_guid:
          type: string
        customers:
          type: object
          properties:
            id:
              type: integer
            customer_identification:
              type: string
            missed_bookings:
              type: integer
        organisations:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        companies:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        sites:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        devices:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            uid:
              type: string
    BookingsBookedResponse:
      type: object
      properties:
        id:
          type: integer
        status:
          type: integer
        booking_guid:
          type: string
        resellers:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        organisations:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        companies:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        sites:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        devices:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            uid:
              type: string
        customers:
          type: object
          properties:
            id:
              type: integer
            first_name:
              type: string
            last_name:
              type: string
            identification:
              type: string
            email:
              type: string
            contact_number:
              type: string
            daily_booking_limit:
              type: integer
    NotificationsResponse:
      type: object
      properties:
        id:
          type: integer
        summary:
          type: string
        description:
          type: string
        created_at:
          type: string
        reseller_id:
          type: array
          items:
            type: integer
        organisations_id:
          type: array
          items:
            type: integer
        banner:
          type: boolean
        super_admin:
          type: boolean
          description: Was this notification made by a super_admin user?
        active:
          type: boolean
    ActivityLogsResponse:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        timestamp:
          type: string
        action:
          type: string
          description: HTTP request type.
        operation_id:
          type: string
          description: OpenAPI operation / path identifier.
        body:
          type: string
          description: All contents of the requests body.
        parameters:
          type: string
          description: All query parameters of the request.
        user_displayname:
          type: string
          description: This is used for historical reasons when user is deleted.
        users:
          type: object
          properties:
            id:
              type: integer
            displayname:
              type: string
            email:
              type: string
            super_admin:
              type: boolean
            proxy_user:
              type: boolean
    ModulesResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    AccessLevelsResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    UsersAccessResponse:
      type: object
      properties:
        module:
          type: string
        access:
          type: object
          properties:
            create:
              type: boolean
            read:
              type: boolean
            update:
              type: boolean
            delete:
              type: boolean
    TransactionsTotalsCurrentPreviousResponse:
      type: object
      properties:
        current_period:
          type: object
          properties:
            day_of_week:
              type: array
              description: Time period, in weeks, provided for relative data requested.
              items:
                type: string
            date:
              type: array
              description: Time period, in dates, provided for relative data requested.
              items:
                type: string
            total_amount:
              type: array
              description: Total sales value for given time period.
              items:
                type: number
            total_count:
              type: array
              description: Total number of sales in given time period.
              items:
                type: integer
        previous_period:
          type: object
          properties:
            day_of_week:
              type: array
              description: Time period, in weeks, provided for relative data requested.
              items:
                type: string
            date:
              type: array
              description: Time period, in dates, provided for relative data requested.
              items:
                type: string
            total_amount:
              type: array
              description: Total sales value for given time period.
              items:
                type: number
            total_count:
              type: array
              description: Total number of sales in given time period.
              items:
                type: integer
        current_grand_total_amount:
          type: number
          description: Total sales value in specified period for current period.
        previous_grand_total_amount:
          type: number
          description: Total sales value in specified period for previous period.
        delta_grand_total_amount:
          type: number
          description: Difference between current total sales value and previous total sales value.
        delta_grand_total_amount_perc:
          type: string
          description: Percentage difference between current total sales value and previous total sales value.
        current_grand_total_count:
          type: number
          description: Total sales amount in specified period for current period.
        previous_grand_total_count:
          type: number
          description: Total sales amount in specified period for current period.
        delta_grand_total_count:
          type: number
          description: Difference between total sales amount in specified period.
        delta_grand_total_count_perc:
          type: string
          description: Percentage difference between total sales amount in specified period.
        currency:
          type: string
          description: Type of currency all values are calculated in.
    TransactionsTotalsByProviderInPeriodResponse:
      type: object
      properties:
        total_amount:
          type: number
          description: Total sales value of specific provider.
        total_count:
          type: integer
          description: Total sales amount of specific provider.
        provider_name:
          type: string
          description: The name of the provider.
        provider_logo_url:
          type: string
          description: Logo URL path for provider.
        provider_color:
          type: string
          description: Providers colour used in frontend.
        perc_total:
          type: number
          description: Percentage of certain providers total transactions amount.
        currency:
          type: string
          description: Type of currency report is calculated in.
        grand_total_count:
          type: integer
          description: Total amount of transactions amount.
    TransactionsTotalsByStatusCodeInPeriodResponse:
      type: object
      properties:
        total_amount:
          type: number
          description: Total sales value of specific provider.
        total_count:
          type: integer
          description: Total sales amount of specific provider.
        status_code:
          type: string
          description: Payment status code.
        status_name:
          type: string
          description: Description of transaction status.
        status_color:
          type: string
          description: Colour used for frontend.
        perc_total:
          type: number
          description: Percentage total across all status codes.
        currency:
          type: string
          description: Type of currency reports are calculated in.
        grand_total_count:
          type: integer
          description: Total amount of status code.
    TotalDevicesByCurrentStatusResponseOne:
      type: object
      properties:
        online:
          type: boolean
        total:
          type: number
        grand_total:
          type: number
        perc_total:
          type: number
    TotalDevicesByCurrentStatusResponseTwo:
      type: object
      properties:
        code:
          type: number
        name:
          type: string
        color:
          type: string
        total:
          type: number
        grand_total:
          type: number
        perc_total:
          type: number
    FaceCompareMatchedResponse:
      type: object
      properties:
        faces_matched:
          type: array
          items:
            type: object
            properties:
              sharpness:
                type: number
                format: float
              brightness:
                type: number
                format: float
              contains_face:
                type: number
                format: float
                minimum: 0
                maximum: 100
                description: Level of confidence that what the bounding box contains is a face.
              emotions:
                type: object
                properties:
                  confident:
                    type: number
                    description: Level of confidence in the determination.
                  emotion:
                    type: string
                    enum:
                      - HAPPY
                      - SAD
                      - ANGRY
                      - CONFUSED
                      - DISGUSTED
                      - SURPRISED
                      - CALM
                      - UNKNOWN
                      - FEAR
                    description: Type of emotion detected.
              smile:
                type: object
                properties:
                  confident:
                    type: number
                    description: Level of confidence in the determination.
                  value:
                    type: boolean
                    description: Boolean value that indicates whether the face is smiling or not.
              match_similarity:
                type: number
                description: Level of confidence that the faces match.
                format: float
                minimum: 0
                maximum: 100
    FaceCompareNotMatchedResponse:
      type: object
      properties:
        faces_matched:
          type: array
          items:
            type: object
            properties:
              sharpness:
                type: number
                format: float
              brightness:
                type: number
                format: float
              contains_face:
                type: number
                format: float
                minimum: 0
                maximum: 100
                description: Level of confidence that what the bounding box contains is a face.
              emotions:
                type: object
                properties:
                  confident:
                    type: number
                    description: Level of confidence in the determination.
                  emotion:
                    type: string
                    enum:
                      - HAPPY
                      - SAD
                      - ANGRY
                      - CONFUSED
                      - DISGUSTED
                      - SURPRISED
                      - CALM
                      - UNKNOWN
                      - FEAR
                    description: Type of emotion detected.
              smile:
                type: object
                properties:
                  confident:
                    type: number
                    description: Level of confidence in the determination.
                  value:
                    type: boolean
                    description: Boolean value that indicates whether the face is smiling or not.
    LogoImageUploadResponse:
      type: object
      properties:
        file_name:
          type: string
          description: Name of file uploaded/created.
        success:
          type: boolean
    LogoImageDeleteResponse:
      type: object
      properties:
        file_name:
          type: string
          description: Name of file deleted.
        success:
          type: boolean
    QRCodeDeviceProviderResponse:
      type: object
      properties:
        provider:
          type: string
        qr_string:
          type: string
        logo_url:
          type: string
        logo_full_url:
          type: string
    PublishOtaResponse:
      type: object
      properties:
        success:
          type: boolean
        device_id:
          type: integer
        organisation_id:
          type: integer
        site_id:
          type: integer

    # Common
    DeleteResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: string
        timestamp:
          type: string
    AccountNotActiveResponse:
      type: object
      properties:
        err:
          type: string
          description: User has been deactivated.
      example:
        {
          "err": "Account is not active. [John Doe]"
        }
    AccountPasswordResetResponse:
      type: object
      properties:
        err:
          type: string
          description: User needs to reset their password before being allowed login access again.
      example:
        {
          "err": "Please reset password before login. [John Doe]"
        }
    UnauthorizedResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          type: string
          description: Error returned by backend.
        details:
          type: string
          description: Any extra information around the error.
        type:
          type: string
          description: Type of error encountered.
        timestamp:
          type: string
      example:
        {
          "success": false,
          "error": "Account not found or setup correctly.",
          "details": "x-user-token: undefined",
          "type": "internal",
          "timestamp": 1723108298846
        }
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
        error:
          type: string
          description: Error returned by backend.
        details:
          type: string
          description: Any extra information around the error.
        type:
          type: string
          description: Type of error encountered.
        timestamp:
          type: string
      example:
        {
          "success": false,
          "error": "insert or update on table \"asset_states\" violates foreign key constraint \"asset_states_resellers_id_fk\"",
          "details": null,
          "type": "internal",
          "timestamp": 1723108298846
        }
    numberIndex:
      type: integer
      minimum: 1
    selectAll:
      type: string
      enum:
        - _all

    # Status codes
    ValidationFailResponse:
      type: object
      properties:
        err:
          type: string
      example:
        {
          "err": [
            {
              "instancePath": "/requestBody",
              "schemaPath": "#/properties/requestBody/additionalProperties",
              "keyword": "additionalProperties",
              "params": {
                "additionalProperty": "emulation_id"
              },
              "message": "must NOT have additional properties"
            }
          ]
        }

  parameters:
    idParam:
      in: path
      name: id
      required: true
      schema:
        oneOf:
          - $ref: "#/components/schemas/numberIndex"
          - $ref: "#/components/schemas/selectAll"
      examples:
        id:
          value: 12
          summary: Search by specific primary key aka "id".
        all:
          value: '_all'
          summary: Search by all accessible objects.
    idSingleParam:
      in: path
      name: id
      required: true
      schema:
        allOf:
          - $ref: "#/components/schemas/numberIndex"
      examples:
        id:
          value: 12
          summary: Search by specific primary key aka "id".
    deviceIdParam:
      in: path
      name: device_id
      required: true
      schema:
        allOf:
          - $ref: "#/components/schemas/numberIndex"
      examples:
        id:
          value: 12
          summary: Search by specific device
    providerIdParam:
      in: path
      name: provider_id
      required: true
      schema:
        oneOf:
          - $ref: "#/components/schemas/numberIndex"
          - $ref: "#/components/schemas/selectAll"
      examples:
        id:
          value: 12
          summary: Search by specific provider
    tokenParam:
      in: path
      name: id
      required: true
      schema:
        allOf:
          - type: string
            pattern: ^[a-z A-Z-0-9]+
      examples:
        token:
          value: "7ecc242c-c40d-4fd1-ba02-62220b4t8c6b"
          summary: Search by user token.

    offsetParam:
      in: query
      name: offset
      required: false
      schema:
        type: integer
        minimum: 0
      example: 1

    limitParam:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: 0
      example: 3

    orderParam:
      in: query
      name: order_by
      required: false
      schema:
        anyOf:
          - type: string
            pattern: ^[A-Za-z\._]+:(asc|desc)$
          - type: array
            items:
              type: string
              pattern: ^[A-Za-z\._]+:(asc|desc)$
      examples:
        asc:
          value: "field:asc"
          summary: Filters the field specific by ascending order.
        desc:
          value: "field:desc"
          summary: Filters the field specific by descending order.
    smallerThanParam:
      in: query
      name: st
      required: false
      schema:
        anyOf:
          - type: string
            anyOf:
              - pattern: ^[\w.]+:([+-]?([0-9]*[.])?[0-9]+)$
              - pattern: ^[\w.]+:\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$
              - pattern: ^[\w.]+:\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}[+-|%20]\d{2}:\d{2}
          - type: array
            items:
              anyOf:
                - type: string
                  pattern: ^[\w.]+:([+-]?([0-9]*[.])?[0-9]+)$
                - type: string
                  pattern: ^[\w.]+:\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$
                - type: string
                  pattern: ^[\w.]+:((?:(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}(?:\.\d+)?))(Z|[\+-]\d{2}:\d{2})?)$
      examples:
        smallerThan:
          value: "field_name:100"
          summary: Filters the field smaller than provided number.
        smallerThanDate:
          value: "field_name:2024-04-10 00:00:00"
          summary: Filters the field smaller than the provided date.
        greaterThanDate:
          value: "field_name:2024-10-09T12:21:26+05:30"
          summary: Filters the field smaller than the provided date with timestamp.
    greaterThanParam:
      in: query
      name: gt
      required: false
      schema:
        anyOf:
          - type: string
            anyOf:
              - pattern: ^[\w.]+:([+-]?([0-9]*[.])?[0-9]+)$
              - pattern: ^[\w.]+:\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$
              - pattern: ^[\w.]+:\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}[+-|%20]\d{2}:\d{2}
          - type: array
            items:
              anyOf:
                - type: string
                  pattern: ^[\w.]+:([+-]?([0-9]*[.])?[0-9]+)$
                - type: string
                  pattern: ^[\w.]+:\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$
                - type: string
                  pattern: ^[\w.]+:((?:(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}(?:\.\d+)?))(Z|[\+-]\d{2}:\d{2})?)$
      examples:
        greaterThanEqual:
          value: "field_name:100"
          summary: Filters the field greater than provided number.
        greaterThanEqualDate:
          value: "field_name:2024-04-10 00:00:00"
          summary: Filters the field greater than the provided date.
        greaterThanDate:
          value: "field_name:2024-10-09T12:21:26+05:30"
          summary: Filters the field smaller than the provided date with timestamp.
    smallerThanEqualParam:
      in: query
      name: ste
      required: false
      schema:
        anyOf:
          - type: string
            anyOf:
              - pattern: ^[\w.]+:([+-]?([0-9]*[.])?[0-9]+)$
              - pattern: ^[\w.]+:\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$
              - pattern: ^[\w.]+:\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}[+-|%20]\d{2}:\d{2}
          - type: array
            items:
              anyOf:
                - type: string
                  pattern: ^[\w.]+:([+-]?([0-9]*[.])?[0-9]+)$
                - type: string
                  pattern: ^[\w.]+:\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$
                - type: string
                  pattern: ^[\w.]+:((?:(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}(?:\.\d+)?))(Z|[\+-]\d{2}:\d{2})?)$
      examples:
        smallerThanEqual:
          value: "field_name:100"
          summary: Filters the field smaller than and equal to provided number.
        smallerThanEqualDate:
          value: "field_name:2024-04-10 00:00:00"
          summary: Filters the field smaller than and equal to the provided date.
        greaterThanDate:
          value: "field_name:2024-10-09T12:21:26+05:30"
          summary: Filters the field smaller than the provided date with timestamp.
    greaterThanEqualParam:
      in: query
      name: gte
      required: false
      schema:
        anyOf:
          - type: string
            anyOf:
              - pattern: ^[\w.]+:([+-]?([0-9]*[.])?[0-9]+)$
              - pattern: ^[\w.]+:\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$
              - pattern: ^[\w.]+:\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}[+-|%20]\d{2}:\d{2}
          - type: array
            items:
              anyOf:
                - type: string
                  pattern: ^[\w.]+:([+-]?([0-9]*[.])?[0-9]+)$
                - type: string
                  pattern: ^[\w.]+:\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$
                - type: string
                  pattern: ^[\w.]+:((?:(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}(?:\.\d+)?))(Z|[\+-]\d{2}:\d{2})?)$
      examples:
        smallerThanEqual:
          value: "field_name:100"
          summary: Filters the field greater than and equal to provided number.
        smallerThanEqualDate:
          value: "field_name:2024-04-10 00:00:00"
          summary: Filters the field greater than and equal to the provided date.
        greaterThanDate:
          value: "field_name:2024-10-09T12:21:26+05:30"
          summary: Filters the field smaller than the provided date with timestamp.

    countParam:
      in: query
      name: count_entries
      required: false
      schema:
        type: boolean
      example: true

    others:
      in: query
      name: field_name
      schema:
        additionalProperties: true
      examples:
        textContaining:
          value: "%Store%"
          summary: Searches in specific field for text containing the word "Store".
        textStart:
          value: "Store%"
          summary: Searches in specific field for text starting with the word "Store".
        textEnd:
          value: "%Store"
          summary: Searches in specific field for text ending with the word "Store".
        textFind:
          value: "Store"
          summary: Searches in specific field for text equaling to "Store".
        numberFind:
          value: 108
          summary: Searches in specific field for number equaling to "108".
        dateFind:
          value: "2024-08-01 00:00:00"
          summary: Searches in specific field for date equaling to "2024-08-01 00:00:00".
        multipleParam:
          value: "1,2,10"
          summary: Searches in specific field for 1 OR 2 OR 10.

    reports_start_time:
      in: query
      name: start_time
      schema:
        additionalProperties: true
        anyOf:
          - type: string
            anyOf:
              - pattern: ([+-]?([0-9]*[.])?[0-9]+)$
              - pattern: \d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$
              - pattern: \d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}[+-|%20]\d{2}:\d{2}
          - type: array
            items:
              anyOf:
                - type: string
                  pattern: ([+-]?([0-9]*[.])?[0-9]+)$
                - type: string
                  pattern: \d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$
                - type: string
                  pattern: ((?:(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}(?:\.\d+)?))(Z|[\+-]\d{2}:\d{2})?)$
      example:
        start_time:
          value: "2024-10-23"
          summary: Returns data with start time specified.
    reports_end_time:
      in: query
      name: start_time
      schema:
        additionalProperties: true
        anyOf:
          - type: string
            anyOf:
              - pattern: ([+-]?([0-9]*[.])?[0-9]+)$
              - pattern: \d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$
              - pattern: \d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}[+-|%20]\d{2}:\d{2}
          - type: array
            items:
              anyOf:
                - type: string
                  pattern: ([+-]?([0-9]*[.])?[0-9]+)$
                - type: string
                  pattern: \d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$
                - type: string
                  pattern: ((?:(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}:\d{2}(?:\.\d+)?))(Z|[\+-]\d{2}:\d{2})?)$
      examples:
        start_time:
          value: "2024-10-30"
          summary: Returns data with end time specified.
    reports_resellers:
      in: query
      name: resellers
      schema:
        additionalProperties: true
        type: string
      examples:
        resellers:
          value: "1,2,10,24"
          summary: Search by specified resellers.
    reports_organisations:
      in: query
      name: organisations
      schema:
        additionalProperties: true
        type: string
      examples:
        organisations:
          value: "1,2,10,24"
          summary: Search by specified organisations.
    reports_companies:
      in: query
      name: companies
      schema:
        additionalProperties: true
        type: string
      examples:
        companies:
          value: "6"
          summary: Search by specified companies.
    reports_sites:
      in: query
      name: sites
      schema:
        additionalProperties: true
        type: string
      examples:
        sites:
          value: "37,67"
          summary: Search by specified sites.
    reports_devices:
      in: query
      name: devices
      schema:
        additionalProperties: true
        type: string
      examples:
        devices:
          value: "104"
          summary: Search by specified device.
    reports_providers:
      in: query
      name: providers
      schema:
        additionalProperties: true
        type: string
      examples:
        providers:
          value: "5,1,8,9"
          summary: Search by specified providers.
    reports_status_codes:
      in: query
      name: status_codes
      schema:
        additionalProperties: true
        type: string
      examples:
        status_codes:
          value: "1,2"
          summary: Search by specified status codes.
    reports_emulations:
      in: query
      name: emulations
      schema:
        additionalProperties: true
        type: string
      examples:
        emulations:
          value: "4"
          summary: Search by specified emulations.
    reports_success:
      in: query
      name: success
      schema:
        additionalProperties: true
        type: boolean
      examples:
        success:
          value: true
          summary: Search by specified success.
security:
  - XUserToken: [ ]


